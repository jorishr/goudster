/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

* {
  padding: 0;
  border: 0;
  box-sizing: border-box; }

html {
  height: 100%;
  scroll-behavior: smooth; }

body {
  font-family: 'Montserrat', sans-serif;
  font-weight: 400;
  min-height: 100%;
  width: 100%;
  height: 100%;
  background-color: #010101;
  color: #FFFFC0;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column; }
  body .page-content {
    -webkit-box-flex: 1;
            flex-grow: 1; }

a {
  text-decoration: none;
  color: #FFFFC0; }

a:focus {
  outline: #f35000 solid 0.5px; }

img {
  width: 100%;
  max-width: 100%;
  height: auto; }

ul {
  list-style-type: none; }

h3 {
  line-height: 1.75; }

.antispm {
  display: none; }

.modal {
  display: none;
  background-color: #7A2800;
  opacity: .95;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 50; }
  .modal .modal__img,
  .modal .modal__text {
    width: 80%;
    margin: 0 auto;
    text-align: center; }
  .modal .modal__img {
    padding: 2em 2em 0 2em; }
  .modal .modal__img img {
    width: 100%; }
  .modal .modal__text {
    margin-bottom: 2em; }
  .modal .form-row {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column; }
    .modal .form-row label span {
      display: block;
      text-align: center;
      font-size: 1.25rem;
      font-weight: 700;
      width: 100%;
      margin-bottom: 1em; }
    .modal .form-row label span.store {
      width: 100%;
      font-size: 1rem;
      margin-top: 1em;
      margin-bottom: .75em; }
    .modal .form-row label .form__btns {
      display: -webkit-box;
      display: flex;
      -webkit-box-pack: center;
              justify-content: center;
      flex-wrap: wrap;
      width: 100%; }
    .modal .form-row button.btn {
      background-color: #2A8C00;
      color: #FFF9F6;
      text-transform: uppercase;
      font-size: 1rem;
      font-weight: 700;
      margin-right: 1em; }
    .modal .form-row button:hover {
      background-color: #2A8C00; }
    .modal .form-row a {
      font-size: 1rem;
      font-weight: 700;
      padding: 1em 1.25em;
      text-transform: uppercase;
      color: #FFF9F6; }
    .modal .form-row a:hover {
      background-color: #f35000; }
    .modal .form-row input {
      position: absolute;
      width: 0;
      height: 0;
      opacity: 0;
      cursor: pointer; }
    .modal .form-row .checkbox-custom {
      display: block;
      position: relative;
      height: 25px;
      width: 25px;
      background-color: #FFF9F6;
      margin: 0 auto; }
    .modal .form-row .checkbox-custom:hover {
      background-color: #555;
      cursor: pointer; }
    .modal .form-row input:checked ~ .checkbox-custom {
      background-color: #555; }
    .modal .form-row .checkbox-custom::after {
      display: none;
      content: '';
      position: absolute;
      left: 7px;
      top: 4px;
      width: 5px;
      height: 10px;
      border: solid #FFF9F6;
      border-width: 0 4px 4px 0;
      /* border-radius: 8px; */
      -webkit-transform: rotate(45deg);
              transform: rotate(45deg); }
    .modal .form-row input:checked ~ .checkbox-custom::after {
      display: block; }

.modal.in-view {
  display: block; }

@media screen and (min-width: 425px) {
  .modal .modal__img img {
    width: 70%; } }

@media screen and (min-width: 786px) {
  .modal .modal__img,
  .modal .modal__text {
    max-width: 500px; }
  .modal .modal__text {
    font-size: 1rem; }
  .modal .form-row label span {
    font-size: 1.25rem;
    margin-bottom: 1em; }
  .modal .form-row label span.store {
    font-size: 1.25rem; } }

.modal.hide {
  display: none; }

.privacy-bar {
  display: none;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  width: 75%;
  max-width: 350px;
  height: 60%;
  max-height: 300px;
  position: fixed;
  bottom: 15%;
  left: 5%;
  z-index: 20;
  padding: 1em;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f35000), to(#010101));
  background-image: linear-gradient(#f35000, #010101);
  opacity: .95;
  border-radius: .25em; }
  .privacy-bar i {
    position: absolute;
    right: .5em;
    top: .5em; }
  .privacy-bar p {
    font-size: .75rem;
    line-height: 1.75; }
  .privacy-bar .btn {
    font-size: .75rem;
    margin-bottom: 1em;
    padding: 1em;
    width: unset; }

.privacy-bar.in-view {
  display: -webkit-box;
  display: flex; }

.privacy-bar.hide {
  display: none; }

/*
    ##########
    BASE STYLE
    ##########

- mobile first approach: base style + media query
- base style gets for all pages
- landing class gets added through js on homepage only
*/
header {
  width: 100%;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: end;
          justify-content: flex-end; }
  header .navbar {
    width: 100%;
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: justify;
            justify-content: space-between;
    margin: 0 auto;
    position: relative; }
    header .navbar a.logo {
      display: -webkit-box;
      display: flex;
      -webkit-box-pack: center;
              justify-content: center;
      -webkit-box-align: start;
              align-items: flex-start; }
      header .navbar a.logo i {
        margin: 2em 0 0 1em; }
      header .navbar a.logo img {
        width: 125px;
        height: 50px;
        margin-top: 1em;
        margin-left: 2em;
        justify-self: flex-start; }
    header .navbar ul.menu {
      display: -webkit-box;
      display: flex;
      margin-right: 2em; }
    header .navbar li {
      display: inline-block;
      padding: 1em 0;
      -webkit-transition: -webkit-transform .2s ease-in-out;
      transition: -webkit-transform .2s ease-in-out;
      transition: transform .2s ease-in-out;
      transition: transform .2s ease-in-out, -webkit-transform .2s ease-in-out; }
    header .navbar li.menu__link + li.menu__link {
      margin-left: 1.5em; }
    header .navbar .hide-mobile {
      display: none; }
    header .navbar ul.menu li:last-child {
      padding: .5em 0 0 1em; }
    header .navbar ul a {
      display: -webkit-box;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
              flex-direction: row;
      text-align: center; }
    header .navbar ul a i {
      padding-right: 1em; }
    header .navbar ul li#toggle a i {
      padding-right: 0; }
    header .navbar li:hover,
    header .navbar li:active {
      -webkit-transform: scale(1.05);
              transform: scale(1.05); }
    header .navbar ul.menu__collapse {
      position: absolute;
      top: 50px;
      right: 2em;
      z-index: 10;
      background: -webkit-gradient(linear, left top, left bottom, from(#7A2800), to(#010101));
      background: linear-gradient(#7A2800, #010101);
      border-radius: .25em;
      padding: 2em;
      opacity: 0;
      -webkit-transform: scale(1, 0);
              transform: scale(1, 0);
      -webkit-transition: all ease-in .3s;
      transition: all ease-in .3s;
      -webkit-transform-origin: top;
              transform-origin: top; }
    header .navbar ul.menu__collapse.visible {
      opacity: .95;
      -webkit-transform: scale(1, 1);
              transform: scale(1, 1); }
    header .navbar ul.menu__collapse li {
      display: block;
      padding-bottom: 1em; }
    header .navbar ul.menu__collapse.visible {
      opacity: .95;
      -webkit-transform: scale(1, 1);
              transform: scale(1, 1); }
    header .navbar ul.menu__collapse li {
      display: block;
      padding-bottom: 1em; }
    header .navbar ul.menu__collapse li#shop {
      opacity: .45; }
    header .navbar ul.menu__collapse li#shop:hover,
    header .navbar ul.menu__collapse li#shop a:hover {
      cursor: not-allowed; }
  @media screen and (min-width: 768px) {
    header .navbar ul.menu li.hide-mobile {
      display: block; }
    header .navbar ul.menu__collapse li.hide-lg {
      display: none; } }

/*
    ##############
    HOMEPAGE STYLE
    ##############
    
- menu at the bottom on mobile, top on lg screens
- 'landing' class gets added through js on the homepage
*/
header.landing {
  background: -webkit-gradient(linear, left top, left bottom, from(#010101), to(#7A2800));
  background: linear-gradient(#010101, #7A2800);
  position: absolute;
  bottom: 0;
  height: 20vh;
  z-index: 10;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: end;
          align-items: flex-end; }
  header.landing .navbar {
    margin: 0 auto;
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: center;
            justify-content: center;
    -webkit-box-align: end;
            align-items: flex-end; }
    header.landing .navbar a.logo {
      display: none; }
    header.landing .navbar ul a {
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
              flex-direction: column; }
    header.landing .navbar ul a i {
      padding-right: 0;
      padding-bottom: 1em; }
    header.landing .navbar ul li:last-of-type a i {
      padding-bottom: 0; }
    header.landing .navbar li {
      display: block;
      -webkit-transition: -webkit-transform .2s ease-in-out;
      transition: -webkit-transform .2s ease-in-out;
      transition: transform .2s ease-in-out;
      transition: transform .2s ease-in-out, -webkit-transform .2s ease-in-out;
      font-size: .8rem; }
    header.landing .navbar ul.menu {
      margin-right: 0;
      margin-bottom: 0.5em; }
    header.landing .navbar ul.menu__collapse {
      top: -180px;
      right: 2em;
      -webkit-transform-origin: bottom;
              transform-origin: bottom;
      padding: 1em; }
    header.landing .navbar ul.menu__collapse a {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
              flex-direction: row;
      -webkit-box-pack: end;
              justify-content: flex-end; }
    header.landing .navbar ul.menu__collapse a i {
      padding-left: 1em;
      -webkit-box-ordinal-group: 2;
              order: 1; }
    header.landing .navbar ul.menu__collapse li.hide-lg {
      display: none; }
  @media screen and (min-width: 576px) {
    header.landing {
      position: inherit;
      background: inherit;
      -webkit-box-align: start;
              align-items: flex-start;
      min-height: 25px; }
      header.landing .navbar {
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        display: -webkit-box;
        display: flex;
        -webkit-box-pack: end;
                justify-content: flex-end;
        position: relative; }
        header.landing .navbar ul li {
          font-size: 1rem;
          padding: 1em 0; }
        header.landing .navbar li + li {
          margin-left: 2em; }
        header.landing .navbar ul.menu {
          margin-right: 2em; }
        header.landing .navbar ul.menu__collapse {
          position: absolute;
          top: 55px;
          -webkit-transform-origin: top;
                  transform-origin: top;
          background: -webkit-gradient(linear, left top, left bottom, from(#7A2800), to(#010101));
          background: linear-gradient(#7A2800, #010101); }
        header.landing .navbar ul a {
          -webkit-box-orient: horizontal;
          -webkit-box-direction: normal;
                  flex-direction: row; }
        header.landing .navbar ul a i {
          padding-right: 1em; } }

.hero-section {
  height: 100vh;
  height: calc(var(--vh, 1vh) * 100);
  overflow: hidden; }
  .hero-section .wrapper {
    height: 100%; }
    .hero-section .wrapper .hero__content {
      height: 100%; }

.flash-msg-container {
  width: 350px;
  position: absolute;
  top: 2em;
  left: 50%;
  z-index: 50;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  text-align: center;
  color: #2A2A2A;
  font-weight: 700;
  background-color: #FFF9F6;
  -webkit-animation: fadeOut 5s 2s forwards;
          animation: fadeOut 5s 2s forwards; }

@-webkit-keyframes fadeOut {
  from {
    opacity: 1; }
  to {
    opacity: 0; } }

@keyframes fadeOut {
  from {
    opacity: 1; }
  to {
    opacity: 0; } }

.scroll-icon {
  display: none; }

.hero__cta {
  width: 100%;
  text-align: center;
  color: #FFFFC0;
  padding: 2em 2em 0 2em; }
  .hero__cta .hero__logo-container img {
    max-width: 60%; }
  .hero__cta h1,
  .hero__cta h2,
  .hero__cta .btn {
    display: none; }

.hero__image-container {
  position: relative;
  text-align: center; }

.hero__image-container img {
  width: 60%; }

/*
    ####################
    media queries mobile
    ####################
    
    sm -> lg
    screens with sufficient height get to see the title
*/
@media screen and (min-height: 650px) {
  .hero__content {
    margin-top: 15%; }
  .hero__cta h1,
  .hero__cta h2 {
    display: block; }
  .hero__cta h1 {
    margin-top: 2em;
    font-size: 1.25rem; }
  .hero__cta h2 {
    font-size: .75rem; }
  .hero__cta .hero__logo-container img {
    max-width: 80%; }
  .hero__cta .hero__image-container img {
    width: 100%; } }

@media screen and (min-width: 350px) {
  .hero__content {
    margin-top: unset; }
    .hero__content .hero__logo-container img {
      max-width: 50%; }
    .hero__content .hero__image-container img {
      width: 50%; } }

@media screen and (min-width: 390px) {
  .hero__content .hero__logo-container img {
    max-width: 45%; }
  .hero__content .hero__image-container img {
    width: 45%; } }

@media screen and (min-width: 460px) {
  .hero__content .hero__logo-container img {
    max-width: 40%; }
  .hero__content .hero__image-container img {
    width: 40%; } }

@media screen and (min-width: 500px) {
  .hero__content .hero__logo-container img {
    max-width: 35%; }
  .hero__content .hero__image-container img {
    width: 35%; } }

/*
    ###########################
    media queries tablet and up
    ###########################
    
    switch to two-column layout
*/
@media screen and (min-width: 576px) {
  .hero__content {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: space-evenly;
            justify-content: space-evenly;
    -webkit-box-align: center;
            align-items: center; }
    .hero__content .hero__cta,
    .hero__content .hero__image-container {
      height: 80%;
      display: -webkit-box;
      display: flex;
      -webkit-box-align: center;
              align-items: center; }
    .hero__content .hero__image-container {
      -webkit-box-flex: 2;
              flex: 2;
      position: relative; }
    .hero__content .hero__image-container img {
      width: 90%;
      position: absolute;
      left: -25px; }
    .hero__content .hero__cta {
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
              flex-direction: column;
      -webkit-box-pack: center;
              justify-content: center;
      -webkit-box-flex: 3;
              flex: 3;
      padding: 2em; }
      .hero__content .hero__cta h1,
      .hero__content .hero__cta h2,
      .hero__content .hero__cta .btn {
        display: block;
        font-weight: 400; }
      .hero__content .hero__cta h1 {
        font-size: 1.25rem;
        margin-top: 0 !important;
        margin-bottom: 0; }
      .hero__content .hero__cta h2 {
        font-size: .75rem;
        font-style: italic; }
      .hero__content .hero__cta .btn {
        width: 60%;
        max-width: 175px;
        margin: 0 auto;
        margin-top: 2em;
        text-transform: uppercase;
        font-size: .85rem;
        background-color: #7A2800; } }

@media screen and (min-width: 768px) {
  .scroll-icon {
    display: block;
    position: absolute;
    left: 50%;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%);
    -webkit-animation: moveArrow 1s infinite;
            animation: moveArrow 1s infinite; }
  @-webkit-keyframes moveArrow {
    0% {
      bottom: 1em; }
    50% {
      bottom: 1.35em; }
    100% {
      bottom: 1em; } }
  @keyframes moveArrow {
    0% {
      bottom: 1em; }
    50% {
      bottom: 1.35em; }
    100% {
      bottom: 1em; } } }

@media screen and (min-width: 1024px) {
  .hero__content .hero__cta .hero__logo-container img {
    max-width: 50%; }
  .hero__content .hero__cta h1 {
    font-size: 1.5rem; }
  .hero__content .hero__cta h2 {
    font-size: 1rem; }
  .hero__content .hero__cta .btn {
    max-width: 225px;
    font-size: 1rem; }
  .hero__content .hero__image-container img {
    width: 85%; } }

@media screen and (min-width: 1440px) {
  .hero__content .hero__cta .hero__logo-container img {
    max-width: 60%; }
  .hero__content .hero__cta h1 {
    font-size: 1.75rem; }
  .hero__content .hero__cta h2 {
    font-size: 1.25rem; }
  .hero__content .hero__cta .btn {
    max-width: 300px;
    font-size: 1.25rem; }
  .hero__content .hero__image-container img {
    width: 100%; } }

@media screen and (min-width: 1800px) {
  .hero__content .hero__cta .hero__logo-container img {
    max-width: 80%; }
  .hero__content .hero__cta h1 {
    font-size: 2.25rem; }
  .hero__content .hero__cta h2 {
    font-size: 1.75rem; }
  .hero__content .hero__cta .btn {
    max-width: 500px;
    font-size: 1.75rem; }
  .hero__content .hero__image-container img {
    left: 0; } }

.btn {
  padding: 1em 1.75em;
  background-color: #f35000;
  font-size: .75rem;
  border-radius: .25em;
  -webkit-transition: all ease-in .3s;
  transition: all ease-in .3s; }

.btn:hover {
  background-color: #7A2800;
  -webkit-transform: scale(1.05);
          transform: scale(1.05);
  outline: none; }

.testimonial {
  background-color: #F6EFEB;
  padding: 4em 1em;
  color: #2A2A2A; }

.testimonial__content {
  text-align: center;
  padding: 0 2em;
  opacity: 0;
  -webkit-transition: opacity ease-in-out .3s;
  transition: opacity ease-in-out .3s; }
  .testimonial__content.reveal {
    opacity: 1; }
  .testimonial__content .testimonial__container:first-of-type {
    margin-bottom: 4em; }
  .testimonial__content .testimonial__container p:last-of-type {
    color: #f35000; }
  .testimonial__content i.fa-angle-right {
    color: #FEEA00;
    margin-right: 1em; }
  .testimonial__content p:first-of-type {
    text-align: left;
    line-height: 1.75;
    padding: 1em 0; }
  .testimonial__content p.author {
    display: -webkit-box;
    display: flex;
    text-align: left; }

@media screen and (min-width: 768px) {
  .testimonial__heading {
    margin-bottom: 6em !important; }
  .testimonial__heading hr {
    max-width: 250px; }
  .testimonial__content {
    display: -webkit-box;
    display: flex;
    padding-right: 0;
    padding-left: 4em; }
  .testimonial__container {
    -webkit-box-flex: 1;
            flex: 1; }
  .testimonial__container + .testimonial__container {
    margin-left: 1em; }
  .testimonial__container {
    display: -webkit-box;
    display: flex;
    flex-wrap: wrap; }
    .testimonial__container i {
      margin-right: .5em; }
    .testimonial__container p.quote {
      width: 70%;
      padding-top: 0;
      margin: 0;
      font-size: 1rem; }
    .testimonial__container p.author {
      display: -webkit-box;
      display: flex;
      margin-left: 4em;
      margin-top: 0;
      text-align: left; } }

.heading {
  width: 100%;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: center;
          align-items: center;
  text-align: center;
  margin-bottom: 2em; }
  .heading i {
    color: #FEEA00; }
  .heading h2,
  .heading h3 {
    color: #2A2A2A; }
  .heading h3 {
    font-size: 1.1rem;
    font-weight: 300;
    margin: 0 0 .5em 0; }
  .heading hr {
    width: 50%;
    height: 2px;
    background: #f35000; }

.link-section {
  background-color: #FFF9F6;
  padding: 4em 2em; }

.link-section__heading:first-of-type {
  margin-bottom: 4em; }

.link {
  -webkit-transition: -webkit-transform .3s ease-in;
  transition: -webkit-transform .3s ease-in;
  transition: transform .3s ease-in;
  transition: transform .3s ease-in, -webkit-transform .3s ease-in;
  opacity: 0;
  -webkit-transition: opacity ease-in-out .3s;
  transition: opacity ease-in-out .3s; }
  .link.reveal {
    opacity: 1; }

.link:hover {
  -webkit-transform: scale(1.025);
          transform: scale(1.025);
  cursor: pointer; }

@media screen and (min-width: 768px) {
  .links {
    display: -webkit-box;
    display: flex;
    justify-content: space-around; }
  .link-section__heading {
    -webkit-box-flex: 1;
            flex: 1;
    max-width: 400px; }
  .link + .link {
    margin-left: 2em; }
  .link-section__heading:first-of-type {
    margin-bottom: 2em; }
  .link:hover {
    border: 1px solid #f35000;
    border-radius: .25em; }
  .link:active,
  .link:focus {
    -webkit-transform: scale(1);
            transform: scale(1);
    border: 1px solid #f35000;
    border-radius: .25em; } }

.history {
  background-color: #F6EFEB; }

.history__container {
  padding: 4em 2em; }

.history-section__heading {
  margin-bottom: 4em; }

.image-link-container {
  text-align: center; }

.image-link-container img {
  width: 80%;
  border-radius: 2em; }

.image-link-container a:hover {
  cursor: pointer; }

.image-link-container img:first-of-type {
  margin-bottom: 2em; }

@media screen and (min-width: 768px) {
  .history__container {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: center;
            justify-content: center; }
  .history-section__heading {
    max-width: 400px; }
  .image-link-container {
    margin-left: 2em;
    max-width: 400px; }
  .image-link-container img {
    width: 50%; } }

.newsletter-section {
  background-color: #FFF9F6;
  padding: 4em 2em; }

.newsletter__input form.newsletter {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: center;
          align-items: center; }

.newsletter__input input[name="email"] {
  margin-bottom: .5em;
  width: 80%;
  border: #f35000 1px solid;
  font-size: 1rem;
  color: #2A2A2A;
  padding: 1em;
  background-color: #F6EFEB; }

.newsletter__input input[name="email"]::-webkit-input-placeholder {
  color: #2A2A2A; }

.newsletter__input input[name="email"]::-moz-placeholder {
  color: #2A2A2A; }

.newsletter__input input[name="email"]:-ms-input-placeholder {
  color: #2A2A2A; }

.newsletter__input input[name="email"]::-ms-input-placeholder {
  color: #2A2A2A; }

.newsletter__input input[name="email"]::placeholder {
  color: #2A2A2A; }

.newsletter__input input[name="email"]:focus-within {
  outline: #f35000 1px solid; }

.newsletter__input .form__consent {
  width: 80%;
  color: #2A2A2A;
  text-transform: uppercase;
  font-size: .75rem;
  line-height: 1.75;
  text-align: right; }
  .newsletter__input .form__consent button {
    text-transform: uppercase;
    color: #F6EFEB; }
  .newsletter__input .form__consent button[disabled] {
    opacity: .5; }
  .newsletter__input .form__consent p {
    text-align: left; }
    .newsletter__input .form__consent p a {
      color: #f35000; }
  .newsletter__input .form__consent .form__consent-container {
    margin-bottom: 2em; }
    .newsletter__input .form__consent .form__consent-container .checkbox-container {
      position: relative; }
      .newsletter__input .form__consent .form__consent-container .checkbox-container input {
        position: absolute;
        width: 0;
        height: 0;
        opacity: 0;
        cursor: pointer; }
      .newsletter__input .form__consent .form__consent-container .checkbox-container .checkbox-custom {
        display: block;
        position: absolute;
        left: -175px;
        top: -37px;
        height: 30px;
        width: 30px;
        background-color: #FFF9F6;
        border: 3px solid #FEEA00;
        margin: 0 auto; }
      .newsletter__input .form__consent .form__consent-container .checkbox-container .checkbox-custom:hover {
        background-color: #555;
        cursor: pointer; }
      .newsletter__input .form__consent .form__consent-container .checkbox-container input:checked ~ .checkbox-custom {
        background-color: #555; }
      .newsletter__input .form__consent .form__consent-container .checkbox-container .checkbox-custom::after {
        display: none;
        content: '';
        position: absolute;
        left: 7px;
        top: 4px;
        width: 5px;
        height: 10px;
        border: solid #FFF9F6;
        border-width: 0 4px 4px 0;
        /* border-radius: 8px; */
        -webkit-transform: rotate(45deg);
                transform: rotate(45deg); }
      .newsletter__input .form__consent .form__consent-container .checkbox-container input:checked ~ .checkbox-custom::after {
        display: block; }

@media screen and (min-width: 768px) {
  .newsletter-section__heading {
    max-width: 400px;
    margin: 0 auto 4em auto; }
  .newsletter__input input[name="email"] {
    width: 40%;
    margin: .25em auto 0 auto; }
  .newsletter__input .form__consent {
    width: 40%; }
    .newsletter__input .form__consent button {
      font-size: 1rem; }
    .newsletter__input .form__consent .form__consent-container .checkbox-container .checkbox-custom {
      left: -225px;
      top: -45px; } }

#history-first,
#history-second,
#history-third,
#history-fourth,
#history-fifth,
#history-sixt,
#history-seventh {
  scroll-behavior: smooth; }

.intro, .credits {
  margin: 0 auto;
  width: 100%;
  max-width: 650px;
  padding: 2em;
  margin-top: .5em;
  line-height: 1.75;
  text-align: center; }
  .intro h1, .intro h3, .credits h1, .credits h3 {
    text-align: center; }
  .intro h1, .credits h1 {
    color: #f35000;
    text-transform: uppercase; }

.timeline-links {
  padding: 0 2em;
  max-width: 650px;
  margin: 0 auto 2em auto;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  flex-wrap: wrap; }
  .timeline-links a {
    color: #f35000;
    font-size: .8rem;
    margin-top: 1em; }
    .timeline-links a::after {
      content: '|';
      margin: 0 1em; }
    .timeline-links a:last-child::after {
      display: none; }

blockquote {
  line-height: 1.5;
  font-size: .95rem; }

.credits {
  margin-bottom: 4em; }

.timeline {
  position: relative;
  width: 100%;
  max-width: 1200px;
  padding: 1em;
  margin: 0 auto; }
  .timeline::before {
    content: '';
    width: 5px;
    height: 99.6%;
    background-color: #f35000;
    border-radius: 1em;
    position: absolute;
    left: 10px;
    top: 0; }

.container {
  padding: 1em;
  position: relative;
  margin: 0 auto 4em auto;
  opacity: 0;
  -webkit-transition: opacity .35s ease-in;
  transition: opacity .35s ease-in; }
  .container.reveal {
    opacity: 1; }
  .container::before {
    content: '';
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: #FEEA00;
    position: absolute;
    left: -14px;
    top: 1em; }
  .container .content {
    background-color: #F6EFEB;
    color: #2A2A2A;
    padding: 1em 2em;
    border-radius: .5em; }
    .container .content h2 {
      font-size: 1.125rem;
      text-transform: uppercase;
      color: #f35000; }
    .container .content p {
      line-height: 1.75;
      text-align: left; }
    .container .content img {
      display: block;
      margin: 2em auto;
      width: 80%;
      height: auto; }

@media screen and (min-width: 768px) {
  .intro,
  .credits {
    text-align: center; }
  .timeline::before {
    left: 50%;
    margin-left: 7px; }
  .container {
    width: 50%;
    position: relative; }
  .container.left {
    left: 0;
    margin: 0 1em 0 0; }
    .container.left::before {
      left: 100%; }
  .container.right {
    left: 50%;
    margin: 0 0 0 14px; } }

.info__title,
.info__content-text,
.info__contact {
  padding: 0 2em;
  max-width: 500px;
  margin: 0 auto; }

.info__title {
  width: 100%;
  margin-top: 3em;
  line-height: 1.75;
  text-align: center; }
  .info__title h1 {
    font-size: 1.5rem;
    text-align: center;
    text-transform: uppercase; }

.info__content-images {
  padding: 1em 0;
  text-align: center; }
  .info__content-images img {
    width: auto;
    height: 100px; }

.info__content-text,
.info__contact {
  line-height: 1.75; }

.info__content-text {
  margin-bottom: 4em; }

.info__contact p {
  color: #f35000; }

.info__contact hr {
  background-color: #7A2800;
  height: 3px;
  width: 200px;
  margin: 0; }

@media screen and (min-width: 768px) {
  .info__content {
    display: -webkit-box;
    display: flex;
    padding: 0 1em;
    -webkit-box-pack: space-evenly;
            justify-content: space-evenly;
    margin-bottom: 2em; }
    .info__content .info__content-text {
      -webkit-box-ordinal-group: 2;
              order: 1;
      margin: unset; }
    .info__content .info__content-images {
      -webkit-box-ordinal-group: 3;
              order: 2;
      margin: unset;
      display: -webkit-box;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
              flex-direction: column; }
      .info__content .info__content-images img {
        width: 80%;
        height: auto;
        margin-bottom: 1em; } }

@media screen and (min-width: 992px) {
  .info__contact {
    text-align: left;
    margin: 0 auto 0 0; } }

.location {
  margin: 2em auto;
  width: 100%;
  padding: 1em 2em;
  text-align: center; }
  .location .location__title h1 {
    font-size: 1.5rem;
    text-transform: uppercase;
    margin-bottom: 1em; }
  .location .location__text {
    margin-bottom: 2em; }
    .location .location__text h2 {
      color: #f35000;
      text-transform: uppercase;
      font-size: 1rem;
      margin-top: 2em; }
    .location .location__text p {
      line-height: 1.75; }
    .location .location__text a.btn {
      display: inline-block;
      text-transform: uppercase;
      margin: 2em; }
  .location .location__map-container {
    width: 100%;
    min-width: 250px;
    height: 300px;
    margin: 0 auto 6em auto; }
  .location #map {
    width: 100%;
    height: 100%;
    border: 1px solid #f35000; }
  @media screen and (min-width: 768px) {
    .location {
      text-align: left;
      max-width: 650px;
      margin: 2em auto 0 1em; } }
  @media screen and (min-width: 992px) {
    .location .location__text {
      position: relative; }
      .location .location__text a.btn {
        position: absolute;
        right: -50%;
        top: 50%; } }

#map {
  color: #f35000; }
  #map h1 {
    font-size: 1rem; }

.label-text {
  text-align: left;
  padding: 0 2em;
  margin-top: 3em; }
  .label-text h1 {
    font-size: 1.5rem; }
  .label-text a {
    color: #f35000; }

form.contact {
  width: 100%;
  max-width: 650px;
  margin: 0 auto 4em auto;
  padding: 2em;
  color: #2A2A2A; }
  form.contact .input-container {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    margin-bottom: 2em; }
    form.contact .input-container label {
      margin-bottom: 1em;
      color: #FFFFC0;
      text-transform: uppercase;
      font-weight: 600; }
      form.contact .input-container label::after {
        content: '*';
        color: #f35000;
        padding-left: .5em;
        font-size: .75rem; }
      form.contact .input-container label[for="subject"]::after {
        display: none; }
    form.contact .input-container input,
    form.contact .input-container select,
    form.contact .input-container textarea {
      padding: 1em;
      background-color: #F6EFEB; }
    form.contact .input-container input:focus-within,
    form.contact .input-container textarea:focus-within,
    form.contact .input-container select:focus-within {
      outline: #FEEA00 3px solid; }
    form.contact .input-container select {
      text-transform: capitalize; }
  form.contact .form__consent {
    text-align: center; }
    form.contact .form__consent p {
      color: #FFFFC0;
      line-height: 1.75;
      display: block;
      margin-bottom: 2em; }
    form.contact .form__consent button {
      text-transform: uppercase;
      color: #F6EFEB;
      font-weight: 700;
      font-size: 1rem; }
    form.contact .form__consent button[disabled] {
      opacity: .5; }
    form.contact .form__consent button:focus {
      outline: #f35000 1px solid; }
    form.contact .form__consent .form__consent-container {
      margin-bottom: 2em; }
      form.contact .form__consent .form__consent-container .checkbox-container {
        position: relative; }
        form.contact .form__consent .form__consent-container .checkbox-container input {
          position: absolute;
          width: 0;
          height: 0;
          opacity: 0;
          cursor: pointer; }
        form.contact .form__consent .form__consent-container .checkbox-container .checkbox-custom {
          display: block;
          position: absolute;
          left: -10px;
          top: -5px;
          -webkit-transform: translateX(-50px);
                  transform: translateX(-50px);
          height: 30px;
          width: 30px;
          background-color: #FFF9F6;
          border: 3px solid #FEEA00;
          margin: 0 auto; }
        form.contact .form__consent .form__consent-container .checkbox-container .checkbox-custom:hover {
          background-color: #555;
          cursor: pointer; }
        form.contact .form__consent .form__consent-container .checkbox-container input:checked ~ .checkbox-custom {
          background-color: #555; }
        form.contact .form__consent .form__consent-container .checkbox-container .checkbox-custom::after {
          display: none;
          content: '';
          position: absolute;
          left: 7px;
          top: 4px;
          width: 5px;
          height: 10px;
          border: solid #FFF9F6;
          border-width: 0 4px 4px 0;
          /* border-radius: 8px; */
          -webkit-transform: rotate(45deg);
                  transform: rotate(45deg); }
        form.contact .form__consent .form__consent-container .checkbox-container input:checked ~ .checkbox-custom::after {
          display: block; }
    form.contact .form__consent a {
      display: block;
      color: #f35000;
      font-size: .75rem; }
  @media screen and (min-width: 992px) {
    form.contact {
      display: -webkit-box;
      display: flex;
      width: 100%;
      max-width: 1200px; }
      form.contact .form__inputs {
        width: 60%;
        margin-right: 4em; }
        form.contact .form__inputs input,
        form.contact .form__inputs select {
          width: 60%; }
        form.contact .form__inputs textarea {
          width: 100%; }
      form.contact .form__consent {
        width: 40%;
        align-self: flex-end;
        margin-bottom: 2em; } }

.policy-text-container {
  padding: 2em;
  padding-bottom: 8em;
  width: 100%; }
  .policy-text-container h1,
  .policy-text-container h2 {
    text-transform: uppercase;
    color: #f35000;
    margin: 2em 0; }
  .policy-text-container h1 {
    font-size: 1.5rem; }
  .policy-text-container h2 {
    font-size: 1rem;
    font-weight: 700; }
  .policy-text-container p {
    line-height: 1.75; }
  @media screen and (min-width: 768px) {
    .policy-text-container {
      max-width: 50%;
      margin: 0 0 0 auto; } }

.error-container {
  text-align: center;
  margin: 6em 0; }
  .error-container h2 {
    margin-bottom: 2em; }
  .error-container a {
    display: block;
    max-width: 30%;
    margin: 0 auto;
    background-color: #f35000;
    color: #FFF9F6;
    padding: 1em 2em; }

@media screen and (min-width: 1200px) {
  .wrapper {
    max-width: 1200px;
    margin: 0 auto; } }

footer {
  background: #202020;
  position: relative;
  padding: 4em 2em .5em 2em; }
  footer h3 {
    font-size: 1.25rem;
    font-weight: 300;
    margin: 0 0 .5em 0; }
  footer hr {
    background-color: #f35000;
    width: 70%;
    height: 2px;
    margin-bottom: 2em; }

.footer {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: center;
          align-items: center;
  text-align: center; }

.footer__social-media {
  margin-bottom: 4em; }
  .footer__social-media a + a {
    margin-left: 2em; }

.footer__faq {
  margin-bottom: 4em; }

.footer__legal {
  margin-bottom: 1em;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center; }
  .footer__legal ul {
    margin-bottom: 2em; }
  .footer__legal ul li {
    text-align: center;
    margin-bottom: 1em; }

.footer__address {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  margin-bottom: 3em; }
  .footer__address img {
    width: 55%; }
  .footer__address address {
    width: 200px;
    margin: 0; }

.footer__copyright,
.footer__promo-link {
  font-size: .75rem; }

.footer__copyright {
  margin-bottom: .5em; }

.footer__promo-link {
  color: #f35000;
  opacity: .5; }

@media screen and (min-width: 567px) {
  .footer__address img {
    width: 40%; } }

@media screen and (min-width: 768px) {
  footer hr {
    width: 200px; }
  .footer {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
    flex-wrap: wrap;
    -webkit-box-align: start;
            align-items: flex-start; }
  .footer__social-media {
    width: 50%;
    -webkit-box-ordinal-group: 2;
            order: 1; }
  .footer__faq {
    width: 50%;
    -webkit-box-ordinal-group: 3;
            order: 2;
    margin-bottom: 2em; }
  .footer__address {
    width: 50%;
    -webkit-box-ordinal-group: 4;
            order: 3; }
    .footer__address img {
      width: 25%; }
  .footer__legal {
    -webkit-box-ordinal-group: 5;
            order: 4;
    width: 50%; }
  .footer__copyright {
    -webkit-box-ordinal-group: 6;
            order: 5;
    width: 100%; }
  .footer__promo-link {
    -webkit-box-ordinal-group: 7;
            order: 6;
    width: 100%; } }

@media screen and (min-width: 1024px) {
  .nav-up {
    background-color: #FEEA00;
    width: 50px;
    height: 50px;
    opacity: .7;
    border-radius: 50%;
    position: absolute;
    left: 50%;
    top: 15%;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%); }
  .nav-up-figure {
    position: absolute;
    left: 20%;
    top: -10%;
    border-top: 15px solid transparent;
    border-right: 15px solid transparent;
    border-bottom: 25px solid #030303;
    border-left: 15px solid transparent; }
  .nav-up:hover {
    opacity: .8;
    background-color: #f35000; } }
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
