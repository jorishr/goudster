/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
  margin: 0; /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type=button],
input[type=reset],
input[type=submit] {
  -webkit-appearance: button; /* 2 */
  cursor: pointer; /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type=checkbox],
input[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type=search] {
  -webkit-appearance: textfield; /* 1 */ /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* MEDIA QUERY MIXINS - START*/
/* MEDIA QUERY MIXINS - END*/
* {
  padding: 0;
  border: 0;
  box-sizing: border-box;
}

html {
  height: 100%;
  scroll-behavior: smooth;
}

body {
  width: 100%;
  height: 100%;
  font-family: "Montserrat", sans-serif;
  font-weight: 400;
  background-color: #010101;
  color: #FFFFC0;
  display: flex;
  flex-direction: column;
}
body .page-content {
  flex-grow: 1;
}

a {
  text-decoration: none;
  color: #FFFFC0;
}

img {
  width: 100%;
  max-width: 100%;
  height: auto;
}

ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

h3 {
  line-height: 1.75;
}

p {
  line-height: 1.5;
}

.antispm {
  display: none;
}

noscript::before {
  content: "Om deze website te bezoeken moet je webbrowser JavaScript ondersteunen en toestaan.";
  font-style: italic;
  font-weight: bolder;
  font-size: 1.25rem;
  text-align: center;
  color: #f35000;
  background-color: #010101;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  padding: 1em 0;
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
.testimonial {
  background-color: #F6EFEB;
  padding: 4em 1em;
  color: #2A2A2A;
}

.testimonial__content {
  text-align: center;
  padding: 0 2em;
  opacity: 1;
  transition: opacity ease-in-out 0.3s;
}
.testimonial__content.reveal {
  opacity: 1;
}
.testimonial__content .testimonial__container:first-of-type {
  margin-bottom: 4em;
}
.testimonial__content .testimonial__container p:last-of-type {
  color: #f35000;
}
.testimonial__content i.fa-angle-right {
  color: #FEEA00;
  margin-right: 1em;
}
.testimonial__content p:first-of-type {
  text-align: left;
  line-height: 1.75;
  padding: 1em 0;
}
.testimonial__content p.author {
  display: flex;
  text-align: left;
}

@media screen and (min-width: 768px) {
  .testimonial__heading {
    margin-bottom: 6em !important;
  }
  .testimonial__heading hr {
    max-width: 250px;
  }
  .testimonial__content {
    display: flex;
    padding-right: 0;
    padding-left: 4em;
  }
  .testimonial__container {
    flex: 1;
  }
  .testimonial__container + .testimonial__container {
    margin-left: 1em;
  }
  .testimonial__container {
    display: flex;
    flex-wrap: wrap;
  }
  .testimonial__container i {
    margin-right: 0.5em;
  }
  .testimonial__container p.quote {
    width: 70%;
    padding-top: 0;
    margin: 0;
    font-size: 1rem;
  }
  .testimonial__container p.author {
    display: flex;
    margin-left: 4em;
    margin-top: 0;
    text-align: left;
  }
}
#history-first,
#history-second,
#history-third,
#history-fourth,
#history-fifth,
#history-sixt,
#history-seventh {
  scroll-behavior: smooth;
}

.intro, .credits {
  margin: 0 auto;
  width: 100%;
  max-width: 650px;
  padding: 2em;
  margin-top: 0.5em;
  line-height: 1.75;
  text-align: center;
}
.intro h1, .intro h3, .credits h1, .credits h3 {
  text-align: center;
}
.intro h1, .credits h1 {
  color: #f35000;
  text-transform: capitalize;
}

.timeline-links {
  padding: 0 2em;
  max-width: 650px;
  margin: 0 auto 2em auto;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
}
.timeline-links a {
  color: #f35000;
  font-size: 0.8rem;
  margin-top: 1em;
}
.timeline-links a::after {
  content: "|";
  margin: 0 1em;
}
.timeline-links a:last-child::after {
  display: none;
}

blockquote {
  line-height: 1.5;
  font-size: 0.95rem;
}

.credits {
  margin-bottom: 4em;
}

.timeline {
  position: relative;
  width: 100%;
  max-width: 1200px;
  padding: 1em 0 1em 1em;
  margin: 0 auto;
}
.timeline::before {
  content: "";
  width: 5px;
  height: 99.6%;
  background-color: #f35000;
  border-radius: 1em;
  position: absolute;
  left: 10px;
  top: 0;
}

.container {
  padding: 1em;
  position: relative;
  margin: 0 auto 4em auto;
  opacity: 0;
  transition: opacity 0.35s ease-in;
}
.container.reveal {
  opacity: 1;
}
.container::before {
  content: "";
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: #FEEA00;
  position: absolute;
  left: -14px;
  top: 1em;
}
.container .content {
  background-color: #F6EFEB;
  color: #2A2A2A;
  padding: 1em 2em;
  border-radius: 0.5em;
}
.container .content h2 {
  font-size: 1.125rem;
  text-transform: uppercase;
  color: #f35000;
}
.container .content p {
  line-height: 1.75;
  text-align: left;
}
.container .content img {
  display: block;
  margin: 2em auto;
  width: 80%;
  height: auto;
}
.container .content blockquote {
  margin-left: 0.5em;
  margin-right: 0;
}

@media screen and (min-width: 768px) {
  .intro,
  .credits {
    text-align: center;
  }
  .timeline {
    padding: 1em;
  }
  .timeline::before {
    left: 50%;
    margin-left: 7px;
  }
  .container {
    width: 50%;
    position: relative;
  }
  .container.left {
    left: 0;
    margin: 0 1em 0 0;
  }
  .container.left::before {
    left: 100%;
  }
  .container.right {
    left: 50%;
    margin: 0 0 0 14px;
  }
}
.info__title,
.info__content-text,
.info__contact {
  padding: 0 2em;
  max-width: 500px;
  margin: 0 auto;
}

.info__title {
  width: 100%;
  margin-top: 3em;
  line-height: 1.75;
  text-align: center;
}
.info__title h1 {
  font-size: 1.5rem;
  text-align: center;
  text-transform: uppercase;
}

.info__content-images {
  padding: 1em 0;
  text-align: center;
}
.info__content-images img {
  width: auto;
  height: 100px;
}

.info__content-text,
.info__contact {
  line-height: 1.75;
}

.info__content-text {
  margin-bottom: 4em;
}

.info__contact p {
  color: #f35000;
}
.info__contact hr {
  background-color: #7A2800;
  height: 3px;
  width: 200px;
  margin: 0;
}

@media screen and (min-width: 768px) {
  .info__content {
    display: flex;
    padding: 0 1em;
    justify-content: space-evenly;
    margin-bottom: 2em;
  }
  .info__content .info__content-text {
    order: 1;
    margin: unset;
  }
  .info__content .info__content-images {
    order: 2;
    margin: unset;
    display: flex;
    flex-direction: column;
  }
  .info__content .info__content-images img {
    width: 80%;
    height: auto;
    margin-bottom: 1em;
  }
}
@media screen and (min-width: 992px) {
  .info__contact {
    text-align: left;
    margin: 0 auto 0 0;
  }
}
.location {
  margin: 2em auto;
  width: 100%;
  padding: 1em 2em;
  text-align: center;
}
.location .location__title h1 {
  font-size: 1.5rem;
  text-transform: uppercase;
  margin-bottom: 1em;
}
.location .location__text {
  margin-bottom: 2em;
}
.location .location__text h2 {
  color: #f35000;
  text-transform: uppercase;
  font-size: 1rem;
  margin-top: 2em;
}
.location .location__text p {
  line-height: 1.75;
}
.location .location__text a.btn {
  display: inline-block;
  text-transform: uppercase;
  margin: 2em auto;
}
.location .location__map-container {
  width: 100%;
  min-width: 250px;
  height: 500px;
  margin: 0 auto 6em auto;
}
.location #map {
  width: 100%;
  height: 100%;
  border: 1px solid #f35000;
}
@media screen and (min-width: 768px) {
  .location {
    text-align: left;
    max-width: 650px;
    margin: 2em auto 0 auto;
  }
}

#map {
  color: #f35000;
}
#map h1 {
  font-size: 1rem;
}

.label-text {
  text-align: left;
  padding: 0 2em;
  margin-top: 3em;
}
.label-text h1 {
  font-size: 1.5rem;
}
.label-text a {
  color: #f35000;
}

form.contact {
  width: 100%;
  max-width: 650px;
  margin: 0 auto 4em auto;
  padding: 2em;
  color: #2A2A2A;
}
form.contact .input-container {
  display: flex;
  flex-direction: column;
  margin-bottom: 2em;
}
form.contact .input-container label {
  margin-bottom: 1em;
  color: #FFFFC0;
  text-transform: uppercase;
  font-weight: 600;
}
form.contact .input-container label::after {
  content: "*";
  color: #f35000;
  padding-left: 0.5em;
  font-size: 0.75rem;
}
form.contact .input-container label[for=subject]::after {
  display: none;
}
form.contact .input-container input,
form.contact .input-container select,
form.contact .input-container textarea {
  padding: 1em;
  background-color: #F6EFEB;
}
form.contact .input-container input:focus-within,
form.contact .input-container textarea:focus-within,
form.contact .input-container select:focus-within {
  outline: #FEEA00 3px solid;
}
form.contact .input-container select {
  text-transform: capitalize;
}
form.contact .form__consent {
  text-align: center;
}
form.contact .form__consent p {
  color: #FFFFC0;
  line-height: 1.75;
  display: block;
  margin-bottom: 2em;
}
form.contact .form__consent button {
  text-transform: uppercase;
  color: #F6EFEB;
  font-weight: 700;
  font-size: 1rem;
}
form.contact .form__consent button[disabled] {
  opacity: 0.5;
}
form.contact .form__consent button:focus {
  outline: #f35000 1px solid;
}
form.contact .form__consent .form__consent-container {
  margin-bottom: 2em;
}
form.contact .form__consent .form__consent-container .checkbox-container {
  position: relative;
}
form.contact .form__consent .form__consent-container .checkbox-container input {
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0;
  cursor: pointer;
}
form.contact .form__consent .form__consent-container .checkbox-container .checkbox-custom {
  display: block;
  position: absolute;
  left: -10px;
  top: -5px;
  transform: translateX(-50px);
  height: 30px;
  width: 30px;
  background-color: #FFF9F6;
  border: 3px solid #FEEA00;
  margin: 0 auto;
}
form.contact .form__consent .form__consent-container .checkbox-container .checkbox-custom:hover {
  background-color: #555;
  cursor: pointer;
}
form.contact .form__consent .form__consent-container .checkbox-container input:checked ~ .checkbox-custom {
  background-color: #555;
}
form.contact .form__consent .form__consent-container .checkbox-container .checkbox-custom::after {
  display: none;
  content: "";
  position: absolute;
  left: 7px;
  top: 4px;
  width: 5px;
  height: 10px;
  border: solid #FFF9F6;
  border-width: 0 4px 4px 0;
  /* border-radius: 8px; */
  transform: rotate(45deg);
}
form.contact .form__consent .form__consent-container .checkbox-container input:checked ~ .checkbox-custom::after {
  display: block;
}
form.contact .form__consent a {
  display: block;
  color: #f35000;
  font-size: 0.75rem;
}
@media screen and (min-width: 992px) {
  form.contact {
    display: flex;
    width: 100%;
    max-width: 1200px;
  }
  form.contact .form__inputs {
    width: 60%;
    margin-right: 4em;
  }
  form.contact .form__inputs input,
  form.contact .form__inputs select {
    width: 60%;
  }
  form.contact .form__inputs textarea {
    width: 100%;
  }
  form.contact .form__consent {
    width: 40%;
    align-self: flex-end;
    margin-bottom: 2em;
  }
}

.policy-text-container {
  padding: 2em;
  padding-bottom: 8em;
  width: 100%;
}
.policy-text-container h1,
.policy-text-container h2 {
  text-transform: uppercase;
  color: #f35000;
  margin: 2em 0;
}
.policy-text-container h1 {
  font-size: 1.5rem;
}
.policy-text-container h2 {
  font-size: 1rem;
  font-weight: 700;
}
.policy-text-container p {
  line-height: 1.75;
}
@media screen and (min-width: 768px) {
  .policy-text-container {
    max-width: 50%;
    margin: 0 0 0 auto;
  }
}

.error-container {
  text-align: center;
  margin: 6em 0;
}
.error-container h2 {
  margin-bottom: 2em;
}
.error-container a {
  display: block;
  max-width: 30%;
  margin: 0 auto;
  background-color: #f35000;
  color: #FFF9F6;
  padding: 1em 2em;
}

@media screen and (min-width: 1200px) {
  .wrapper {
    max-width: 1200px;
    margin: 0 auto;
  }
}

.modal {
  display: none;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 4;
  background-color: #7A2800;
  opacity: 0.99;
  overflow-y: auto;
}
.modal--show {
  display: block;
}
.modal__content-container {
  width: 100%;
  height: 100%;
  font-size: 20px;
  padding: 2em;
}
.modal__heading {
  text-align: center;
}
.modal__heading__img-container {
  margin-bottom: 2em;
}
@media (min-width: 425px) {
  .modal__heading__img {
    max-width: 66%;
  }
}
@media (min-width: 768px) {
  .modal__heading__img {
    max-width: 33%;
  }
}
.modal__heading__text-container {
  max-width: 55ch;
  margin: 0 auto 2em;
}
.modal__heading__text {
  line-height: 1.5;
}
.modal__form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.modal__form__instruction {
  font-size: 18px;
  color: #FEEA00;
}
.modal__form__input-group {
  display: flex;
  flex-direction: column;
}
@media (min-width: 768px) {
  .modal__form__input-group {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin-bottom: 2em;
  }
}
.modal__form__input-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 18px;
  margin-bottom: 0.5em;
}
@media (min-width: 768px) {
  .modal__form__input-container {
    margin-right: 0.5em;
  }
}
.modal__form__input-container:last-of-type {
  margin-bottom: 1.5em;
}
@media (min-width: 768px) {
  .modal__form__input-container:last-of-type {
    margin-bottom: 0.5em;
    margin-right: 0;
  }
}
.modal__form__input-container input {
  width: 3em;
  text-align: center;
  color: #FEEA00;
  background-color: unset;
  border-bottom: 1px #FEEA00 solid;
}
.modal__form__btn {
  width: 100%;
  margin-bottom: 2em;
}
@media (min-width: 425px) {
  .modal__form__btn {
    max-width: 66%;
  }
}
@media (min-width: 768px) {
  .modal__form__btn {
    max-width: 33%;
  }
}
@media (min-width: 1920px) {
  .modal__form__btn {
    max-width: 18%;
  }
}

.cookie-consent {
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 6;
  width: 100%;
  padding: 2em 1em;
  background-color: #010101;
  border-radius: 5px 5px 0 0;
}
.cookie-consent--show {
  display: flex;
}
.cookie-consent--hide {
  display: none;
}
.cookie-consent__btn-container {
  display: flex;
  flex-direction: column;
}
@media (min-width: 768px) {
  .cookie-consent__btn-container {
    flex-direction: row;
    flex-flow: row-reverse;
  }
}
.cookie-consent__btn {
  width: 12em;
  margin-bottom: 1em;
}
@media (min-width: 768px) {
  .cookie-consent__btn {
    margin: 0 1em 0 0;
  }
}

.btn {
  text-align: center;
  letter-spacing: 1px;
  background-color: #7A2800;
  border-radius: 5px;
  box-shadow: 2px 2px 2px 0 rgba(0, 0, 0, 0.25);
  transition: transform ease-in 0.3s;
  padding: 0.5em 1em;
}
.btn--outline {
  background-color: unset;
  border: 1px #FFFFC0 solid;
}
.btn--light {
  background-color: #FFFFC0;
  color: #7A2800;
}
.btn:hover {
  transform: scale(1.0125);
  cursor: pointer;
}

.heading {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  margin-bottom: 2em;
}
.heading i {
  color: #FEEA00;
}
.heading h2,
.heading h3 {
  color: #2A2A2A;
}
.heading h3 {
  font-size: 1.1rem;
  font-weight: 300;
  margin: 0 0 0.5em 0;
}
.heading hr {
  width: 50%;
  height: 2px;
  background: #f35000;
}

.flash {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 7;
  width: 100%;
  animation: fadeOut 5s 2s forwards;
}
.flash__content-container {
  width: 95%;
  text-align: center;
  color: #2A2A2A;
  font-weight: 700;
  font-size: 18px;
  background-color: #FFF9F6;
  border-radius: 5px;
  padding: 1em 2em;
  margin: 0.5em auto 0;
}
@media (min-width: 1024px) {
  .flash__content-container {
    max-width: 66%;
  }
}
@media (min-width: 1920px) {
  .flash__content-container {
    max-width: 33%;
  }
}
.flash__content-container--alert {
  background-color: rgba(255, 0, 0, 0.95);
  color: #fff;
}
.flash--hide {
  display: none;
}
.flash--alert {
  display: none;
}
.flash--alert--show {
  display: block;
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
/* 
  ### NOTE ###
  This is the base menu
*/
.menu {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}
.menu__item {
  min-width: 33px;
  margin-right: 1em;
  transition: transform 0.3s ease-in;
}
.menu__item:last-child {
  margin-right: 0;
}
.menu__item:hover {
  transform: scale(1.025);
}
.menu__item--icon-only {
  align-self: center;
}
.menu__item__link-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.menu__item__text {
  text-align: center;
  text-transform: capitalize;
  margin: 0.5em auto 0;
}

/* 
  ### NOTE ###
  This is the menu that pops-up when toggling the dotted menu link in the base menu
*/
.menu-pop-up {
  display: none;
  position: absolute;
  top: 0;
  right: 0;
  transform: translate(-15%, -93%);
  background-color: #555;
  border-radius: 5px;
  padding: 1em 0.5em;
}
.menu-pop-up--active {
  display: block;
  animation: fade-in 500ms forwards;
}
.menu-pop-up--closing {
  animation: fade-out 500ms forwards;
}
.menu-pop-up__item {
  padding: 1em;
}
.menu-pop-up__item:hover {
  background-color: #202020;
  border-radius: 5px;
}
.menu-pop-up__item__link-container {
  display: flex;
  flex-direction: row-reverse;
  justify-content: flex-start;
  align-items: center;
}
.menu-pop-up__item__text {
  text-align: right;
  text-transform: capitalize;
  margin: 0 1em 0 0;
}

/*
    #########
    DEV NOTES
    #########

- mobile first approach
- landing class gets added through js on homepage only
- the navbar has two menu components: see _menu.scss & menu-pop-up.scss
*/
.header {
  position: absolute;
  bottom: 0;
  z-index: 3;
  width: 100%;
  background-color: #7A2800;
  border-top: 2px solid #FEEA00;
  padding: 1em 0 0;
}
.header__logo {
  display: none;
}
.header__navbar {
  width: 100%;
  padding: 1em 2em;
}

.hero-section {
  height: calc(var(--vh, 1vh) * 100);
  overflow: hidden;
}
.hero-section .wrapper {
  height: 100%;
}
.hero-section .wrapper .hero__content {
  height: 100%;
}

.scroll-icon {
  display: none;
}

.hero__cta {
  width: 100%;
  text-align: center;
  color: #FFFFC0;
  padding: 2em 2em 0 2em;
}
.hero__cta .hero__logo-container img {
  max-width: 60%;
}
.hero__cta h1,
.hero__cta h2,
.hero__cta .btn {
  display: none;
}

.hero__image-container {
  position: relative;
  text-align: center;
}

.hero__image-container img {
  width: 60%;
}

/*
    ####################
    media queries mobile
    ####################

    sm -> lg
    screens with sufficient height get to see the title
*/
@media screen and (min-height: 650px) {
  .hero__content {
    margin-top: 15%;
  }
  .hero__cta h1,
  .hero__cta h2 {
    display: block;
  }
  .hero__cta h1 {
    margin-top: 2em;
    font-size: 1.25rem;
  }
  .hero__cta h2 {
    font-size: 0.75rem;
  }
  .hero__cta .hero__logo-container img {
    max-width: 80%;
  }
  .hero__cta .hero__image-container img {
    width: 100%;
  }
}
@media screen and (min-width: 350px) {
  .hero__content {
    margin-top: unset;
  }
  .hero__content .hero__logo-container img {
    max-width: 50%;
  }
  .hero__content .hero__image-container img {
    width: 50%;
  }
}
@media screen and (min-width: 390px) {
  .hero__content .hero__logo-container img {
    max-width: 45%;
  }
  .hero__content .hero__image-container img {
    width: 45%;
  }
}
@media screen and (min-width: 460px) {
  .hero__content .hero__logo-container img {
    max-width: 40%;
  }
  .hero__content .hero__image-container img {
    width: 40%;
  }
}
@media screen and (min-width: 500px) {
  .hero__content .hero__logo-container img {
    max-width: 35%;
  }
  .hero__content .hero__image-container img {
    width: 35%;
  }
}
/*
    ###########################
    media queries tablet and up
    ###########################

    switch to two-column layout
*/
@media screen and (min-width: 576px) {
  .hero__content {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
  }
  .hero__content .hero__cta,
  .hero__content .hero__image-container {
    height: 80%;
    display: flex;
    align-items: center;
  }
  .hero__content .hero__image-container {
    flex: 2;
    position: relative;
  }
  .hero__content .hero__image-container img {
    width: 90%;
    position: absolute;
    left: -25px;
  }
  .hero__content .hero__cta {
    flex-direction: column;
    justify-content: center;
    flex: 3;
    padding: 2em;
  }
  .hero__content .hero__cta h1,
  .hero__content .hero__cta h2,
  .hero__content .hero__cta .btn {
    display: block;
    font-weight: 400;
  }
  .hero__content .hero__cta h1 {
    font-size: 1.25rem;
    margin-top: 0 !important;
    margin-bottom: 0;
  }
  .hero__content .hero__cta h2 {
    font-size: 0.75rem;
    font-style: italic;
  }
  .hero__content .hero__cta .btn {
    width: 60%;
    max-width: 175px;
    margin: 0 auto;
    margin-top: 2em;
    text-transform: uppercase;
    font-size: 0.85rem;
    background-color: #7A2800;
  }
}
@media screen and (min-width: 768px) {
  .scroll-icon {
    display: block;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    animation: moveArrow 1s infinite;
  }
  @keyframes moveArrow {
    0% {
      bottom: 1em;
    }
    50% {
      bottom: 1.35em;
    }
    100% {
      bottom: 1em;
    }
  }
}
@media screen and (min-width: 1024px) {
  .hero__content .hero__cta .hero__logo-container img {
    max-width: 50%;
  }
  .hero__content .hero__cta h1 {
    font-size: 1.5rem;
  }
  .hero__content .hero__cta h2 {
    font-size: 1rem;
  }
  .hero__content .hero__cta .btn {
    max-width: 225px;
    font-size: 1rem;
  }
  .hero__content .hero__image-container img {
    width: 85%;
  }
}
@media screen and (min-width: 1440px) {
  .hero__content .hero__cta .hero__logo-container img {
    max-width: 60%;
  }
  .hero__content .hero__cta h1 {
    font-size: 1.75rem;
  }
  .hero__content .hero__cta h2 {
    font-size: 1.25rem;
  }
  .hero__content .hero__cta .btn {
    max-width: 300px;
    font-size: 1.25rem;
  }
  .hero__content .hero__image-container img {
    width: 100%;
  }
}
@media screen and (min-width: 1800px) {
  .hero__content .hero__cta .hero__logo-container img {
    max-width: 80%;
  }
  .hero__content .hero__cta h1 {
    font-size: 2.25rem;
  }
  .hero__content .hero__cta h2 {
    font-size: 1.75rem;
  }
  .hero__content .hero__cta .btn {
    max-width: 500px;
    font-size: 1.75rem;
  }
  .hero__content .hero__image-container img {
    left: 0;
  }
}
.link-section {
  background-color: #FFF9F6;
  padding: 4em 1em;
}
@media (min-width: 425px) {
  .link-section {
    padding: 4em 2em;
  }
}
.link-section__content-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
@media (min-width: 1024px) {
  .link-section__content-container {
    flex-direction: row;
    justify-content: space-around;
  }
}
.link-section__link {
  flex: 1;
  opacity: 1;
  box-shadow: 2px 2px 2px 0 rgba(0, 0, 0, 0.25);
  border-radius: 9px;
  transition: all 0.3s ease-in;
}
@media (min-width: 1024px) {
  .link-section__link {
    max-width: 40%;
  }
}
.link-section__link--reveal {
  opacity: 1;
}
.link-section__link:first-of-type {
  margin-bottom: 4em;
}
@media (min-width: 1024px) {
  .link-section__link:first-of-type {
    margin-bottom: 0;
  }
}
.link-section__link:hover {
  transform: scale(1.025);
  cursor: pointer;
  border: 1px solid #f35000;
}
.link-section__link__content {
  padding: 0 1em;
}
@media (min-width: 576px) {
  .link-section__link__content {
    padding: 0 2em;
  }
}

.history {
  background-color: #F6EFEB;
}
.history__content-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 4em 1em;
  margin: 0 auto;
}
@media (min-width: 425px) {
  .history__content-container {
    padding: 4em 2em;
  }
}
@media (min-width: 1024px) {
  .history__content-container {
    flex-direction: row;
    justify-content: space-evenly;
    align-items: flex-start;
  }
}
.history__link {
  display: block;
  box-shadow: 2px 2px 2px 0 rgba(0, 0, 0, 0.25);
  border-radius: 9px;
  transition: all 0.3s ease-in;
  margin-bottom: 4em;
}
@media (min-width: 1024px) {
  .history__link {
    max-width: 40%;
  }
}
.history__link:hover {
  transform: scale(1.025);
  cursor: pointer;
  border: 1px solid #f35000;
}
.history__heading {
  padding: 0 1em;
}
@media (min-width: 576px) {
  .history__heading {
    padding: 0 2em;
  }
}
.history__image-container {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  text-align: center;
}
.history__image-container figure {
  margin: 0;
}
.history__image-container figure:first-of-type {
  margin-bottom: 2em;
}
.history__image-container figure img {
  border-radius: 9px;
}
@media (min-width: 1024px) {
  .history__image-container figure img {
    width: 63%;
  }
}
@media (min-width: 1920px) {
  .history__image-container figure img {
    width: 57%;
  }
}

.newsletter {
  background-color: #FFF9F6;
  padding: 4em 1em;
}
.newsletter__content-container {
  padding: 4em 1em;
}
@media (min-width: 425px) {
  .newsletter__content-container {
    padding: 4em 2em;
  }
}
@media (min-width: 768px) {
  .newsletter__content-container {
    max-width: 66%;
    margin: 0 auto;
  }
}
.newsletter__input-container {
  width: 100%;
}
@media (min-width: 768px) {
  .newsletter__input-container {
    max-width: 54%;
    margin: 0 auto;
  }
}
.newsletter__form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.newsletter__form__input-email {
  width: 80%;
  font-size: 1rem;
  color: #2A2A2A;
  background-color: #F6EFEB;
  border: #f35000 1px solid;
  padding: 1em;
  margin-bottom: 0.5em;
}
.newsletter__form__input-email::-moz-placeholder {
  color: #2A2A2A;
}
.newsletter__form__input-email::placeholder {
  color: #2A2A2A;
}
.newsletter__form__input-email:focus-within {
  outline: #f35000 1px solid;
}
.newsletter__form__consent-container {
  width: 80%;
  color: #2A2A2A;
  font-size: 1rem;
  line-height: 1.75;
  text-align: center;
}
.newsletter__form__consent-text {
  text-align: center;
  margin-bottom: 2em;
}
.newsletter__form__consent-text a {
  color: #f35000;
  text-decoration: underline;
}
.newsletter__form__btn {
  text-transform: uppercase;
  color: #F6EFEB;
}
.newsletter__form__btn:disabled {
  opacity: 0.5;
}

.footer {
  position: relative;
  background: #202020;
  border-top: 4px #FEEA00 solid;
}
.footer__content-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: 8em 2em 0.5em 2em;
}
@media (min-width: 576px) {
  .footer__content-container {
    flex-direction: row;
    flex-wrap: wrap;
  }
}
.footer h3 {
  font-size: 1.25rem;
  font-weight: 300;
  margin: 0 0 0.5em 0;
}
.footer hr {
  width: 70%;
  height: 2px;
  background-color: #f35000;
  margin-bottom: 2em;
}
.footer__social-media {
  margin-bottom: 4em;
}
.footer__social-media a + a {
  margin-left: 2em;
}
@media (min-width: 576px) {
  .footer__social-media {
    width: 50%;
  }
}
.footer__contact {
  margin-bottom: 4em;
}
@media (min-width: 576px) {
  .footer__contact {
    width: 50%;
    margin-bottom: 0.5em;
  }
}
.footer__legal-links {
  margin-bottom: 4em;
}
.footer__legal-links ul li {
  text-align: center;
  margin-bottom: 1em;
}
.footer__legal-links ul li a {
  text-decoration: underline;
}
@media (min-width: 576px) {
  .footer__legal-links {
    width: 100%;
    margin-top: 2em;
  }
}
.footer__address {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-bottom: 4em;
}
.footer__address img {
  width: 55%;
}
@media (min-width: 576px) {
  .footer__address img {
    width: 40%;
  }
}
@media (min-width: 1024px) {
  .footer__address img {
    width: 33%;
  }
}
.footer__address address {
  width: 200px;
  margin: 0;
}
.footer__copyright {
  font-size: 0.75rem;
}
.footer__copyright hr {
  background-color: #FFFFC0;
}
@media (min-width: 576px) {
  .footer__copyright hr {
    width: 95%;
  }
}
@media (min-width: 576px) {
  .footer__copyright {
    width: 100%;
  }
}
.footer__credits {
  font-size: 0.75rem;
  color: #f35000;
}
.footer__credits p {
  margin-bottom: 0;
}
@media (min-width: 576px) {
  .footer__credits {
    width: 100%;
  }
}
.footer__nav-up {
  display: none;
  position: absolute;
  left: 50%;
  top: 15%;
  transform: translateX(-50%);
}
@media (min-width: 1024px) {
  .footer__nav-up {
    display: block;
  }
}
.footer__nav-up__container {
  position: relative;
  width: 50px;
  height: 50px;
  opacity: 0.7;
  background-color: #FEEA00;
  border-radius: 50%;
  transition: all 0.5s ease-in-out;
}
.footer__nav-up__container:hover {
  opacity: 0.8;
  transform: scale(1.0125);
  background-color: #f35000;
}
.footer__nav-up__figure {
  position: absolute;
  left: 20%;
  top: -10%;
  border-top: 15px solid transparent;
  border-right: 15px solid transparent;
  border-bottom: 25px solid #030303;
  border-left: 15px solid transparent;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */