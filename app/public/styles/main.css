/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
  margin: 0; /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type=button],
input[type=reset],
input[type=submit] {
  -webkit-appearance: button; /* 2 */
  cursor: pointer; /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type=checkbox],
input[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type=search] {
  -webkit-appearance: textfield; /* 1 */ /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* MEDIA QUERY MIXINS - START*/
/* MEDIA QUERY MIXINS - END*/
* {
  padding: 0;
  border: 0;
  box-sizing: border-box;
}

html {
  height: 100%;
  scroll-behavior: smooth;
}

body {
  width: 100%;
  height: 100%;
  font-family: "Montserrat", sans-serif;
  font-weight: 400;
  background-color: #010101;
  color: #FFFFC0;
  display: flex;
  flex-direction: column;
}
body .page-content {
  flex-grow: 1;
}

a {
  text-decoration: none;
  color: #FFFFC0;
}

img {
  width: 100%;
  max-width: 100%;
  height: auto;
}

ul {
  list-style-type: none;
  padding: 0;
}

h3 {
  line-height: 1.75;
}

p {
  line-height: 1.5;
}

.antispm {
  display: none;
}

noscript::before {
  content: "Om deze website te bezoeken moet je webbrowser JavaScript ondersteunen en toestaan.";
  font-style: italic;
  font-weight: bolder;
  font-size: 1.25rem;
  text-align: center;
  color: #f35000;
  background-color: #010101;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  padding: 1em 0;
}

.link-section {
  background-color: #FFF9F6;
  padding: 4em 2em;
}

.link-section__heading:first-of-type {
  margin-bottom: 4em;
}

.link {
  transition: transform 0.3s ease-in;
  opacity: 0;
  transition: opacity ease-in-out 0.3s;
}
.link.reveal {
  opacity: 1;
}

.link:hover {
  transform: scale(1.025);
  transition: transform 0.3s ease-in;
  cursor: pointer;
}

@media screen and (min-width: 768px) {
  .links {
    display: flex;
    justify-content: space-around;
  }
  .link-section__heading {
    flex: 1;
    max-width: 400px;
  }
  .link + .link {
    margin-left: 2em;
  }
  .link-section__heading:first-of-type {
    margin-bottom: 2em;
  }
  .link:hover {
    border: 1px solid #f35000;
    border-radius: 0.25em;
  }
  .link:active,
  .link:focus {
    transform: scale(1);
    border: 1px solid #f35000;
    border-radius: 0.25em;
  }
}
#history-first,
#history-second,
#history-third,
#history-fourth,
#history-fifth,
#history-sixt,
#history-seventh {
  scroll-behavior: smooth;
}

.intro, .credits {
  margin: 0 auto;
  width: 100%;
  max-width: 650px;
  padding: 2em;
  margin-top: 0.5em;
  line-height: 1.75;
  text-align: center;
}
.intro h1, .intro h3, .credits h1, .credits h3 {
  text-align: center;
}
.intro h1, .credits h1 {
  color: #f35000;
  text-transform: capitalize;
}

.timeline-links {
  padding: 0 2em;
  max-width: 650px;
  margin: 0 auto 2em auto;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
}
.timeline-links a {
  color: #f35000;
  font-size: 0.8rem;
  margin-top: 1em;
}
.timeline-links a::after {
  content: "|";
  margin: 0 1em;
}
.timeline-links a:last-child::after {
  display: none;
}

blockquote {
  line-height: 1.5;
  font-size: 0.95rem;
}

.credits {
  margin-bottom: 4em;
}

.timeline {
  position: relative;
  width: 100%;
  max-width: 1200px;
  padding: 1em 0 1em 1em;
  margin: 0 auto;
}
.timeline::before {
  content: "";
  width: 5px;
  height: 99.6%;
  background-color: #f35000;
  border-radius: 1em;
  position: absolute;
  left: 10px;
  top: 0;
}

.container {
  padding: 1em;
  position: relative;
  margin: 0 auto 4em auto;
  opacity: 0;
  transition: opacity 0.35s ease-in;
}
.container.reveal {
  opacity: 1;
}
.container::before {
  content: "";
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: #FEEA00;
  position: absolute;
  left: -14px;
  top: 1em;
}
.container .content {
  background-color: #F6EFEB;
  color: #2A2A2A;
  padding: 1em 2em;
  border-radius: 0.5em;
}
.container .content h2 {
  font-size: 1.125rem;
  text-transform: uppercase;
  color: #f35000;
}
.container .content p {
  line-height: 1.75;
  text-align: left;
}
.container .content img {
  display: block;
  margin: 2em auto;
  width: 80%;
  height: auto;
}
.container .content blockquote {
  margin-left: 0.5em;
  margin-right: 0;
}

@media screen and (min-width: 768px) {
  .intro,
  .credits {
    text-align: center;
  }
  .timeline {
    padding: 1em;
  }
  .timeline::before {
    left: 50%;
    margin-left: 7px;
  }
  .container {
    width: 50%;
    position: relative;
  }
  .container.left {
    left: 0;
    margin: 0 1em 0 0;
  }
  .container.left::before {
    left: 100%;
  }
  .container.right {
    left: 50%;
    margin: 0 0 0 14px;
  }
}
.info__title,
.info__content-text,
.info__contact {
  padding: 0 2em;
  max-width: 500px;
  margin: 0 auto;
}

.info__title {
  width: 100%;
  margin-top: 3em;
  line-height: 1.75;
  text-align: center;
}
.info__title h1 {
  font-size: 1.5rem;
  text-align: center;
  text-transform: uppercase;
}

.info__content-images {
  padding: 1em 0;
  text-align: center;
}
.info__content-images img {
  width: auto;
  height: 100px;
}

.info__content-text,
.info__contact {
  line-height: 1.75;
}

.info__content-text {
  margin-bottom: 4em;
}

.info__contact p {
  color: #f35000;
}
.info__contact hr {
  background-color: #7A2800;
  height: 3px;
  width: 200px;
  margin: 0;
}

@media screen and (min-width: 768px) {
  .info__content {
    display: flex;
    padding: 0 1em;
    justify-content: space-evenly;
    margin-bottom: 2em;
  }
  .info__content .info__content-text {
    order: 1;
    margin: unset;
  }
  .info__content .info__content-images {
    order: 2;
    margin: unset;
    display: flex;
    flex-direction: column;
  }
  .info__content .info__content-images img {
    width: 80%;
    height: auto;
    margin-bottom: 1em;
  }
}
@media screen and (min-width: 992px) {
  .info__contact {
    text-align: left;
    margin: 0 auto 0 0;
  }
}
.location {
  margin: 2em auto;
  width: 100%;
  padding: 1em 2em;
  text-align: center;
}
.location .location__title h1 {
  font-size: 1.5rem;
  text-transform: uppercase;
  margin-bottom: 1em;
}
.location .location__text {
  margin-bottom: 2em;
}
.location .location__text h2 {
  color: #f35000;
  text-transform: uppercase;
  font-size: 1rem;
  margin-top: 2em;
}
.location .location__text p {
  line-height: 1.75;
}
.location .location__text a.btn {
  display: inline-block;
  text-transform: uppercase;
  margin: 2em auto;
}
.location .location__map-container {
  width: 100%;
  min-width: 250px;
  height: 500px;
  margin: 0 auto 6em auto;
}
.location #map {
  width: 100%;
  height: 100%;
  border: 1px solid #f35000;
}
@media screen and (min-width: 768px) {
  .location {
    text-align: left;
    max-width: 650px;
    margin: 2em auto 0 auto;
  }
}

#map {
  color: #f35000;
}
#map h1 {
  font-size: 1rem;
}

.label-text {
  text-align: left;
  padding: 0 2em;
  margin-top: 3em;
}
.label-text h1 {
  font-size: 1.5rem;
}
.label-text a {
  color: #f35000;
}

form.contact {
  width: 100%;
  max-width: 650px;
  margin: 0 auto 4em auto;
  padding: 2em;
  color: #2A2A2A;
}
form.contact .input-container {
  display: flex;
  flex-direction: column;
  margin-bottom: 2em;
}
form.contact .input-container label {
  margin-bottom: 1em;
  color: #FFFFC0;
  text-transform: uppercase;
  font-weight: 600;
}
form.contact .input-container label::after {
  content: "*";
  color: #f35000;
  padding-left: 0.5em;
  font-size: 0.75rem;
}
form.contact .input-container label[for=subject]::after {
  display: none;
}
form.contact .input-container input,
form.contact .input-container select,
form.contact .input-container textarea {
  padding: 1em;
  background-color: #F6EFEB;
}
form.contact .input-container input:focus-within,
form.contact .input-container textarea:focus-within,
form.contact .input-container select:focus-within {
  outline: #FEEA00 3px solid;
}
form.contact .input-container select {
  text-transform: capitalize;
}
form.contact .form__consent {
  text-align: center;
}
form.contact .form__consent p {
  color: #FFFFC0;
  line-height: 1.75;
  display: block;
  margin-bottom: 2em;
}
form.contact .form__consent button {
  text-transform: uppercase;
  color: #F6EFEB;
  font-weight: 700;
  font-size: 1rem;
}
form.contact .form__consent button[disabled] {
  opacity: 0.5;
}
form.contact .form__consent button:focus {
  outline: #f35000 1px solid;
}
form.contact .form__consent .form__consent-container {
  margin-bottom: 2em;
}
form.contact .form__consent .form__consent-container .checkbox-container {
  position: relative;
}
form.contact .form__consent .form__consent-container .checkbox-container input {
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0;
  cursor: pointer;
}
form.contact .form__consent .form__consent-container .checkbox-container .checkbox-custom {
  display: block;
  position: absolute;
  left: -10px;
  top: -5px;
  transform: translateX(-50px);
  height: 30px;
  width: 30px;
  background-color: #FFF9F6;
  border: 3px solid #FEEA00;
  margin: 0 auto;
}
form.contact .form__consent .form__consent-container .checkbox-container .checkbox-custom:hover {
  background-color: #555;
  cursor: pointer;
}
form.contact .form__consent .form__consent-container .checkbox-container input:checked ~ .checkbox-custom {
  background-color: #555;
}
form.contact .form__consent .form__consent-container .checkbox-container .checkbox-custom::after {
  display: none;
  content: "";
  position: absolute;
  left: 7px;
  top: 4px;
  width: 5px;
  height: 10px;
  border: solid #FFF9F6;
  border-width: 0 4px 4px 0;
  /* border-radius: 8px; */
  transform: rotate(45deg);
}
form.contact .form__consent .form__consent-container .checkbox-container input:checked ~ .checkbox-custom::after {
  display: block;
}
form.contact .form__consent a {
  display: block;
  color: #f35000;
  font-size: 0.75rem;
}
@media screen and (min-width: 992px) {
  form.contact {
    display: flex;
    width: 100%;
    max-width: 1200px;
  }
  form.contact .form__inputs {
    width: 60%;
    margin-right: 4em;
  }
  form.contact .form__inputs input,
  form.contact .form__inputs select {
    width: 60%;
  }
  form.contact .form__inputs textarea {
    width: 100%;
  }
  form.contact .form__consent {
    width: 40%;
    align-self: flex-end;
    margin-bottom: 2em;
  }
}

.policy-text-container {
  padding: 2em;
  padding-bottom: 8em;
  width: 100%;
}
.policy-text-container h1,
.policy-text-container h2 {
  text-transform: uppercase;
  color: #f35000;
  margin: 2em 0;
}
.policy-text-container h1 {
  font-size: 1.5rem;
}
.policy-text-container h2 {
  font-size: 1rem;
  font-weight: 700;
}
.policy-text-container p {
  line-height: 1.75;
}
@media screen and (min-width: 768px) {
  .policy-text-container {
    max-width: 50%;
    margin: 0 0 0 auto;
  }
}

.error-container {
  text-align: center;
  margin: 6em 0;
}
.error-container h2 {
  margin-bottom: 2em;
}
.error-container a {
  display: block;
  max-width: 30%;
  margin: 0 auto;
  background-color: #f35000;
  color: #FFF9F6;
  padding: 1em 2em;
}

@media screen and (min-width: 1200px) {
  .wrapper {
    max-width: 1200px;
    margin: 0 auto;
  }
}

.modal {
  display: none;
  background-color: #7A2800;
  opacity: 0.95;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 50;
}
.modal .modal__img,
.modal .modal__text {
  width: 80%;
  margin: 0 auto;
  text-align: center;
}
.modal .modal__img {
  padding: 2em 2em 0 2em;
}
.modal .modal__img img {
  width: 100%;
}
.modal .modal__text {
  margin-bottom: 2em;
}
.modal .form-row {
  display: flex;
  flex-direction: column;
}
.modal .form-row label span {
  display: block;
  text-align: center;
  font-size: 1.25rem;
  font-weight: 700;
  width: 100%;
  margin-bottom: 1em;
}
.modal .form-row label span.store {
  width: 100%;
  font-size: 1rem;
  margin-top: 1em;
  margin-bottom: 0.75em;
}
.modal .form-row label .form__btns {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  width: 100%;
}
.modal .form-row button.btn {
  background-color: #2a8c00;
  color: #FFF9F6;
  text-transform: uppercase;
  font-size: 1rem;
  font-weight: 700;
  margin-right: 1em;
}
.modal .form-row button:hover {
  background-color: #2a8c00;
}
.modal .form-row a {
  font-size: 1rem;
  font-weight: 700;
  padding: 1em 1.25em;
  text-transform: uppercase;
  color: #FFF9F6;
}
.modal .form-row a:hover {
  background-color: #f35000;
}
.modal .form-row input {
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0;
  cursor: pointer;
}
.modal .form-row .checkbox-custom {
  display: block;
  position: relative;
  height: 25px;
  width: 25px;
  background-color: #FFF9F6;
  margin: 0 auto;
}
.modal .form-row .checkbox-custom:hover {
  background-color: #555;
  cursor: pointer;
}
.modal .form-row input:checked ~ .checkbox-custom {
  background-color: #555;
}
.modal .form-row .checkbox-custom::after {
  display: none;
  content: "";
  position: absolute;
  left: 7px;
  top: 4px;
  width: 5px;
  height: 10px;
  border: solid #FFF9F6;
  border-width: 0 4px 4px 0;
  /* border-radius: 8px; */
  transform: rotate(45deg);
}
.modal .form-row input:checked ~ .checkbox-custom::after {
  display: block;
}

.modal.in-view {
  display: block;
}

@media screen and (min-width: 425px) {
  .modal .modal__img img {
    width: 70%;
  }
}
@media screen and (min-width: 786px) {
  .modal .modal__img,
  .modal .modal__text {
    max-width: 500px;
  }
  .modal .modal__text {
    font-size: 1rem;
  }
  .modal .form-row label span {
    font-size: 1.25rem;
    margin-bottom: 1em;
  }
  .modal .form-row label span.store {
    font-size: 1.25rem;
  }
}
.modal.hide {
  display: none;
}

.cookie-consent {
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 6;
  width: 100%;
  padding: 2em 1em;
  background-image: linear-gradient(#010101, #f35000, #010101);
  opacity: 0.95;
  border-radius: 5px 5px 0 0;
}
@media (min-width: 768px) {
  .cookie-consent {
    bottom: unset;
    top: 0;
  }
}
.cookie-consent--show {
  display: flex;
}
.cookie-consent--hide {
  display: none;
}
.cookie-consent__btn-container {
  display: flex;
  flex-direction: column;
}
@media (min-width: 768px) {
  .cookie-consent__btn-container {
    flex-direction: row;
    flex-flow: row-reverse;
  }
}
.cookie-consent__btn {
  width: 12em;
  margin-bottom: 1em;
}
@media (min-width: 768px) {
  .cookie-consent__btn {
    margin: 0 1em 0 0;
  }
}

.btn {
  text-align: center;
  letter-spacing: 1px;
  background-color: #7A2800;
  border-radius: 5px;
  box-shadow: 2px 2px 2px 0 rgba(0, 0, 0, 0.25);
  transition: transform ease-in 0.3s;
  padding: 0.5em 1em;
}
.btn--outline {
  background-color: unset;
  border: 1px #FFFFC0 solid;
}
.btn:hover {
  transform: scale(1.0125);
  cursor: pointer;
}

/*
    ##########
    BASE STYLE
    ##########

- mobile first approach: base style + media query
- base style gets for all pages
- landing class gets added through js on homepage only
*/
header {
  width: 100%;
  display: flex;
  justify-content: flex-end;
}
header .navbar {
  width: 100%;
  display: flex;
  justify-content: space-between;
  margin: 0 auto;
  position: relative;
}
header .navbar a.logo {
  display: flex;
  justify-content: center;
  align-items: flex-start;
}
header .navbar a.logo i {
  margin: 2em 0 0 1em;
}
header .navbar a.logo img {
  width: 125px;
  height: 50px;
  margin-top: 1em;
  margin-left: 2em;
  justify-self: flex-start;
}
header .navbar ul.menu {
  display: flex;
  margin-right: 2em;
}
header .navbar li {
  display: inline-block;
  padding: 1em 0;
  transition: transform 0.2s ease-in-out;
}
header .navbar li.menu__link + li.menu__link {
  margin-left: 1.5em;
}
header .navbar .hide-mobile {
  display: none;
}
header .navbar ul.menu li:last-child {
  padding: 0.5em 0 0 1em;
}
header .navbar ul a {
  display: flex;
  flex-direction: row;
  text-align: center;
}
header .navbar ul a i {
  padding-right: 1em;
}
header .navbar ul li#toggle a i {
  padding-right: 0;
}
header .navbar li:hover,
header .navbar li:active {
  transform: scale(1.05);
}
header .navbar ul.menu__collapse {
  position: absolute;
  top: 50px;
  right: 2em;
  z-index: 10;
  background: linear-gradient(#7A2800, #010101);
  border-radius: 0.25em;
  padding: 2em;
  opacity: 0;
  transform: scale(1, 0);
  transition: all ease-in 0.3s;
  transform-origin: top;
}
header .navbar ul.menu__collapse.visible {
  opacity: 0.95;
  transform: scale(1, 1);
}
header .navbar ul.menu__collapse li {
  display: block;
  padding-bottom: 1em;
}
header .navbar ul.menu__collapse.visible {
  opacity: 0.95;
  transform: scale(1, 1);
}
header .navbar ul.menu__collapse li {
  display: block;
  padding-bottom: 1em;
}
header .navbar ul.menu__collapse li#shop {
  opacity: 0.45;
}
header .navbar ul.menu__collapse li#shop:hover,
header .navbar ul.menu__collapse li#shop a:hover {
  cursor: not-allowed;
}
@media screen and (min-width: 768px) {
  header .navbar ul.menu li.hide-mobile {
    display: block;
  }
  header .navbar ul.menu__collapse li.hide-lg {
    display: none;
  }
}

/*
    ##############
    HOMEPAGE STYLE
    ##############

- menu at the bottom on mobile, top on lg screens
- 'landing' class gets added through js on the homepage
*/
header.landing {
  background: linear-gradient(#010101, #7A2800);
  position: absolute;
  bottom: 0;
  height: 20vh;
  z-index: 5;
  display: flex;
  justify-content: center;
  align-items: flex-end;
}
header.landing .navbar {
  margin: 0 auto;
  display: flex;
  justify-content: center;
  align-items: flex-end;
}
header.landing .navbar a.logo {
  display: none;
}
header.landing .navbar ul a {
  flex-direction: column;
}
header.landing .navbar ul a i {
  padding-right: 0;
  padding-bottom: 1em;
}
header.landing .navbar ul li:last-of-type a i {
  padding-bottom: 0;
}
header.landing .navbar li {
  display: block;
  transition: transform 0.2s ease-in-out;
  font-size: 0.8rem;
}
header.landing .navbar ul.menu {
  margin-right: 0;
  margin-bottom: 0.5em;
}
header.landing .navbar ul.menu__collapse {
  top: -180px;
  right: 2em;
  transform-origin: bottom;
  padding: 1em;
}
header.landing .navbar ul.menu__collapse a {
  flex-direction: row;
  justify-content: flex-end;
}
header.landing .navbar ul.menu__collapse a i {
  padding-left: 1em;
  order: 1;
}
header.landing .navbar ul.menu__collapse li.hide-lg {
  display: none;
}
@media screen and (min-width: 576px) {
  header.landing {
    position: inherit;
    background: inherit;
    align-items: flex-start;
    min-height: 25px;
  }
  header.landing .navbar {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    justify-content: flex-end;
    position: relative;
  }
  header.landing .navbar ul li {
    font-size: 1rem;
    padding: 1em 0;
  }
  header.landing .navbar li + li {
    margin-left: 2em;
  }
  header.landing .navbar ul.menu {
    margin-right: 2em;
  }
  header.landing .navbar ul.menu__collapse {
    position: absolute;
    top: 55px;
    transform-origin: top;
    background: linear-gradient(#7A2800, #010101);
  }
  header.landing .navbar ul a {
    flex-direction: row;
  }
  header.landing .navbar ul a i {
    padding-right: 1em;
  }
}

.hero-section {
  height: 100vh;
  height: calc(var(--vh, 1vh) * 100);
  overflow: hidden;
}
.hero-section .wrapper {
  height: 100%;
}
.hero-section .wrapper .hero__content {
  height: 100%;
}

.flash-msg-container {
  width: 350px;
  position: absolute;
  top: 2em;
  left: 50%;
  z-index: 50;
  transform: translateX(-50%);
  text-align: center;
  color: #2A2A2A;
  font-weight: 700;
  background-color: #FFF9F6;
  animation: fadeOut 5s 2s forwards;
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
.scroll-icon {
  display: none;
}

.hero__cta {
  width: 100%;
  text-align: center;
  color: #FFFFC0;
  padding: 2em 2em 0 2em;
}
.hero__cta .hero__logo-container img {
  max-width: 60%;
}
.hero__cta h1,
.hero__cta h2,
.hero__cta .btn {
  display: none;
}

.hero__image-container {
  position: relative;
  text-align: center;
}

.hero__image-container img {
  width: 60%;
}

/*
    ####################
    media queries mobile
    ####################

    sm -> lg
    screens with sufficient height get to see the title
*/
@media screen and (min-height: 650px) {
  .hero__content {
    margin-top: 15%;
  }
  .hero__cta h1,
  .hero__cta h2 {
    display: block;
  }
  .hero__cta h1 {
    margin-top: 2em;
    font-size: 1.25rem;
  }
  .hero__cta h2 {
    font-size: 0.75rem;
  }
  .hero__cta .hero__logo-container img {
    max-width: 80%;
  }
  .hero__cta .hero__image-container img {
    width: 100%;
  }
}
@media screen and (min-width: 350px) {
  .hero__content {
    margin-top: unset;
  }
  .hero__content .hero__logo-container img {
    max-width: 50%;
  }
  .hero__content .hero__image-container img {
    width: 50%;
  }
}
@media screen and (min-width: 390px) {
  .hero__content .hero__logo-container img {
    max-width: 45%;
  }
  .hero__content .hero__image-container img {
    width: 45%;
  }
}
@media screen and (min-width: 460px) {
  .hero__content .hero__logo-container img {
    max-width: 40%;
  }
  .hero__content .hero__image-container img {
    width: 40%;
  }
}
@media screen and (min-width: 500px) {
  .hero__content .hero__logo-container img {
    max-width: 35%;
  }
  .hero__content .hero__image-container img {
    width: 35%;
  }
}
/*
    ###########################
    media queries tablet and up
    ###########################

    switch to two-column layout
*/
@media screen and (min-width: 576px) {
  .hero__content {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
  }
  .hero__content .hero__cta,
  .hero__content .hero__image-container {
    height: 80%;
    display: flex;
    align-items: center;
  }
  .hero__content .hero__image-container {
    flex: 2;
    position: relative;
  }
  .hero__content .hero__image-container img {
    width: 90%;
    position: absolute;
    left: -25px;
  }
  .hero__content .hero__cta {
    flex-direction: column;
    justify-content: center;
    flex: 3;
    padding: 2em;
  }
  .hero__content .hero__cta h1,
  .hero__content .hero__cta h2,
  .hero__content .hero__cta .btn {
    display: block;
    font-weight: 400;
  }
  .hero__content .hero__cta h1 {
    font-size: 1.25rem;
    margin-top: 0 !important;
    margin-bottom: 0;
  }
  .hero__content .hero__cta h2 {
    font-size: 0.75rem;
    font-style: italic;
  }
  .hero__content .hero__cta .btn {
    width: 60%;
    max-width: 175px;
    margin: 0 auto;
    margin-top: 2em;
    text-transform: uppercase;
    font-size: 0.85rem;
    background-color: #7A2800;
  }
}
@media screen and (min-width: 768px) {
  .scroll-icon {
    display: block;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    animation: moveArrow 1s infinite;
  }
  @keyframes moveArrow {
    0% {
      bottom: 1em;
    }
    50% {
      bottom: 1.35em;
    }
    100% {
      bottom: 1em;
    }
  }
}
@media screen and (min-width: 1024px) {
  .hero__content .hero__cta .hero__logo-container img {
    max-width: 50%;
  }
  .hero__content .hero__cta h1 {
    font-size: 1.5rem;
  }
  .hero__content .hero__cta h2 {
    font-size: 1rem;
  }
  .hero__content .hero__cta .btn {
    max-width: 225px;
    font-size: 1rem;
  }
  .hero__content .hero__image-container img {
    width: 85%;
  }
}
@media screen and (min-width: 1440px) {
  .hero__content .hero__cta .hero__logo-container img {
    max-width: 60%;
  }
  .hero__content .hero__cta h1 {
    font-size: 1.75rem;
  }
  .hero__content .hero__cta h2 {
    font-size: 1.25rem;
  }
  .hero__content .hero__cta .btn {
    max-width: 300px;
    font-size: 1.25rem;
  }
  .hero__content .hero__image-container img {
    width: 100%;
  }
}
@media screen and (min-width: 1800px) {
  .hero__content .hero__cta .hero__logo-container img {
    max-width: 80%;
  }
  .hero__content .hero__cta h1 {
    font-size: 2.25rem;
  }
  .hero__content .hero__cta h2 {
    font-size: 1.75rem;
  }
  .hero__content .hero__cta .btn {
    max-width: 500px;
    font-size: 1.75rem;
  }
  .hero__content .hero__image-container img {
    left: 0;
  }
}
.testimonial {
  background-color: #F6EFEB;
  padding: 4em 1em;
  color: #2A2A2A;
}

.testimonial__content {
  text-align: center;
  padding: 0 2em;
  opacity: 0;
  transition: opacity ease-in-out 0.3s;
}
.testimonial__content.reveal {
  opacity: 1;
}
.testimonial__content .testimonial__container:first-of-type {
  margin-bottom: 4em;
}
.testimonial__content .testimonial__container p:last-of-type {
  color: #f35000;
}
.testimonial__content i.fa-angle-right {
  color: #FEEA00;
  margin-right: 1em;
}
.testimonial__content p:first-of-type {
  text-align: left;
  line-height: 1.75;
  padding: 1em 0;
}
.testimonial__content p.author {
  display: flex;
  text-align: left;
}

@media screen and (min-width: 768px) {
  .testimonial__heading {
    margin-bottom: 6em !important;
  }
  .testimonial__heading hr {
    max-width: 250px;
  }
  .testimonial__content {
    display: flex;
    padding-right: 0;
    padding-left: 4em;
  }
  .testimonial__container {
    flex: 1;
  }
  .testimonial__container + .testimonial__container {
    margin-left: 1em;
  }
  .testimonial__container {
    display: flex;
    flex-wrap: wrap;
  }
  .testimonial__container i {
    margin-right: 0.5em;
  }
  .testimonial__container p.quote {
    width: 70%;
    padding-top: 0;
    margin: 0;
    font-size: 1rem;
  }
  .testimonial__container p.author {
    display: flex;
    margin-left: 4em;
    margin-top: 0;
    text-align: left;
  }
}
.heading {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  margin-bottom: 2em;
}
.heading i {
  color: #FEEA00;
}
.heading h2,
.heading h3 {
  color: #2A2A2A;
}
.heading h3 {
  font-size: 1.1rem;
  font-weight: 300;
  margin: 0 0 0.5em 0;
}
.heading hr {
  width: 50%;
  height: 2px;
  background: #f35000;
}

.history {
  background-color: #F6EFEB;
}

.history__container {
  padding: 4em 2em;
}

.history-section__heading {
  margin-bottom: 4em;
}

.image-link-container {
  text-align: center;
}

.image-link-container img {
  width: 80%;
  border-radius: 2em;
}

.image-link-container a:hover {
  cursor: pointer;
}

.image-link-container img:first-of-type {
  margin-bottom: 2em;
}

@media screen and (min-width: 768px) {
  .history__container {
    display: flex;
    justify-content: center;
  }
  .history-section__heading {
    max-width: 400px;
  }
  .image-link-container {
    margin-left: 2em;
    max-width: 400px;
  }
  .image-link-container img {
    width: 50%;
  }
}
.newsletter-section {
  background-color: #FFF9F6;
  padding: 4em 2em;
}

.newsletter__input form.newsletter {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.newsletter__input input[name=email] {
  margin-bottom: 0.5em;
  width: 80%;
  border: #f35000 1px solid;
  font-size: 1rem;
  color: #2A2A2A;
  padding: 1em;
  background-color: #F6EFEB;
}
.newsletter__input input[name=email]::-moz-placeholder {
  color: #2A2A2A;
}
.newsletter__input input[name=email]::placeholder {
  color: #2A2A2A;
}
.newsletter__input input[name=email]:focus-within {
  outline: #f35000 1px solid;
}
.newsletter__input .form__consent {
  width: 80%;
  color: #2A2A2A;
  text-transform: uppercase;
  font-size: 0.75rem;
  line-height: 1.75;
  text-align: right;
}
.newsletter__input .form__consent button {
  text-transform: uppercase;
  color: #F6EFEB;
}
.newsletter__input .form__consent button[disabled] {
  opacity: 0.5;
}
.newsletter__input .form__consent p {
  text-align: left;
}
.newsletter__input .form__consent p a {
  color: #f35000;
}
.newsletter__input .form__consent .form__consent-container {
  margin-bottom: 2em;
}
.newsletter__input .form__consent .form__consent-container .checkbox-container {
  position: relative;
}
.newsletter__input .form__consent .form__consent-container .checkbox-container input {
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0;
  cursor: pointer;
}
.newsletter__input .form__consent .form__consent-container .checkbox-container .checkbox-custom {
  display: block;
  position: absolute;
  left: -175px;
  top: -37px;
  height: 30px;
  width: 30px;
  background-color: #FFF9F6;
  border: 3px solid #FEEA00;
  margin: 0 auto;
}
.newsletter__input .form__consent .form__consent-container .checkbox-container .checkbox-custom:hover {
  background-color: #555;
  cursor: pointer;
}
.newsletter__input .form__consent .form__consent-container .checkbox-container input:checked ~ .checkbox-custom {
  background-color: #555;
}
.newsletter__input .form__consent .form__consent-container .checkbox-container .checkbox-custom::after {
  display: none;
  content: "";
  position: absolute;
  left: 7px;
  top: 4px;
  width: 5px;
  height: 10px;
  border: solid #FFF9F6;
  border-width: 0 4px 4px 0;
  /* border-radius: 8px; */
  transform: rotate(45deg);
}
.newsletter__input .form__consent .form__consent-container .checkbox-container input:checked ~ .checkbox-custom::after {
  display: block;
}

@media screen and (min-width: 768px) {
  .newsletter-section__heading {
    max-width: 400px;
    margin: 0 auto 4em auto;
  }
  .newsletter__input input[name=email] {
    width: 40%;
    margin: 0.25em auto 0 auto;
  }
  .newsletter__input .form__consent {
    width: 40%;
  }
  .newsletter__input .form__consent button {
    font-size: 1rem;
  }
  .newsletter__input .form__consent .form__consent-container .checkbox-container .checkbox-custom {
    left: -225px;
    top: -45px;
  }
}
footer {
  background: #202020;
  position: relative;
  padding: 4em 2em 0.5em 2em;
}
footer h3 {
  font-size: 1.25rem;
  font-weight: 300;
  margin: 0 0 0.5em 0;
}
footer hr {
  background-color: #f35000;
  width: 70%;
  height: 2px;
  margin-bottom: 2em;
}

.footer {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.footer__social-media {
  margin-bottom: 4em;
}
.footer__social-media a + a {
  margin-left: 2em;
}

.footer__faq {
  margin-bottom: 4em;
}

.footer__legal {
  margin-bottom: 1em;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.footer__legal ul {
  margin-bottom: 2em;
}
.footer__legal ul li {
  text-align: center;
  margin-bottom: 1em;
}

.footer__address {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-bottom: 3em;
}
.footer__address img {
  width: 55%;
}
.footer__address address {
  width: 200px;
  margin: 0;
}

.footer__copyright,
.footer__promo-link {
  font-size: 0.75rem;
}

.footer__copyright {
  margin-bottom: 0.5em;
}

.footer__promo-link {
  color: #f35000;
  opacity: 1;
}

@media screen and (min-width: 567px) {
  .footer__address img {
    width: 40%;
  }
}
@media screen and (min-width: 768px) {
  footer hr {
    width: 200px;
  }
  .footer {
    flex-direction: row;
    flex-wrap: wrap;
    align-items: flex-start;
  }
  .footer__social-media {
    width: 50%;
    order: 1;
  }
  .footer__faq {
    width: 50%;
    order: 2;
    margin-bottom: 2em;
  }
  .footer__address {
    width: 50%;
    order: 3;
  }
  .footer__address img {
    width: 25%;
  }
  .footer__legal {
    order: 4;
    width: 50%;
  }
  .footer__copyright {
    order: 5;
    width: 100%;
  }
  .footer__promo-link {
    order: 6;
    width: 100%;
  }
}
@media screen and (min-width: 1024px) {
  .nav-up {
    background-color: #FEEA00;
    width: 50px;
    height: 50px;
    opacity: 0.7;
    border-radius: 50%;
    position: absolute;
    left: 50%;
    top: 15%;
    transform: translateX(-50%);
  }
  .nav-up-figure {
    position: absolute;
    left: 20%;
    top: -10%;
    border-top: 15px solid transparent;
    border-right: 15px solid transparent;
    border-bottom: 25px solid #030303;
    border-left: 15px solid transparent;
  }
  .nav-up:hover {
    opacity: 0.8;
    background-color: #f35000;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuc2Nzcy9ub3JtYWxpemUuc2NzcyIsIm1haW4uY3NzIiwibW9kdWxlcy9fbWl4aW5zLnNjc3MiLCJtb2R1bGVzL19nbG9iYWwuc2NzcyIsIm1vZHVsZXMvX3ZhcmlhYmxlcy5zY3NzIiwibW9kdWxlcy9fbGluay1zZWN0aW9uLnNjc3MiLCJtb2R1bGVzL19wYWdlLWhpc3Rvcnkuc2NzcyIsIm1vZHVsZXMvX3BhZ2UtaW5mby5zY3NzIiwibW9kdWxlcy9fcGFnZS1sb2NhdGlvbi5zY3NzIiwibW9kdWxlcy9fcGFnZS1jb250YWN0LnNjc3MiLCJtb2R1bGVzL19wYWdlLXBvbGljeS5zY3NzIiwibW9kdWxlcy9fcGFnZS1lcnJvci5zY3NzIiwibW9kdWxlcy9fd3JhcHBlci5zY3NzIiwibW9kdWxlcy9jb21wb25lbnRzL19tb2RhbC5zY3NzIiwibW9kdWxlcy9jb21wb25lbnRzL19jb29raWUtY29uc2VudC5zY3NzIiwibW9kdWxlcy9jb21wb25lbnRzL19idG5zLnNjc3MiLCJtb2R1bGVzL3NlY3Rpb25zL19oZWFkZXIuc2NzcyIsIm1vZHVsZXMvc2VjdGlvbnMvX2hlcm8uc2NzcyIsIm1vZHVsZXMvX3NlY3Rpb24tdGVzdGltb25pYWwuc2NzcyIsIm1vZHVsZXMvX3NlY3Rpb24taGVhZGluZy5zY3NzIiwibW9kdWxlcy9zZWN0aW9ucy9faGlzdG9yeS5zY3NzIiwibW9kdWxlcy9zZWN0aW9ucy9fbmV3c2xldHRlci5zY3NzIiwibW9kdWxlcy9zZWN0aW9ucy9fZm9vdGVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUVBQUE7QUFFQTs7OztFQUFBO0FBTUE7RUFDRSx1QkFBQSxFQUFBLE1BQUE7RUFDQSwwQkFBQSxFQUFBLE1BQUE7RUFDQSw4QkFBQSxFQUFBLE1BQUE7QUNERjs7QURJQTs7RUFBQTtBQUlBO0VBQ0UsU0FBQTtBQ0ZGOztBREtBOytFQUFBO0FBR0E7Ozs7O0VB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QTtFQUVRO0lBQ0ksVUFBQTtFckIwM0RWO0FBQ0Y7QXFCdDNEQTtFQUdRO0lBQ0ksWUFBQTtFckJzM0RWO0VxQmwzREU7SUFDSSxtQkFBQTtJQUNBLGVBQUE7SUFDQSx1QkFBQTtFckJvM0ROO0VxQmozREU7SUFDSSxVQUFBO0lBQ0EsUUFBQTtFckJtM0ROO0VxQmgzREU7SUFDSSxVQUFBO0lBQ0EsUUFBQTtJQUNBLGtCQUFBO0VyQmszRE47RXFCLzJERTtJQUNJLFVBQUE7SUFDQSxRQUFBO0VyQmkzRE47RXFCLzJETTtJQUNJLFVBQUE7RXJCaTNEVjtFcUI3MkRFO0lBQ0ksUUFBQTtJQUNBLFVBQUE7RXJCKzJETjtFcUI1MkRFO0lBQ0ksUUFBQTtJQUNBLFdBQUE7RXJCODJETjtFcUIzMkRFO0lBQ0ksUUFBQTtJQUNBLFdBQUE7RXJCNjJETjtBQUNGO0FxQjEyREE7RUFJSTtJQUNJLHlCbEI5SUs7SWtCK0lMLFdBQUE7SUFDQSxZQUFBO0lBQ0EsWUFBQTtJQUNBLGtCQUFBO0lBRUEsa0JBQUE7SUFDQSxTQUFBO0lBQ0EsUUFBQTtJQUNBLDJCQUFBO0VyQncyRE47RXFCcjJETTtJQUNBLGtCQUFBO0lBQ0EsU0FBQTtJQUNBLFNBQUE7SUFFQSxrQ0FBQTtJQUNBLG9DQUFBO0lBQ0EsaUNBQUE7SUFDQSxtQ0FBQTtFckJzMkROO0VxQm4yRE07SUFDQSxZQUFBO0lBQ0EseUJsQnBLSztFSHlnRVg7QUFDRiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuc2NzcyB2MC4xLjAgfCBNSVQgTGljZW5zZSB8IGJhc2VkIG9uIGdpdC5pby9ub3JtYWxpemUgKi9cblxuLyoqXG4gKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuICogMi4gUHJldmVudCBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nXG4gKiAgICB1c2VyIHpvb20uXG4gKi9cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IG1hcmdpbi5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICogYW5kIEZpcmVmb3guXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG4gKiAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gKi9cblxuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgXG4gKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlcjogMDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gKi9cblxuaHIge1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gIG1hcmdpbjogMDsgLyogMyAqL1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyOyAvKiAzICovXG59XG5cbi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXG4gKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICovXG5cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICogMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgYW5kIENocm9tZVxuICogICAgKGluY2x1ZGUgYC1tb3pgIHRvIGZ1dHVyZS1wcm9vZikuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDIgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMS5cbiAqIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3JkZXI6IDA7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKiBUYWJsZXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICovXG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwO1xufVxuIiwiLyohIG5vcm1hbGl6ZS5zY3NzIHYwLjEuMCB8IE1JVCBMaWNlbnNlIHwgYmFzZWQgb24gZ2l0LmlvL25vcm1hbGl6ZSAqL1xuLyoqXG4gKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuICogMi4gUHJldmVudCBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nXG4gKiAgICB1c2VyIHpvb20uXG4gKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICogYW5kIEZpcmVmb3guXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gKi9cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuaHIge1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbiAgbWFyZ2luOiAwOyAvKiAzICovXG59XG5cbi8qKlxuICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9YnV0dG9uXSxcbmlucHV0W3R5cGU9cmVzZXRdLFxuaW5wdXRbdHlwZT1zdWJtaXRdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyOyAvKiAzICovXG59XG5cbi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5pbnB1dFt0eXBlPWNoZWNrYm94XSxcbmlucHV0W3R5cGU9cmFkaW9dIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWVcbiAqICAgIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxuICovXG5pbnB1dFt0eXBlPXNlYXJjaF0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAyICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5pbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKiBNRURJQSBRVUVSWSBNSVhJTlMgLSBTVEFSVCovXG4vKiBNRURJQSBRVUVSWSBNSVhJTlMgLSBFTkQqL1xuKiB7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaHRtbCB7XG4gIGhlaWdodDogMTAwJTtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG59XG5cbmJvZHkge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMTAxMDE7XG4gIGNvbG9yOiAjRkZGRkMwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuYm9keSAucGFnZS1jb250ZW50IHtcbiAgZmxleC1ncm93OiAxO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogI0ZGRkZDMDtcbn1cblxuaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG51bCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuaDMge1xuICBsaW5lLWhlaWdodDogMS43NTtcbn1cblxucCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbi5hbnRpc3BtIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxubm9zY3JpcHQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiT20gZGV6ZSB3ZWJzaXRlIHRlIGJlem9la2VuIG1vZXQgamUgd2ViYnJvd3NlciBKYXZhU2NyaXB0IG9uZGVyc3RldW5lbiBlbiB0b2VzdGFhbi5cIjtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXdlaWdodDogYm9sZGVyO1xuICBmb250LXNpemU6IDEuMjVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNmMzUwMDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMTAxMDE7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDFlbSAwO1xufVxuXG4ubGluay1zZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjlGNjtcbiAgcGFkZGluZzogNGVtIDJlbTtcbn1cblxuLmxpbmstc2VjdGlvbl9faGVhZGluZzpmaXJzdC1vZi10eXBlIHtcbiAgbWFyZ2luLWJvdHRvbTogNGVtO1xufVxuXG4ubGluayB7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UtaW47XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgZWFzZS1pbi1vdXQgMC4zcztcbn1cbi5saW5rLnJldmVhbCB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5saW5rOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjAyNSk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UtaW47XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmxpbmtzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICB9XG4gIC5saW5rLXNlY3Rpb25fX2hlYWRpbmcge1xuICAgIGZsZXg6IDE7XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgfVxuICAubGluayArIC5saW5rIHtcbiAgICBtYXJnaW4tbGVmdDogMmVtO1xuICB9XG4gIC5saW5rLXNlY3Rpb25fX2hlYWRpbmc6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICB9XG4gIC5saW5rOmhvdmVyIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZjM1MDAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuMjVlbTtcbiAgfVxuICAubGluazphY3RpdmUsXG4gIC5saW5rOmZvY3VzIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNmMzUwMDA7XG4gICAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuICB9XG59XG4jaGlzdG9yeS1maXJzdCxcbiNoaXN0b3J5LXNlY29uZCxcbiNoaXN0b3J5LXRoaXJkLFxuI2hpc3RvcnktZm91cnRoLFxuI2hpc3RvcnktZmlmdGgsXG4jaGlzdG9yeS1zaXh0LFxuI2hpc3Rvcnktc2V2ZW50aCB7XG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xufVxuXG4uaW50cm8sIC5jcmVkaXRzIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDY1MHB4O1xuICBwYWRkaW5nOiAyZW07XG4gIG1hcmdpbi10b3A6IDAuNWVtO1xuICBsaW5lLWhlaWdodDogMS43NTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmludHJvIGgxLCAuaW50cm8gaDMsIC5jcmVkaXRzIGgxLCAuY3JlZGl0cyBoMyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5pbnRybyBoMSwgLmNyZWRpdHMgaDEge1xuICBjb2xvcjogI2YzNTAwMDtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59XG5cbi50aW1lbGluZS1saW5rcyB7XG4gIHBhZGRpbmc6IDAgMmVtO1xuICBtYXgtd2lkdGg6IDY1MHB4O1xuICBtYXJnaW46IDAgYXV0byAyZW0gYXV0bztcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cbi50aW1lbGluZS1saW5rcyBhIHtcbiAgY29sb3I6ICNmMzUwMDA7XG4gIGZvbnQtc2l6ZTogMC44cmVtO1xuICBtYXJnaW4tdG9wOiAxZW07XG59XG4udGltZWxpbmUtbGlua3MgYTo6YWZ0ZXIge1xuICBjb250ZW50OiBcInxcIjtcbiAgbWFyZ2luOiAwIDFlbTtcbn1cbi50aW1lbGluZS1saW5rcyBhOmxhc3QtY2hpbGQ6OmFmdGVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuYmxvY2txdW90ZSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtc2l6ZTogMC45NXJlbTtcbn1cblxuLmNyZWRpdHMge1xuICBtYXJnaW4tYm90dG9tOiA0ZW07XG59XG5cbi50aW1lbGluZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTIwMHB4O1xuICBwYWRkaW5nOiAxZW0gMCAxZW0gMWVtO1xuICBtYXJnaW46IDAgYXV0bztcbn1cbi50aW1lbGluZTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDVweDtcbiAgaGVpZ2h0OiA5OS42JTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YzNTAwMDtcbiAgYm9yZGVyLXJhZGl1czogMWVtO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDEwcHg7XG4gIHRvcDogMDtcbn1cblxuLmNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDFlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW46IDAgYXV0byA0ZW0gYXV0bztcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjM1cyBlYXNlLWluO1xufVxuLmNvbnRhaW5lci5yZXZlYWwge1xuICBvcGFjaXR5OiAxO1xufVxuLmNvbnRhaW5lcjo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkVFQTAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC0xNHB4O1xuICB0b3A6IDFlbTtcbn1cbi5jb250YWluZXIgLmNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjZFRkVCO1xuICBjb2xvcjogIzJBMkEyQTtcbiAgcGFkZGluZzogMWVtIDJlbTtcbiAgYm9yZGVyLXJhZGl1czogMC41ZW07XG59XG4uY29udGFpbmVyIC5jb250ZW50IGgyIHtcbiAgZm9udC1zaXplOiAxLjEyNXJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICNmMzUwMDA7XG59XG4uY29udGFpbmVyIC5jb250ZW50IHAge1xuICBsaW5lLWhlaWdodDogMS43NTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbi5jb250YWluZXIgLmNvbnRlbnQgaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMmVtIGF1dG87XG4gIHdpZHRoOiA4MCU7XG4gIGhlaWdodDogYXV0bztcbn1cbi5jb250YWluZXIgLmNvbnRlbnQgYmxvY2txdW90ZSB7XG4gIG1hcmdpbi1sZWZ0OiAwLjVlbTtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuaW50cm8sXG4gIC5jcmVkaXRzIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgLnRpbWVsaW5lIHtcbiAgICBwYWRkaW5nOiAxZW07XG4gIH1cbiAgLnRpbWVsaW5lOjpiZWZvcmUge1xuICAgIGxlZnQ6IDUwJTtcbiAgICBtYXJnaW4tbGVmdDogN3B4O1xuICB9XG4gIC5jb250YWluZXIge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4gIC5jb250YWluZXIubGVmdCB7XG4gICAgbGVmdDogMDtcbiAgICBtYXJnaW46IDAgMWVtIDAgMDtcbiAgfVxuICAuY29udGFpbmVyLmxlZnQ6OmJlZm9yZSB7XG4gICAgbGVmdDogMTAwJTtcbiAgfVxuICAuY29udGFpbmVyLnJpZ2h0IHtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luOiAwIDAgMCAxNHB4O1xuICB9XG59XG4uaW5mb19fdGl0bGUsXG4uaW5mb19fY29udGVudC10ZXh0LFxuLmluZm9fX2NvbnRhY3Qge1xuICBwYWRkaW5nOiAwIDJlbTtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5pbmZvX190aXRsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tdG9wOiAzZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjc1O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uaW5mb19fdGl0bGUgaDEge1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uaW5mb19fY29udGVudC1pbWFnZXMge1xuICBwYWRkaW5nOiAxZW0gMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmluZm9fX2NvbnRlbnQtaW1hZ2VzIGltZyB7XG4gIHdpZHRoOiBhdXRvO1xuICBoZWlnaHQ6IDEwMHB4O1xufVxuXG4uaW5mb19fY29udGVudC10ZXh0LFxuLmluZm9fX2NvbnRhY3Qge1xuICBsaW5lLWhlaWdodDogMS43NTtcbn1cblxuLmluZm9fX2NvbnRlbnQtdGV4dCB7XG4gIG1hcmdpbi1ib3R0b206IDRlbTtcbn1cblxuLmluZm9fX2NvbnRhY3QgcCB7XG4gIGNvbG9yOiAjZjM1MDAwO1xufVxuLmluZm9fX2NvbnRhY3QgaHIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjN0EyODAwO1xuICBoZWlnaHQ6IDNweDtcbiAgd2lkdGg6IDIwMHB4O1xuICBtYXJnaW46IDA7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5pbmZvX19jb250ZW50IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBhZGRpbmc6IDAgMWVtO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgfVxuICAuaW5mb19fY29udGVudCAuaW5mb19fY29udGVudC10ZXh0IHtcbiAgICBvcmRlcjogMTtcbiAgICBtYXJnaW46IHVuc2V0O1xuICB9XG4gIC5pbmZvX19jb250ZW50IC5pbmZvX19jb250ZW50LWltYWdlcyB7XG4gICAgb3JkZXI6IDI7XG4gICAgbWFyZ2luOiB1bnNldDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLmluZm9fX2NvbnRlbnQgLmluZm9fX2NvbnRlbnQtaW1hZ2VzIGltZyB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTJweCkge1xuICAuaW5mb19fY29udGFjdCB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBtYXJnaW46IDAgYXV0byAwIDA7XG4gIH1cbn1cbi5sb2NhdGlvbiB7XG4gIG1hcmdpbjogMmVtIGF1dG87XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxZW0gMmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4ubG9jYXRpb24gLmxvY2F0aW9uX190aXRsZSBoMSB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG4ubG9jYXRpb24gLmxvY2F0aW9uX190ZXh0IHtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuLmxvY2F0aW9uIC5sb2NhdGlvbl9fdGV4dCBoMiB7XG4gIGNvbG9yOiAjZjM1MDAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDFyZW07XG4gIG1hcmdpbi10b3A6IDJlbTtcbn1cbi5sb2NhdGlvbiAubG9jYXRpb25fX3RleHQgcCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjc1O1xufVxuLmxvY2F0aW9uIC5sb2NhdGlvbl9fdGV4dCBhLmJ0biB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbWFyZ2luOiAyZW0gYXV0bztcbn1cbi5sb2NhdGlvbiAubG9jYXRpb25fX21hcC1jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWluLXdpZHRoOiAyNTBweDtcbiAgaGVpZ2h0OiA1MDBweDtcbiAgbWFyZ2luOiAwIGF1dG8gNmVtIGF1dG87XG59XG4ubG9jYXRpb24gI21hcCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmMzUwMDA7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAubG9jYXRpb24ge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgbWF4LXdpZHRoOiA2NTBweDtcbiAgICBtYXJnaW46IDJlbSBhdXRvIDAgYXV0bztcbiAgfVxufVxuXG4jbWFwIHtcbiAgY29sb3I6ICNmMzUwMDA7XG59XG4jbWFwIGgxIHtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuXG4ubGFiZWwtdGV4dCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBhZGRpbmc6IDAgMmVtO1xuICBtYXJnaW4tdG9wOiAzZW07XG59XG4ubGFiZWwtdGV4dCBoMSB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xufVxuLmxhYmVsLXRleHQgYSB7XG4gIGNvbG9yOiAjZjM1MDAwO1xufVxuXG5mb3JtLmNvbnRhY3Qge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA2NTBweDtcbiAgbWFyZ2luOiAwIGF1dG8gNGVtIGF1dG87XG4gIHBhZGRpbmc6IDJlbTtcbiAgY29sb3I6ICMyQTJBMkE7XG59XG5mb3JtLmNvbnRhY3QgLmlucHV0LWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cbmZvcm0uY29udGFjdCAuaW5wdXQtY29udGFpbmVyIGxhYmVsIHtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICBjb2xvcjogI0ZGRkZDMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cbmZvcm0uY29udGFjdCAuaW5wdXQtY29udGFpbmVyIGxhYmVsOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiKlwiO1xuICBjb2xvcjogI2YzNTAwMDtcbiAgcGFkZGluZy1sZWZ0OiAwLjVlbTtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xufVxuZm9ybS5jb250YWN0IC5pbnB1dC1jb250YWluZXIgbGFiZWxbZm9yPXN1YmplY3RdOjphZnRlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5mb3JtLmNvbnRhY3QgLmlucHV0LWNvbnRhaW5lciBpbnB1dCxcbmZvcm0uY29udGFjdCAuaW5wdXQtY29udGFpbmVyIHNlbGVjdCxcbmZvcm0uY29udGFjdCAuaW5wdXQtY29udGFpbmVyIHRleHRhcmVhIHtcbiAgcGFkZGluZzogMWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjZFRkVCO1xufVxuZm9ybS5jb250YWN0IC5pbnB1dC1jb250YWluZXIgaW5wdXQ6Zm9jdXMtd2l0aGluLFxuZm9ybS5jb250YWN0IC5pbnB1dC1jb250YWluZXIgdGV4dGFyZWE6Zm9jdXMtd2l0aGluLFxuZm9ybS5jb250YWN0IC5pbnB1dC1jb250YWluZXIgc2VsZWN0OmZvY3VzLXdpdGhpbiB7XG4gIG91dGxpbmU6ICNGRUVBMDAgM3B4IHNvbGlkO1xufVxuZm9ybS5jb250YWN0IC5pbnB1dC1jb250YWluZXIgc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59XG5mb3JtLmNvbnRhY3QgLmZvcm1fX2NvbnNlbnQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5mb3JtLmNvbnRhY3QgLmZvcm1fX2NvbnNlbnQgcCB7XG4gIGNvbG9yOiAjRkZGRkMwO1xuICBsaW5lLWhlaWdodDogMS43NTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cbmZvcm0uY29udGFjdCAuZm9ybV9fY29uc2VudCBidXR0b24ge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogI0Y2RUZFQjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuZm9ybS5jb250YWN0IC5mb3JtX19jb25zZW50IGJ1dHRvbltkaXNhYmxlZF0ge1xuICBvcGFjaXR5OiAwLjU7XG59XG5mb3JtLmNvbnRhY3QgLmZvcm1fX2NvbnNlbnQgYnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogI2YzNTAwMCAxcHggc29saWQ7XG59XG5mb3JtLmNvbnRhY3QgLmZvcm1fX2NvbnNlbnQgLmZvcm1fX2NvbnNlbnQtY29udGFpbmVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuZm9ybS5jb250YWN0IC5mb3JtX19jb25zZW50IC5mb3JtX19jb25zZW50LWNvbnRhaW5lciAuY2hlY2tib3gtY29udGFpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuZm9ybS5jb250YWN0IC5mb3JtX19jb25zZW50IC5mb3JtX19jb25zZW50LWNvbnRhaW5lciAuY2hlY2tib3gtY29udGFpbmVyIGlucHV0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xuICBvcGFjaXR5OiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5mb3JtLmNvbnRhY3QgLmZvcm1fX2NvbnNlbnQgLmZvcm1fX2NvbnNlbnQtY29udGFpbmVyIC5jaGVja2JveC1jb250YWluZXIgLmNoZWNrYm94LWN1c3RvbSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC0xMHB4O1xuICB0b3A6IC01cHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTBweCk7XG4gIGhlaWdodDogMzBweDtcbiAgd2lkdGg6IDMwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkY5RjY7XG4gIGJvcmRlcjogM3B4IHNvbGlkICNGRUVBMDA7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuZm9ybS5jb250YWN0IC5mb3JtX19jb25zZW50IC5mb3JtX19jb25zZW50LWNvbnRhaW5lciAuY2hlY2tib3gtY29udGFpbmVyIC5jaGVja2JveC1jdXN0b206aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU1O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5mb3JtLmNvbnRhY3QgLmZvcm1fX2NvbnNlbnQgLmZvcm1fX2NvbnNlbnQtY29udGFpbmVyIC5jaGVja2JveC1jb250YWluZXIgaW5wdXQ6Y2hlY2tlZCB+IC5jaGVja2JveC1jdXN0b20ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU1O1xufVxuZm9ybS5jb250YWN0IC5mb3JtX19jb25zZW50IC5mb3JtX19jb25zZW50LWNvbnRhaW5lciAuY2hlY2tib3gtY29udGFpbmVyIC5jaGVja2JveC1jdXN0b206OmFmdGVyIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA3cHg7XG4gIHRvcDogNHB4O1xuICB3aWR0aDogNXB4O1xuICBoZWlnaHQ6IDEwcHg7XG4gIGJvcmRlcjogc29saWQgI0ZGRjlGNjtcbiAgYm9yZGVyLXdpZHRoOiAwIDRweCA0cHggMDtcbiAgLyogYm9yZGVyLXJhZGl1czogOHB4OyAqL1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG59XG5mb3JtLmNvbnRhY3QgLmZvcm1fX2NvbnNlbnQgLmZvcm1fX2NvbnNlbnQtY29udGFpbmVyIC5jaGVja2JveC1jb250YWluZXIgaW5wdXQ6Y2hlY2tlZCB+IC5jaGVja2JveC1jdXN0b206OmFmdGVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5mb3JtLmNvbnRhY3QgLmZvcm1fX2NvbnNlbnQgYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogI2YzNTAwMDtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgZm9ybS5jb250YWN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogMTIwMHB4O1xuICB9XG4gIGZvcm0uY29udGFjdCAuZm9ybV9faW5wdXRzIHtcbiAgICB3aWR0aDogNjAlO1xuICAgIG1hcmdpbi1yaWdodDogNGVtO1xuICB9XG4gIGZvcm0uY29udGFjdCAuZm9ybV9faW5wdXRzIGlucHV0LFxuICBmb3JtLmNvbnRhY3QgLmZvcm1fX2lucHV0cyBzZWxlY3Qge1xuICAgIHdpZHRoOiA2MCU7XG4gIH1cbiAgZm9ybS5jb250YWN0IC5mb3JtX19pbnB1dHMgdGV4dGFyZWEge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIGZvcm0uY29udGFjdCAuZm9ybV9fY29uc2VudCB7XG4gICAgd2lkdGg6IDQwJTtcbiAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcbiAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gIH1cbn1cblxuLnBvbGljeS10ZXh0LWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDJlbTtcbiAgcGFkZGluZy1ib3R0b206IDhlbTtcbiAgd2lkdGg6IDEwMCU7XG59XG4ucG9saWN5LXRleHQtY29udGFpbmVyIGgxLFxuLnBvbGljeS10ZXh0LWNvbnRhaW5lciBoMiB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjZjM1MDAwO1xuICBtYXJnaW46IDJlbSAwO1xufVxuLnBvbGljeS10ZXh0LWNvbnRhaW5lciBoMSB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xufVxuLnBvbGljeS10ZXh0LWNvbnRhaW5lciBoMiB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cbi5wb2xpY3ktdGV4dC1jb250YWluZXIgcCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjc1O1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnBvbGljeS10ZXh0LWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA1MCU7XG4gICAgbWFyZ2luOiAwIDAgMCBhdXRvO1xuICB9XG59XG5cbi5lcnJvci1jb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogNmVtIDA7XG59XG4uZXJyb3ItY29udGFpbmVyIGgyIHtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuLmVycm9yLWNvbnRhaW5lciBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC13aWR0aDogMzAlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YzNTAwMDtcbiAgY29sb3I6ICNGRkY5RjY7XG4gIHBhZGRpbmc6IDFlbSAyZW07XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAud3JhcHBlciB7XG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cblxuLm1vZGFsIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdBMjgwMDtcbiAgb3BhY2l0eTogMC45NTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDUwO1xufVxuLm1vZGFsIC5tb2RhbF9faW1nLFxuLm1vZGFsIC5tb2RhbF9fdGV4dCB7XG4gIHdpZHRoOiA4MCU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4ubW9kYWwgLm1vZGFsX19pbWcge1xuICBwYWRkaW5nOiAyZW0gMmVtIDAgMmVtO1xufVxuLm1vZGFsIC5tb2RhbF9faW1nIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuLm1vZGFsIC5tb2RhbF9fdGV4dCB7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cbi5tb2RhbCAuZm9ybS1yb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLm1vZGFsIC5mb3JtLXJvdyBsYWJlbCBzcGFuIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuLm1vZGFsIC5mb3JtLXJvdyBsYWJlbCBzcGFuLnN0b3JlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgbWFyZ2luLXRvcDogMWVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjc1ZW07XG59XG4ubW9kYWwgLmZvcm0tcm93IGxhYmVsIC5mb3JtX19idG5zIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgd2lkdGg6IDEwMCU7XG59XG4ubW9kYWwgLmZvcm0tcm93IGJ1dHRvbi5idG4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmE4YzAwO1xuICBjb2xvcjogI0ZGRjlGNjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBtYXJnaW4tcmlnaHQ6IDFlbTtcbn1cbi5tb2RhbCAuZm9ybS1yb3cgYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJhOGMwMDtcbn1cbi5tb2RhbCAuZm9ybS1yb3cgYSB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgcGFkZGluZzogMWVtIDEuMjVlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICNGRkY5RjY7XG59XG4ubW9kYWwgLmZvcm0tcm93IGE6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjM1MDAwO1xufVxuLm1vZGFsIC5mb3JtLXJvdyBpbnB1dCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMDtcbiAgb3BhY2l0eTogMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLm1vZGFsIC5mb3JtLXJvdyAuY2hlY2tib3gtY3VzdG9tIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAyNXB4O1xuICB3aWR0aDogMjVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjlGNjtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4ubW9kYWwgLmZvcm0tcm93IC5jaGVja2JveC1jdXN0b206aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU1O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4ubW9kYWwgLmZvcm0tcm93IGlucHV0OmNoZWNrZWQgfiAuY2hlY2tib3gtY3VzdG9tIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzU1NTtcbn1cbi5tb2RhbCAuZm9ybS1yb3cgLmNoZWNrYm94LWN1c3RvbTo6YWZ0ZXIge1xuICBkaXNwbGF5OiBub25lO1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDdweDtcbiAgdG9wOiA0cHg7XG4gIHdpZHRoOiA1cHg7XG4gIGhlaWdodDogMTBweDtcbiAgYm9yZGVyOiBzb2xpZCAjRkZGOUY2O1xuICBib3JkZXItd2lkdGg6IDAgNHB4IDRweCAwO1xuICAvKiBib3JkZXItcmFkaXVzOiA4cHg7ICovXG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbn1cbi5tb2RhbCAuZm9ybS1yb3cgaW5wdXQ6Y2hlY2tlZCB+IC5jaGVja2JveC1jdXN0b206OmFmdGVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5tb2RhbC5pbi12aWV3IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQyNXB4KSB7XG4gIC5tb2RhbCAubW9kYWxfX2ltZyBpbWcge1xuICAgIHdpZHRoOiA3MCU7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc4NnB4KSB7XG4gIC5tb2RhbCAubW9kYWxfX2ltZyxcbiAgLm1vZGFsIC5tb2RhbF9fdGV4dCB7XG4gICAgbWF4LXdpZHRoOiA1MDBweDtcbiAgfVxuICAubW9kYWwgLm1vZGFsX190ZXh0IHtcbiAgICBmb250LXNpemU6IDFyZW07XG4gIH1cbiAgLm1vZGFsIC5mb3JtLXJvdyBsYWJlbCBzcGFuIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICB9XG4gIC5tb2RhbCAuZm9ybS1yb3cgbGFiZWwgc3Bhbi5zdG9yZSB7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICB9XG59XG4ubW9kYWwuaGlkZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5jb29raWUtY29uc2VudCB7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiA2O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMmVtIDFlbTtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCMwMTAxMDEsICNmMzUwMDAsICMwMTAxMDEpO1xuICBvcGFjaXR5OiAwLjk1O1xuICBib3JkZXItcmFkaXVzOiA1cHggNXB4IDAgMDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuY29va2llLWNvbnNlbnQge1xuICAgIGJvdHRvbTogdW5zZXQ7XG4gICAgdG9wOiAwO1xuICB9XG59XG4uY29va2llLWNvbnNlbnQtLXNob3cge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuLmNvb2tpZS1jb25zZW50LS1oaWRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5jb29raWUtY29uc2VudF9fYnRuLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmNvb2tpZS1jb25zZW50X19idG4tY29udGFpbmVyIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGZsZXgtZmxvdzogcm93LXJldmVyc2U7XG4gIH1cbn1cbi5jb29raWUtY29uc2VudF9fYnRuIHtcbiAgd2lkdGg6IDEyZW07XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuY29va2llLWNvbnNlbnRfX2J0biB7XG4gICAgbWFyZ2luOiAwIDFlbSAwIDA7XG4gIH1cbn1cblxuLmJ0biB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdBMjgwMDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3gtc2hhZG93OiAycHggMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSBlYXNlLWluIDAuM3M7XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbn1cbi5idG4tLW91dGxpbmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB1bnNldDtcbiAgYm9yZGVyOiAxcHggI0ZGRkZDMCBzb2xpZDtcbn1cbi5idG46aG92ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMDEyNSk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLypcbiAgICAjIyMjIyMjIyMjXG4gICAgQkFTRSBTVFlMRVxuICAgICMjIyMjIyMjIyNcblxuLSBtb2JpbGUgZmlyc3QgYXBwcm9hY2g6IGJhc2Ugc3R5bGUgKyBtZWRpYSBxdWVyeVxuLSBiYXNlIHN0eWxlIGdldHMgZm9yIGFsbCBwYWdlc1xuLSBsYW5kaW5nIGNsYXNzIGdldHMgYWRkZWQgdGhyb3VnaCBqcyBvbiBob21lcGFnZSBvbmx5XG4qL1xuaGVhZGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5oZWFkZXIgLm5hdmJhciB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5oZWFkZXIgLm5hdmJhciBhLmxvZ28ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG59XG5oZWFkZXIgLm5hdmJhciBhLmxvZ28gaSB7XG4gIG1hcmdpbjogMmVtIDAgMCAxZW07XG59XG5oZWFkZXIgLm5hdmJhciBhLmxvZ28gaW1nIHtcbiAgd2lkdGg6IDEyNXB4O1xuICBoZWlnaHQ6IDUwcHg7XG4gIG1hcmdpbi10b3A6IDFlbTtcbiAgbWFyZ2luLWxlZnQ6IDJlbTtcbiAganVzdGlmeS1zZWxmOiBmbGV4LXN0YXJ0O1xufVxuaGVhZGVyIC5uYXZiYXIgdWwubWVudSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi1yaWdodDogMmVtO1xufVxuaGVhZGVyIC5uYXZiYXIgbGkge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmc6IDFlbSAwO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyBlYXNlLWluLW91dDtcbn1cbmhlYWRlciAubmF2YmFyIGxpLm1lbnVfX2xpbmsgKyBsaS5tZW51X19saW5rIHtcbiAgbWFyZ2luLWxlZnQ6IDEuNWVtO1xufVxuaGVhZGVyIC5uYXZiYXIgLmhpZGUtbW9iaWxlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbmhlYWRlciAubmF2YmFyIHVsLm1lbnUgbGk6bGFzdC1jaGlsZCB7XG4gIHBhZGRpbmc6IDAuNWVtIDAgMCAxZW07XG59XG5oZWFkZXIgLm5hdmJhciB1bCBhIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuaGVhZGVyIC5uYXZiYXIgdWwgYSBpIHtcbiAgcGFkZGluZy1yaWdodDogMWVtO1xufVxuaGVhZGVyIC5uYXZiYXIgdWwgbGkjdG9nZ2xlIGEgaSB7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG59XG5oZWFkZXIgLm5hdmJhciBsaTpob3ZlcixcbmhlYWRlciAubmF2YmFyIGxpOmFjdGl2ZSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XG59XG5oZWFkZXIgLm5hdmJhciB1bC5tZW51X19jb2xsYXBzZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MHB4O1xuICByaWdodDogMmVtO1xuICB6LWluZGV4OiAxMDtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCM3QTI4MDAsICMwMTAxMDEpO1xuICBib3JkZXItcmFkaXVzOiAwLjI1ZW07XG4gIHBhZGRpbmc6IDJlbTtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLCAwKTtcbiAgdHJhbnNpdGlvbjogYWxsIGVhc2UtaW4gMC4zcztcbiAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xufVxuaGVhZGVyIC5uYXZiYXIgdWwubWVudV9fY29sbGFwc2UudmlzaWJsZSB7XG4gIG9wYWNpdHk6IDAuOTU7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSwgMSk7XG59XG5oZWFkZXIgLm5hdmJhciB1bC5tZW51X19jb2xsYXBzZSBsaSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nLWJvdHRvbTogMWVtO1xufVxuaGVhZGVyIC5uYXZiYXIgdWwubWVudV9fY29sbGFwc2UudmlzaWJsZSB7XG4gIG9wYWNpdHk6IDAuOTU7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSwgMSk7XG59XG5oZWFkZXIgLm5hdmJhciB1bC5tZW51X19jb2xsYXBzZSBsaSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nLWJvdHRvbTogMWVtO1xufVxuaGVhZGVyIC5uYXZiYXIgdWwubWVudV9fY29sbGFwc2UgbGkjc2hvcCB7XG4gIG9wYWNpdHk6IDAuNDU7XG59XG5oZWFkZXIgLm5hdmJhciB1bC5tZW51X19jb2xsYXBzZSBsaSNzaG9wOmhvdmVyLFxuaGVhZGVyIC5uYXZiYXIgdWwubWVudV9fY29sbGFwc2UgbGkjc2hvcCBhOmhvdmVyIHtcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIGhlYWRlciAubmF2YmFyIHVsLm1lbnUgbGkuaGlkZS1tb2JpbGUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIGhlYWRlciAubmF2YmFyIHVsLm1lbnVfX2NvbGxhcHNlIGxpLmhpZGUtbGcge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuLypcbiAgICAjIyMjIyMjIyMjIyMjI1xuICAgIEhPTUVQQUdFIFNUWUxFXG4gICAgIyMjIyMjIyMjIyMjIyNcblxuLSBtZW51IGF0IHRoZSBib3R0b20gb24gbW9iaWxlLCB0b3Agb24gbGcgc2NyZWVuc1xuLSAnbGFuZGluZycgY2xhc3MgZ2V0cyBhZGRlZCB0aHJvdWdoIGpzIG9uIHRoZSBob21lcGFnZVxuKi9cbmhlYWRlci5sYW5kaW5nIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCMwMTAxMDEsICM3QTI4MDApO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgaGVpZ2h0OiAyMHZoO1xuICB6LWluZGV4OiA1O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuaGVhZGVyLmxhbmRpbmcgLm5hdmJhciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuaGVhZGVyLmxhbmRpbmcgLm5hdmJhciBhLmxvZ28ge1xuICBkaXNwbGF5OiBub25lO1xufVxuaGVhZGVyLmxhbmRpbmcgLm5hdmJhciB1bCBhIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbmhlYWRlci5sYW5kaW5nIC5uYXZiYXIgdWwgYSBpIHtcbiAgcGFkZGluZy1yaWdodDogMDtcbiAgcGFkZGluZy1ib3R0b206IDFlbTtcbn1cbmhlYWRlci5sYW5kaW5nIC5uYXZiYXIgdWwgbGk6bGFzdC1vZi10eXBlIGEgaSB7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xufVxuaGVhZGVyLmxhbmRpbmcgLm5hdmJhciBsaSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyBlYXNlLWluLW91dDtcbiAgZm9udC1zaXplOiAwLjhyZW07XG59XG5oZWFkZXIubGFuZGluZyAubmF2YmFyIHVsLm1lbnUge1xuICBtYXJnaW4tcmlnaHQ6IDA7XG4gIG1hcmdpbi1ib3R0b206IDAuNWVtO1xufVxuaGVhZGVyLmxhbmRpbmcgLm5hdmJhciB1bC5tZW51X19jb2xsYXBzZSB7XG4gIHRvcDogLTE4MHB4O1xuICByaWdodDogMmVtO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XG4gIHBhZGRpbmc6IDFlbTtcbn1cbmhlYWRlci5sYW5kaW5nIC5uYXZiYXIgdWwubWVudV9fY29sbGFwc2UgYSB7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5oZWFkZXIubGFuZGluZyAubmF2YmFyIHVsLm1lbnVfX2NvbGxhcHNlIGEgaSB7XG4gIHBhZGRpbmctbGVmdDogMWVtO1xuICBvcmRlcjogMTtcbn1cbmhlYWRlci5sYW5kaW5nIC5uYXZiYXIgdWwubWVudV9fY29sbGFwc2UgbGkuaGlkZS1sZyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NzZweCkge1xuICBoZWFkZXIubGFuZGluZyB7XG4gICAgcG9zaXRpb246IGluaGVyaXQ7XG4gICAgYmFja2dyb3VuZDogaW5oZXJpdDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICBtaW4taGVpZ2h0OiAyNXB4O1xuICB9XG4gIGhlYWRlci5sYW5kaW5nIC5uYXZiYXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogMTIwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbiAgaGVhZGVyLmxhbmRpbmcgLm5hdmJhciB1bCBsaSB7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIHBhZGRpbmc6IDFlbSAwO1xuICB9XG4gIGhlYWRlci5sYW5kaW5nIC5uYXZiYXIgbGkgKyBsaSB7XG4gICAgbWFyZ2luLWxlZnQ6IDJlbTtcbiAgfVxuICBoZWFkZXIubGFuZGluZyAubmF2YmFyIHVsLm1lbnUge1xuICAgIG1hcmdpbi1yaWdodDogMmVtO1xuICB9XG4gIGhlYWRlci5sYW5kaW5nIC5uYXZiYXIgdWwubWVudV9fY29sbGFwc2Uge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDU1cHg7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjN0EyODAwLCAjMDEwMTAxKTtcbiAgfVxuICBoZWFkZXIubGFuZGluZyAubmF2YmFyIHVsIGEge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cbiAgaGVhZGVyLmxhbmRpbmcgLm5hdmJhciB1bCBhIGkge1xuICAgIHBhZGRpbmctcmlnaHQ6IDFlbTtcbiAgfVxufVxuXG4uaGVyby1zZWN0aW9uIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgaGVpZ2h0OiBjYWxjKHZhcigtLXZoLCAxdmgpICogMTAwKTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5oZXJvLXNlY3Rpb24gLndyYXBwZXIge1xuICBoZWlnaHQ6IDEwMCU7XG59XG4uaGVyby1zZWN0aW9uIC53cmFwcGVyIC5oZXJvX19jb250ZW50IHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uZmxhc2gtbXNnLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAzNTBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDJlbTtcbiAgbGVmdDogNTAlO1xuICB6LWluZGV4OiA1MDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjMkEyQTJBO1xuICBmb250LXdlaWdodDogNzAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGOUY2O1xuICBhbmltYXRpb246IGZhZGVPdXQgNXMgMnMgZm9yd2FyZHM7XG59XG5cbkBrZXlmcmFtZXMgZmFkZU91dCB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cbi5zY3JvbGwtaWNvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZXJvX19jdGEge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogI0ZGRkZDMDtcbiAgcGFkZGluZzogMmVtIDJlbSAwIDJlbTtcbn1cbi5oZXJvX19jdGEgLmhlcm9fX2xvZ28tY29udGFpbmVyIGltZyB7XG4gIG1heC13aWR0aDogNjAlO1xufVxuLmhlcm9fX2N0YSBoMSxcbi5oZXJvX19jdGEgaDIsXG4uaGVyb19fY3RhIC5idG4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaGVyb19faW1hZ2UtY29udGFpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5oZXJvX19pbWFnZS1jb250YWluZXIgaW1nIHtcbiAgd2lkdGg6IDYwJTtcbn1cblxuLypcbiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjI1xuICAgIG1lZGlhIHF1ZXJpZXMgbW9iaWxlXG4gICAgIyMjIyMjIyMjIyMjIyMjIyMjIyNcblxuICAgIHNtIC0+IGxnXG4gICAgc2NyZWVucyB3aXRoIHN1ZmZpY2llbnQgaGVpZ2h0IGdldCB0byBzZWUgdGhlIHRpdGxlXG4qL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi1oZWlnaHQ6IDY1MHB4KSB7XG4gIC5oZXJvX19jb250ZW50IHtcbiAgICBtYXJnaW4tdG9wOiAxNSU7XG4gIH1cbiAgLmhlcm9fX2N0YSBoMSxcbiAgLmhlcm9fX2N0YSBoMiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbiAgLmhlcm9fX2N0YSBoMSB7XG4gICAgbWFyZ2luLXRvcDogMmVtO1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgfVxuICAuaGVyb19fY3RhIGgyIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW07XG4gIH1cbiAgLmhlcm9fX2N0YSAuaGVyb19fbG9nby1jb250YWluZXIgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDgwJTtcbiAgfVxuICAuaGVyb19fY3RhIC5oZXJvX19pbWFnZS1jb250YWluZXIgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzUwcHgpIHtcbiAgLmhlcm9fX2NvbnRlbnQge1xuICAgIG1hcmdpbi10b3A6IHVuc2V0O1xuICB9XG4gIC5oZXJvX19jb250ZW50IC5oZXJvX19sb2dvLWNvbnRhaW5lciBpbWcge1xuICAgIG1heC13aWR0aDogNTAlO1xuICB9XG4gIC5oZXJvX19jb250ZW50IC5oZXJvX19pbWFnZS1jb250YWluZXIgaW1nIHtcbiAgICB3aWR0aDogNTAlO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzOTBweCkge1xuICAuaGVyb19fY29udGVudCAuaGVyb19fbG9nby1jb250YWluZXIgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDQ1JTtcbiAgfVxuICAuaGVyb19fY29udGVudCAuaGVyb19faW1hZ2UtY29udGFpbmVyIGltZyB7XG4gICAgd2lkdGg6IDQ1JTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDYwcHgpIHtcbiAgLmhlcm9fX2NvbnRlbnQgLmhlcm9fX2xvZ28tY29udGFpbmVyIGltZyB7XG4gICAgbWF4LXdpZHRoOiA0MCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRlbnQgLmhlcm9fX2ltYWdlLWNvbnRhaW5lciBpbWcge1xuICAgIHdpZHRoOiA0MCU7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDUwMHB4KSB7XG4gIC5oZXJvX19jb250ZW50IC5oZXJvX19sb2dvLWNvbnRhaW5lciBpbWcge1xuICAgIG1heC13aWR0aDogMzUlO1xuICB9XG4gIC5oZXJvX19jb250ZW50IC5oZXJvX19pbWFnZS1jb250YWluZXIgaW1nIHtcbiAgICB3aWR0aDogMzUlO1xuICB9XG59XG4vKlxuICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuICAgIG1lZGlhIHF1ZXJpZXMgdGFibGV0IGFuZCB1cFxuICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuXG4gICAgc3dpdGNoIHRvIHR3by1jb2x1bW4gbGF5b3V0XG4qL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmhlcm9fX2NvbnRlbnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuICAuaGVyb19fY29udGVudCAuaGVyb19fY3RhLFxuICAuaGVyb19fY29udGVudCAuaGVyb19faW1hZ2UtY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IDgwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbiAgLmhlcm9fX2NvbnRlbnQgLmhlcm9fX2ltYWdlLWNvbnRhaW5lciB7XG4gICAgZmxleDogMjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbiAgLmhlcm9fX2NvbnRlbnQgLmhlcm9fX2ltYWdlLWNvbnRhaW5lciBpbWcge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IC0yNXB4O1xuICB9XG4gIC5oZXJvX19jb250ZW50IC5oZXJvX19jdGEge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZmxleDogMztcbiAgICBwYWRkaW5nOiAyZW07XG4gIH1cbiAgLmhlcm9fX2NvbnRlbnQgLmhlcm9fX2N0YSBoMSxcbiAgLmhlcm9fX2NvbnRlbnQgLmhlcm9fX2N0YSBoMixcbiAgLmhlcm9fX2NvbnRlbnQgLmhlcm9fX2N0YSAuYnRuIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXdlaWdodDogNDAwO1xuICB9XG4gIC5oZXJvX19jb250ZW50IC5oZXJvX19jdGEgaDEge1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuICAuaGVyb19fY29udGVudCAuaGVyb19fY3RhIGgyIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW07XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICB9XG4gIC5oZXJvX19jb250ZW50IC5oZXJvX19jdGEgLmJ0biB7XG4gICAgd2lkdGg6IDYwJTtcbiAgICBtYXgtd2lkdGg6IDE3NXB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIG1hcmdpbi10b3A6IDJlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGZvbnQtc2l6ZTogMC44NXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjN0EyODAwO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuc2Nyb2xsLWljb24ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIGFuaW1hdGlvbjogbW92ZUFycm93IDFzIGluZmluaXRlO1xuICB9XG4gIEBrZXlmcmFtZXMgbW92ZUFycm93IHtcbiAgICAwJSB7XG4gICAgICBib3R0b206IDFlbTtcbiAgICB9XG4gICAgNTAlIHtcbiAgICAgIGJvdHRvbTogMS4zNWVtO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgIGJvdHRvbTogMWVtO1xuICAgIH1cbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oZXJvX19jb250ZW50IC5oZXJvX19jdGEgLmhlcm9fX2xvZ28tY29udGFpbmVyIGltZyB7XG4gICAgbWF4LXdpZHRoOiA1MCU7XG4gIH1cbiAgLmhlcm9fX2NvbnRlbnQgLmhlcm9fX2N0YSBoMSB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gIH1cbiAgLmhlcm9fX2NvbnRlbnQgLmhlcm9fX2N0YSBoMiB7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICB9XG4gIC5oZXJvX19jb250ZW50IC5oZXJvX19jdGEgLmJ0biB7XG4gICAgbWF4LXdpZHRoOiAyMjVweDtcbiAgICBmb250LXNpemU6IDFyZW07XG4gIH1cbiAgLmhlcm9fX2NvbnRlbnQgLmhlcm9fX2ltYWdlLWNvbnRhaW5lciBpbWcge1xuICAgIHdpZHRoOiA4NSU7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE0NDBweCkge1xuICAuaGVyb19fY29udGVudCAuaGVyb19fY3RhIC5oZXJvX19sb2dvLWNvbnRhaW5lciBpbWcge1xuICAgIG1heC13aWR0aDogNjAlO1xuICB9XG4gIC5oZXJvX19jb250ZW50IC5oZXJvX19jdGEgaDEge1xuICAgIGZvbnQtc2l6ZTogMS43NXJlbTtcbiAgfVxuICAuaGVyb19fY29udGVudCAuaGVyb19fY3RhIGgyIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW07XG4gIH1cbiAgLmhlcm9fX2NvbnRlbnQgLmhlcm9fX2N0YSAuYnRuIHtcbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgfVxuICAuaGVyb19fY29udGVudCAuaGVyb19faW1hZ2UtY29udGFpbmVyIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE4MDBweCkge1xuICAuaGVyb19fY29udGVudCAuaGVyb19fY3RhIC5oZXJvX19sb2dvLWNvbnRhaW5lciBpbWcge1xuICAgIG1heC13aWR0aDogODAlO1xuICB9XG4gIC5oZXJvX19jb250ZW50IC5oZXJvX19jdGEgaDEge1xuICAgIGZvbnQtc2l6ZTogMi4yNXJlbTtcbiAgfVxuICAuaGVyb19fY29udGVudCAuaGVyb19fY3RhIGgyIHtcbiAgICBmb250LXNpemU6IDEuNzVyZW07XG4gIH1cbiAgLmhlcm9fX2NvbnRlbnQgLmhlcm9fX2N0YSAuYnRuIHtcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgIGZvbnQtc2l6ZTogMS43NXJlbTtcbiAgfVxuICAuaGVyb19fY29udGVudCAuaGVyb19faW1hZ2UtY29udGFpbmVyIGltZyB7XG4gICAgbGVmdDogMDtcbiAgfVxufVxuLnRlc3RpbW9uaWFsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0Y2RUZFQjtcbiAgcGFkZGluZzogNGVtIDFlbTtcbiAgY29sb3I6ICMyQTJBMkE7XG59XG5cbi50ZXN0aW1vbmlhbF9fY29udGVudCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMCAyZW07XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgZWFzZS1pbi1vdXQgMC4zcztcbn1cbi50ZXN0aW1vbmlhbF9fY29udGVudC5yZXZlYWwge1xuICBvcGFjaXR5OiAxO1xufVxuLnRlc3RpbW9uaWFsX19jb250ZW50IC50ZXN0aW1vbmlhbF9fY29udGFpbmVyOmZpcnN0LW9mLXR5cGUge1xuICBtYXJnaW4tYm90dG9tOiA0ZW07XG59XG4udGVzdGltb25pYWxfX2NvbnRlbnQgLnRlc3RpbW9uaWFsX19jb250YWluZXIgcDpsYXN0LW9mLXR5cGUge1xuICBjb2xvcjogI2YzNTAwMDtcbn1cbi50ZXN0aW1vbmlhbF9fY29udGVudCBpLmZhLWFuZ2xlLXJpZ2h0IHtcbiAgY29sb3I6ICNGRUVBMDA7XG4gIG1hcmdpbi1yaWdodDogMWVtO1xufVxuLnRlc3RpbW9uaWFsX19jb250ZW50IHA6Zmlyc3Qtb2YtdHlwZSB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjc1O1xuICBwYWRkaW5nOiAxZW0gMDtcbn1cbi50ZXN0aW1vbmlhbF9fY29udGVudCBwLmF1dGhvciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50ZXN0aW1vbmlhbF9faGVhZGluZyB7XG4gICAgbWFyZ2luLWJvdHRvbTogNmVtICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnRlc3RpbW9uaWFsX19oZWFkaW5nIGhyIHtcbiAgICBtYXgtd2lkdGg6IDI1MHB4O1xuICB9XG4gIC50ZXN0aW1vbmlhbF9fY29udGVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogNGVtO1xuICB9XG4gIC50ZXN0aW1vbmlhbF9fY29udGFpbmVyIHtcbiAgICBmbGV4OiAxO1xuICB9XG4gIC50ZXN0aW1vbmlhbF9fY29udGFpbmVyICsgLnRlc3RpbW9uaWFsX19jb250YWluZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAxZW07XG4gIH1cbiAgLnRlc3RpbW9uaWFsX19jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICB9XG4gIC50ZXN0aW1vbmlhbF9fY29udGFpbmVyIGkge1xuICAgIG1hcmdpbi1yaWdodDogMC41ZW07XG4gIH1cbiAgLnRlc3RpbW9uaWFsX19jb250YWluZXIgcC5xdW90ZSB7XG4gICAgd2lkdGg6IDcwJTtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICB9XG4gIC50ZXN0aW1vbmlhbF9fY29udGFpbmVyIHAuYXV0aG9yIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1hcmdpbi1sZWZ0OiA0ZW07XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG59XG4uaGVhZGluZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cbi5oZWFkaW5nIGkge1xuICBjb2xvcjogI0ZFRUEwMDtcbn1cbi5oZWFkaW5nIGgyLFxuLmhlYWRpbmcgaDMge1xuICBjb2xvcjogIzJBMkEyQTtcbn1cbi5oZWFkaW5nIGgzIHtcbiAgZm9udC1zaXplOiAxLjFyZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIG1hcmdpbjogMCAwIDAuNWVtIDA7XG59XG4uaGVhZGluZyBociB7XG4gIHdpZHRoOiA1MCU7XG4gIGhlaWdodDogMnB4O1xuICBiYWNrZ3JvdW5kOiAjZjM1MDAwO1xufVxuXG4uaGlzdG9yeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGNkVGRUI7XG59XG5cbi5oaXN0b3J5X19jb250YWluZXIge1xuICBwYWRkaW5nOiA0ZW0gMmVtO1xufVxuXG4uaGlzdG9yeS1zZWN0aW9uX19oZWFkaW5nIHtcbiAgbWFyZ2luLWJvdHRvbTogNGVtO1xufVxuXG4uaW1hZ2UtbGluay1jb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5pbWFnZS1saW5rLWNvbnRhaW5lciBpbWcge1xuICB3aWR0aDogODAlO1xuICBib3JkZXItcmFkaXVzOiAyZW07XG59XG5cbi5pbWFnZS1saW5rLWNvbnRhaW5lciBhOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uaW1hZ2UtbGluay1jb250YWluZXIgaW1nOmZpcnN0LW9mLXR5cGUge1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5oaXN0b3J5X19jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIH1cbiAgLmhpc3Rvcnktc2VjdGlvbl9faGVhZGluZyB7XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgfVxuICAuaW1hZ2UtbGluay1jb250YWluZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAyZW07XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgfVxuICAuaW1hZ2UtbGluay1jb250YWluZXIgaW1nIHtcbiAgICB3aWR0aDogNTAlO1xuICB9XG59XG4ubmV3c2xldHRlci1zZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjlGNjtcbiAgcGFkZGluZzogNGVtIDJlbTtcbn1cblxuLm5ld3NsZXR0ZXJfX2lucHV0IGZvcm0ubmV3c2xldHRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4ubmV3c2xldHRlcl9faW5wdXQgaW5wdXRbbmFtZT1lbWFpbF0ge1xuICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbiAgd2lkdGg6IDgwJTtcbiAgYm9yZGVyOiAjZjM1MDAwIDFweCBzb2xpZDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjb2xvcjogIzJBMkEyQTtcbiAgcGFkZGluZzogMWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjZFRkVCO1xufVxuLm5ld3NsZXR0ZXJfX2lucHV0IGlucHV0W25hbWU9ZW1haWxdOjpwbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjMkEyQTJBO1xufVxuLm5ld3NsZXR0ZXJfX2lucHV0IGlucHV0W25hbWU9ZW1haWxdOmZvY3VzLXdpdGhpbiB7XG4gIG91dGxpbmU6ICNmMzUwMDAgMXB4IHNvbGlkO1xufVxuLm5ld3NsZXR0ZXJfX2lucHV0IC5mb3JtX19jb25zZW50IHtcbiAgd2lkdGg6IDgwJTtcbiAgY29sb3I6ICMyQTJBMkE7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNzU7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuLm5ld3NsZXR0ZXJfX2lucHV0IC5mb3JtX19jb25zZW50IGJ1dHRvbiB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjRjZFRkVCO1xufVxuLm5ld3NsZXR0ZXJfX2lucHV0IC5mb3JtX19jb25zZW50IGJ1dHRvbltkaXNhYmxlZF0ge1xuICBvcGFjaXR5OiAwLjU7XG59XG4ubmV3c2xldHRlcl9faW5wdXQgLmZvcm1fX2NvbnNlbnQgcCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG4ubmV3c2xldHRlcl9faW5wdXQgLmZvcm1fX2NvbnNlbnQgcCBhIHtcbiAgY29sb3I6ICNmMzUwMDA7XG59XG4ubmV3c2xldHRlcl9faW5wdXQgLmZvcm1fX2NvbnNlbnQgLmZvcm1fX2NvbnNlbnQtY29udGFpbmVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuLm5ld3NsZXR0ZXJfX2lucHV0IC5mb3JtX19jb25zZW50IC5mb3JtX19jb25zZW50LWNvbnRhaW5lciAuY2hlY2tib3gtY29udGFpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLm5ld3NsZXR0ZXJfX2lucHV0IC5mb3JtX19jb25zZW50IC5mb3JtX19jb25zZW50LWNvbnRhaW5lciAuY2hlY2tib3gtY29udGFpbmVyIGlucHV0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xuICBvcGFjaXR5OiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4ubmV3c2xldHRlcl9faW5wdXQgLmZvcm1fX2NvbnNlbnQgLmZvcm1fX2NvbnNlbnQtY29udGFpbmVyIC5jaGVja2JveC1jb250YWluZXIgLmNoZWNrYm94LWN1c3RvbSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC0xNzVweDtcbiAgdG9wOiAtMzdweDtcbiAgaGVpZ2h0OiAzMHB4O1xuICB3aWR0aDogMzBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjlGNjtcbiAgYm9yZGVyOiAzcHggc29saWQgI0ZFRUEwMDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4ubmV3c2xldHRlcl9faW5wdXQgLmZvcm1fX2NvbnNlbnQgLmZvcm1fX2NvbnNlbnQtY29udGFpbmVyIC5jaGVja2JveC1jb250YWluZXIgLmNoZWNrYm94LWN1c3RvbTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM1NTU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5uZXdzbGV0dGVyX19pbnB1dCAuZm9ybV9fY29uc2VudCAuZm9ybV9fY29uc2VudC1jb250YWluZXIgLmNoZWNrYm94LWNvbnRhaW5lciBpbnB1dDpjaGVja2VkIH4gLmNoZWNrYm94LWN1c3RvbSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM1NTU7XG59XG4ubmV3c2xldHRlcl9faW5wdXQgLmZvcm1fX2NvbnNlbnQgLmZvcm1fX2NvbnNlbnQtY29udGFpbmVyIC5jaGVja2JveC1jb250YWluZXIgLmNoZWNrYm94LWN1c3RvbTo6YWZ0ZXIge1xuICBkaXNwbGF5OiBub25lO1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDdweDtcbiAgdG9wOiA0cHg7XG4gIHdpZHRoOiA1cHg7XG4gIGhlaWdodDogMTBweDtcbiAgYm9yZGVyOiBzb2xpZCAjRkZGOUY2O1xuICBib3JkZXItd2lkdGg6IDAgNHB4IDRweCAwO1xuICAvKiBib3JkZXItcmFkaXVzOiA4cHg7ICovXG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbn1cbi5uZXdzbGV0dGVyX19pbnB1dCAuZm9ybV9fY29uc2VudCAuZm9ybV9fY29uc2VudC1jb250YWluZXIgLmNoZWNrYm94LWNvbnRhaW5lciBpbnB1dDpjaGVja2VkIH4gLmNoZWNrYm94LWN1c3RvbTo6YWZ0ZXIge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm5ld3NsZXR0ZXItc2VjdGlvbl9faGVhZGluZyB7XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICBtYXJnaW46IDAgYXV0byA0ZW0gYXV0bztcbiAgfVxuICAubmV3c2xldHRlcl9faW5wdXQgaW5wdXRbbmFtZT1lbWFpbF0ge1xuICAgIHdpZHRoOiA0MCU7XG4gICAgbWFyZ2luOiAwLjI1ZW0gYXV0byAwIGF1dG87XG4gIH1cbiAgLm5ld3NsZXR0ZXJfX2lucHV0IC5mb3JtX19jb25zZW50IHtcbiAgICB3aWR0aDogNDAlO1xuICB9XG4gIC5uZXdzbGV0dGVyX19pbnB1dCAuZm9ybV9fY29uc2VudCBidXR0b24ge1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgfVxuICAubmV3c2xldHRlcl9faW5wdXQgLmZvcm1fX2NvbnNlbnQgLmZvcm1fX2NvbnNlbnQtY29udGFpbmVyIC5jaGVja2JveC1jb250YWluZXIgLmNoZWNrYm94LWN1c3RvbSB7XG4gICAgbGVmdDogLTIyNXB4O1xuICAgIHRvcDogLTQ1cHg7XG4gIH1cbn1cbmZvb3RlciB7XG4gIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogNGVtIDJlbSAwLjVlbSAyZW07XG59XG5mb290ZXIgaDMge1xuICBmb250LXNpemU6IDEuMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIG1hcmdpbjogMCAwIDAuNWVtIDA7XG59XG5mb290ZXIgaHIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjM1MDAwO1xuICB3aWR0aDogNzAlO1xuICBoZWlnaHQ6IDJweDtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuXG4uZm9vdGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZm9vdGVyX19zb2NpYWwtbWVkaWEge1xuICBtYXJnaW4tYm90dG9tOiA0ZW07XG59XG4uZm9vdGVyX19zb2NpYWwtbWVkaWEgYSArIGEge1xuICBtYXJnaW4tbGVmdDogMmVtO1xufVxuXG4uZm9vdGVyX19mYXEge1xuICBtYXJnaW4tYm90dG9tOiA0ZW07XG59XG5cbi5mb290ZXJfX2xlZ2FsIHtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5mb290ZXJfX2xlZ2FsIHVsIHtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuLmZvb3Rlcl9fbGVnYWwgdWwgbGkge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLmZvb3Rlcl9fYWRkcmVzcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAzZW07XG59XG4uZm9vdGVyX19hZGRyZXNzIGltZyB7XG4gIHdpZHRoOiA1NSU7XG59XG4uZm9vdGVyX19hZGRyZXNzIGFkZHJlc3Mge1xuICB3aWR0aDogMjAwcHg7XG4gIG1hcmdpbjogMDtcbn1cblxuLmZvb3Rlcl9fY29weXJpZ2h0LFxuLmZvb3Rlcl9fcHJvbW8tbGluayB7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbn1cblxuLmZvb3Rlcl9fY29weXJpZ2h0IHtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG59XG5cbi5mb290ZXJfX3Byb21vLWxpbmsge1xuICBjb2xvcjogI2YzNTAwMDtcbiAgb3BhY2l0eTogMTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTY3cHgpIHtcbiAgLmZvb3Rlcl9fYWRkcmVzcyBpbWcge1xuICAgIHdpZHRoOiA0MCU7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIGZvb3RlciBociB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICB9XG4gIC5mb290ZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICB9XG4gIC5mb290ZXJfX3NvY2lhbC1tZWRpYSB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBvcmRlcjogMTtcbiAgfVxuICAuZm9vdGVyX19mYXEge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgb3JkZXI6IDI7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICB9XG4gIC5mb290ZXJfX2FkZHJlc3Mge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgb3JkZXI6IDM7XG4gIH1cbiAgLmZvb3Rlcl9fYWRkcmVzcyBpbWcge1xuICAgIHdpZHRoOiAyNSU7XG4gIH1cbiAgLmZvb3Rlcl9fbGVnYWwge1xuICAgIG9yZGVyOiA0O1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbiAgLmZvb3Rlcl9fY29weXJpZ2h0IHtcbiAgICBvcmRlcjogNTtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuZm9vdGVyX19wcm9tby1saW5rIHtcbiAgICBvcmRlcjogNjtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5uYXYtdXAge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGRUVBMDA7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICAgIG9wYWNpdHk6IDAuNztcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0b3A6IDE1JTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIH1cbiAgLm5hdi11cC1maWd1cmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAyMCU7XG4gICAgdG9wOiAtMTAlO1xuICAgIGJvcmRlci10b3A6IDE1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJpZ2h0OiAxNXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1ib3R0b206IDI1cHggc29saWQgIzAzMDMwMztcbiAgICBib3JkZXItbGVmdDogMTVweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgfVxuICAubmF2LXVwOmhvdmVyIHtcbiAgICBvcGFjaXR5OiAwLjg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YzNTAwMDtcbiAgfVxufSIsIi8qIE1FRElBIFFVRVJZIE1JWElOUyAtIFNUQVJUKi9cbkBtaXhpbiBtb2JpbGVfbWQge1xuICBAbWVkaWEgKG1pbi13aWR0aDogMzc1cHgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuQG1peGluIG1vYmlsZV9sZyB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiA0MjVweCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiB0YWJsZXRfc20ge1xuICBAbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuQG1peGluIHRhYmxldF9tZCB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBwY19zbSB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gcGNfbWQge1xuICBAbWVkaWEgKG1pbi13aWR0aDogMTM2NnB4KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIHBjX2xnIHtcbiAgQG1lZGlhIChtaW4td2lkdGg6IDE5MjBweCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5AbWl4aW4gcGNfeGwge1xuICBAbWVkaWEgKG1pbi13aWR0aDogMjU2MHB4KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbkBtaXhpbiBwY18yeGwge1xuICBAbWVkaWEgKG1pbi13aWR0aDogNTEyMXB4KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbi8qIE1FRElBIFFVRVJZIE1JWElOUyAtIEVORCovXG4iLCIqIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbn1cblxuYm9keSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG5cbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xuXG4gIGJhY2tncm91bmQtY29sb3I6ICRtYWluQmxhY2s7XG4gIGNvbG9yOiAkbGlnaHRZZWxsb3c7XG5cbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAvL2FsbCBwYWdlLWNvbnRlbnQgaXMgd3JhcHBlZCBpbiB0aGlzIHdyYXBwZXIgdG8gZ2V0IHN0aWNreSBmb290ZXJcbiAgLnBhZ2UtY29udGVudCB7XG4gICAgZmxleC1ncm93OiAxO1xuICB9XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAkbGlnaHRZZWxsb3c7XG59XG5cbmltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxudWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmgzIHtcbiAgbGluZS1oZWlnaHQ6IDEuNzU7XG59XG5cbnAge1xuICBsaW5lLWhlaWdodDogMS41O1xufVxuXG4uYW50aXNwbSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbm5vc2NyaXB0OjpiZWZvcmUge1xuICBjb250ZW50OiBcIk9tIGRlemUgd2Vic2l0ZSB0ZSBiZXpvZWtlbiBtb2V0IGplIHdlYmJyb3dzZXIgSmF2YVNjcmlwdCBvbmRlcnN0ZXVuZW4gZW4gdG9lc3RhYW4uXCI7XG5cbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXdlaWdodDogYm9sZGVyO1xuICBmb250LXNpemU6IDEuMjVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICBjb2xvcjogJG1haW5PcmFuZ2U7XG4gIGJhY2tncm91bmQtY29sb3I6ICRtYWluQmxhY2s7XG5cbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuXG4gIHdpZHRoOiAxMDAlO1xuXG4gIHBhZGRpbmc6IDFlbSAwO1xufVxuIiwiJGJhY2tncm91bmRXaGl0ZTogI0ZGRjlGNjtcbiRiYWNrZ3JvdW5kT3RoZXJXaGl0ZTogI0Y2RUZFQjtcblxuJG1haW5CbGFjazogIzAxMDEwMTtcbiRtYWluR3JleTogIzU1NTtcbiRvdGhlckJsYWNrOiAjMjAyMDIwO1xuXG4kdGV4dENvbG9yLWRhcms6ICMyQTJBMkE7XG5cbiRtYWluWWVsbG93OiAjRkVFQTAwOyAgIFxuJGxpZ2h0WWVsbG93OiAjRkZGRkMwOyAgIFxuXG4kbWFpbk9yYW5nZTogI2YzNTAwMDtcbiRkYXJrT3JhbmdlOiAjN0EyODAwOyAgICAgICAiLCIubGluay1zZWN0aW9ue1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRiYWNrZ3JvdW5kV2hpdGU7XG4gICAgcGFkZGluZzogNGVtIDJlbTtcbn1cblxuLmxpbmstc2VjdGlvbl9faGVhZGluZzpmaXJzdC1vZi10eXBlIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG59XG5cbi5saW5rIHtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjNzIGVhc2UtaW47XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IGVhc2UtaW4tb3V0IC4zcztcblxuICAgICYucmV2ZWFsIHtcbiAgICAgICAgb3BhY2l0eTogMTsgLy9pbnRlcnNlY3Rpb25hbCBvYnNlcnZlciBhcGlcbiAgICB9XG59XG5cbi5saW5rOmhvdmVyIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDI1KTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjNzIGVhc2UtaW47XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5saW5rcyB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgIH1cblxuICAgIC5saW5rLXNlY3Rpb25fX2hlYWRpbmcge1xuICAgICAgICBmbGV4OjE7XG4gICAgICAgIG1heC13aWR0aDogNDAwcHg7XG4gICAgfVxuXG4gICAgLmxpbmsgKyAubGluayB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyZW07XG4gICAgfVxuXG4gICAgLmxpbmstc2VjdGlvbl9faGVhZGluZzpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICAgIH1cblxuICAgIC5saW5rOmhvdmVyIHtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJG1haW5PcmFuZ2U7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IC4yNWVtO1xuICAgIH1cblxuICAgIC5saW5rOmFjdGl2ZSxcbiAgICAubGluazpmb2N1cyB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRtYWluT3JhbmdlO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAuMjVlbTtcbn1cbn0iLCIjaGlzdG9yeS1maXJzdCxcbiNoaXN0b3J5LXNlY29uZCxcbiNoaXN0b3J5LXRoaXJkLFxuI2hpc3RvcnktZm91cnRoLCBcbiNoaXN0b3J5LWZpZnRoLFxuI2hpc3Rvcnktc2l4dCxcbiNoaXN0b3J5LXNldmVudGgge1xuICAgIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xufVxuXG4uaW50cm8sIC5jcmVkaXRzIHtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDY1MHB4O1xuICAgIHBhZGRpbmc6IDJlbTtcbiAgICBtYXJnaW4tdG9wOiAuNWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjc1O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIGgxLCBoMyB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG5cbiAgICBoMSB7XG4gICAgICAgIGNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gICAgfVxufVxuXG4udGltZWxpbmUtbGlua3Mge1xuICAgIHBhZGRpbmc6IDAgMmVtO1xuICAgIG1heC13aWR0aDogNjUwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG8gMmVtIGF1dG87XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG5cbiAgICBhIHtcbiAgICAgICAgY29sb3I6ICRtYWluT3JhbmdlO1xuICAgICAgICBmb250LXNpemU6IC44cmVtO1xuICAgICAgICBtYXJnaW4tdG9wOiAxZW07XG4gICAgXG4gICAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6J3wnO1xuICAgICAgICAgICAgbWFyZ2luOiAwIDFlbTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6bGFzdC1jaGlsZDo6YWZ0ZXJ7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1cblxuYmxvY2txdW90ZSB7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICBmb250LXNpemU6IC45NXJlbTtcbn1cblxuLmNyZWRpdHMge1xuICAgIG1hcmdpbi1ib3R0b206IDRlbTtcbn1cblxuLnRpbWVsaW5lIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgcGFkZGluZzogMWVtIDAgMWVtIDFlbTtcbiAgICBtYXJnaW46IDAgYXV0bztcblxuICAgIC8vdmVydGljYWwgbGluZVxuICAgICY6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICB3aWR0aDogNXB4O1xuICAgICAgICBoZWlnaHQ6IDk5LjYlO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMWVtO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IDEwcHg7XG4gICAgICAgIHRvcDogMDsgICAgICAgICAgICBcbiAgICB9XG59XG5cbi5jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luOiAwIGF1dG8gNGVtIGF1dG87XG4gICAgLy9pbnRlcnNlY3Rpb24gb2JzZXJ2ZXIgYXBpIGZhZGUtaW5cbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjM1cyBlYXNlLWluO1xuXG4gICAgJi5yZXZlYWwge1xuICAgICAgICBvcGFjaXR5OiAxOyAgICAgLy9pbnRlcnNlY3Rpb24gb2JzZXJ2ZXIgYXBpIGZhZGUtaW5cbiAgICB9XG5cbiAgICAmOjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICAgIGhlaWdodDogMjBweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICBcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW5ZZWxsb3c7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogLTE0cHg7XG4gICAgICAgIHRvcDogMWVtO1xuICAgIH1cblxuICAgIC5jb250ZW50IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmRPdGhlcldoaXRlO1xuICAgICAgICBjb2xvcjogJHRleHRDb2xvci1kYXJrO1xuICAgICAgICBwYWRkaW5nOiAxZW0gMmVtOyAgICAgICBcbiAgICAgICAgYm9yZGVyLXJhZGl1czogLjVlbTsgICBcblxuICAgICAgICBoMiB7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuMTI1cmVtO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgIGNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHAge1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNzU7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICB9XG5cbiAgICAgICAgaW1nIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgbWFyZ2luOiAyZW0gYXV0bztcbiAgICAgICAgICAgIHdpZHRoOiA4MCU7XG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgIH1cblxuICAgICAgICBibG9ja3F1b3RlIHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAuNWVtO1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCl7XG5cbiAgICAuaW50cm8sXG4gICAgLmNyZWRpdHMge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuXG4gICAgLnRpbWVsaW5lIHtcblxuICAgICAgICBwYWRkaW5nOiAxZW07IFxuXG4gICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogN3B4O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLmNvbnRhaW5lciB7XG4gICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG5cbiAgICAuY29udGFpbmVyLmxlZnQge1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBtYXJnaW46IDAgMWVtIDAgMDtcblxuICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgbGVmdDogMTAwJTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5jb250YWluZXIucmlnaHQge1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIG1hcmdpbjogMCAwIDAgMTRweDtcbiAgICB9XG59IiwiLmluZm9fX3RpdGxlLFxuLmluZm9fX2NvbnRlbnQtdGV4dCxcbi5pbmZvX19jb250YWN0IHtcbiAgICBwYWRkaW5nOiAwIDJlbTtcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uaW5mb19fdGl0bGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi10b3A6IDNlbTtcbiAgICBsaW5lLWhlaWdodDogMS43NTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgfVxufVxuXG4uaW5mb19fY29udGVudC1pbWFnZXMge1xuICAgIHBhZGRpbmc6IDFlbSAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIGltZyB7XG4gICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICBoZWlnaHQ6IDEwMHB4O1xuICAgIH1cbn1cblxuLmluZm9fX2NvbnRlbnQtdGV4dCxcbi5pbmZvX19jb250YWN0IHtcbiAgICBsaW5lLWhlaWdodDogMS43NTtcbn1cblxuLmluZm9fX2NvbnRlbnQtdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogNGVtO1xufVxuXG4uaW5mb19fY29udGFjdCB7XG5cbiAgICBwIHtcbiAgICAgICAgY29sb3I6ICRtYWluT3JhbmdlO1xuICAgIH1cblxuICAgIGhyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGRhcmtPcmFuZ2U7XG4gICAgICAgIGhlaWdodDogM3B4O1xuICAgICAgICB3aWR0aDogMjAwcHg7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KXtcbiAgICAuaW5mb19fY29udGVudCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIHBhZGRpbmc6IDAgMWVtO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuXG4gICAgICAgIC5pbmZvX19jb250ZW50LXRleHQge1xuICAgICAgICAgICAgb3JkZXI6IDE7XG4gICAgICAgICAgICBtYXJnaW46IHVuc2V0O1xuICAgICAgICB9XG5cbiAgICAgICAgLmluZm9fX2NvbnRlbnQtaW1hZ2VzIHtcbiAgICAgICAgICAgIG9yZGVyOiAyO1xuICAgICAgICAgICAgbWFyZ2luOiB1bnNldDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgIHdpZHRoOiA4MCU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5pbmZvX19jb250YWN0IHtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG8gMCAwO1xuICAgIH1cbn0gICAiLCIubG9jYXRpb24ge1xuICAgIG1hcmdpbjogMmVtIGF1dG87XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMWVtIDJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAubG9jYXRpb25fX3RpdGxlIHtcblxuICAgICAgICBoMSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmxvY2F0aW9uX190ZXh0IHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuXG4gICAgICAgIGgyIHtcbiAgICAgICAgICAgIGNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICBmb250LXNpemU6IDFyZW07XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyZW07XG4gICAgICAgIH1cblxuICAgICAgICBwIHtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjc1O1xuICAgICAgICB9XG5cbiAgICAgICAgYS5idG4ge1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgIG1hcmdpbjogMmVtIGF1dG87XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAubG9jYXRpb25fX21hcC1jb250YWluZXIge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWluLXdpZHRoOiAyNTBweDtcbiAgICAgICAgaGVpZ2h0OiA1MDBweDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG8gNmVtIGF1dG87XG4gICAgfVxuXG4gICAgI21hcCB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRtYWluT3JhbmdlO1xuICAgIH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KXtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgbWF4LXdpZHRoOiA2NTBweDtcbiAgICAgICAgbWFyZ2luOiAyZW0gYXV0byAwIGF1dG87XG4gICAgfVxufVxuXG4vL0dvb2dsZSBNYXBzIHN0eWxlc1xuI21hcCB7XG4gICAgY29sb3I6ICRtYWluT3JhbmdlO1xuICAgIGgxIHtcbiAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgIH1cbn0iLCIubGFiZWwtdGV4dCB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBwYWRkaW5nOiAwIDJlbTtcbiAgICBtYXJnaW4tdG9wOiAzZW07XG5cbiAgICBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgIH1cblxuICAgIGEge1xuICAgICAgICBjb2xvcjogJG1haW5PcmFuZ2U7XG4gICAgfVxufVxuXG5mb3JtLmNvbnRhY3Qge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogNjUwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG8gNGVtIGF1dG87XG4gICAgcGFkZGluZzogMmVtO1xuICAgIGNvbG9yOiAkdGV4dENvbG9yLWRhcms7XG5cbiAgICAuaW5wdXQtY29udGFpbmVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuXG4gICAgICAgIGxhYmVsIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICAgICAgICAgIGNvbG9yOiAkbGlnaHRZZWxsb3c7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcblxuICAgICAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcqJztcbiAgICAgICAgICAgICAgICBjb2xvcjogJG1haW5PcmFuZ2U7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAuNWVtO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogLjc1cmVtO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmW2Zvcj1cInN1YmplY3RcIl06OmFmdGVyIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lOyAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlucHV0LCBcbiAgICAgICAgc2VsZWN0LFxuICAgICAgICB0ZXh0YXJlYSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAxZW07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZE90aGVyV2hpdGU7XG4gICAgICAgIH1cblxuICAgICAgICBpbnB1dDpmb2N1cy13aXRoaW4sXG4gICAgICAgIHRleHRhcmVhOmZvY3VzLXdpdGhpbixcbiAgICAgICAgc2VsZWN0OmZvY3VzLXdpdGhpbiB7XG4gICAgICAgICAgICBvdXRsaW5lOiAkbWFpblllbGxvdyAzcHggc29saWQ7XG4gICAgICAgIH1cblxuICAgICAgICBzZWxlY3Qge1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuZm9ybV9fY29uc2VudCB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgICAgICBwIHtcbiAgICAgICAgICAgIGNvbG9yOiAkbGlnaHRZZWxsb3c7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS43NTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgYnV0dG9uIHtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICBjb2xvcjogJGJhY2tncm91bmRPdGhlcldoaXRlO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJ1dHRvbltkaXNhYmxlZF0ge1xuICAgICAgICAgICAgb3BhY2l0eTogLjU7XG4gICAgICAgIH1cblxuICAgICAgICBidXR0b246Zm9jdXMge1xuICAgICAgICAgICAgb3V0bGluZTogJG1haW5PcmFuZ2UgMXB4IHNvbGlkOyAgICAgICAgICAgIFxuICAgICAgICB9XG5cbiAgICAgICAgLmZvcm1fX2NvbnNlbnQtY29udGFpbmVyIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcblxuICAgICAgICAgICAgLy9jdXN0b20gY2hlY2tib3ggXG4gICAgICAgICAgICAuY2hlY2tib3gtY29udGFpbmVyIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgICAgICAgICAgICBpbnB1dCB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAuY2hlY2tib3gtY3VzdG9tIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogLTEwcHg7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogLTVweDtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MHB4KTtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMzBweDtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmRXaGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAzcHggc29saWQgJG1haW5ZZWxsb3c7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC5jaGVja2JveC1jdXN0b206aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbkdyZXk7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpbnB1dDpjaGVja2VkIH4gLmNoZWNrYm94LWN1c3RvbSB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluR3JleTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL2NoZWNrbWFya1xuICAgICAgICAgICAgICAgIC5jaGVja2JveC1jdXN0b206OmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogN3B4O1xuICAgICAgICAgICAgICAgICAgICB0b3A6IDRweDtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA1cHg7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTBweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBzb2xpZCAkYmFja2dyb3VuZFdoaXRlO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDAgNHB4IDRweCAwO1xuICAgICAgICAgICAgICAgICAgICAvKiBib3JkZXItcmFkaXVzOiA4cHg7ICovXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaW5wdXQ6Y2hlY2tlZCB+IC5jaGVja2JveC1jdXN0b206OmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgfSAgICAgXG4gICAgICAgICAgICB9IFxuICAgICAgICB9XG5cbiAgICAgICAgYSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjc1cmVtO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTkycHgpe1xuICAgICAgICAmIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7ICAgXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIG1heC13aWR0aDogMTIwMHB4O1xuICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgLmZvcm1fX2lucHV0cyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDYwJTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDRlbTtcblxuICAgICAgICAgICAgICAgIGlucHV0LFxuICAgICAgICAgICAgICAgIHNlbGVjdCB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA2MCU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGV4dGFyZWEge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gICAgIFxuXG4gICAgICAgICAgICAuZm9ybV9fY29uc2VudCB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDQwJTtcbiAgICAgICAgICAgICAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICB9XG59IiwiLnBvbGljeS10ZXh0LWNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiA4ZW07XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICBoMSxcbiAgICBoMiB7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIGNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICAgICAgbWFyZ2luOiAyZW0gMDtcbiAgICB9XG5cbiAgICBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgIH1cblxuICAgIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgICBmb250LXdlaWdodDogNzAwO1xuICAgIH1cblxuICAgIHAge1xuICAgICAgICBsaW5lLWhlaWdodDogMS43NTtcbiAgICB9XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCl7XG4gICAgICAgIG1heC13aWR0aDogNTAlO1xuICAgICAgICBtYXJnaW46IDAgMCAwIGF1dG87ICAgICAgICBcbiAgICB9XG5cbn0iLCIuZXJyb3ItY29udGFpbmVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiA2ZW0gMDtcblxuICAgIGgyIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICAgIH1cblxuICAgIGEge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWF4LXdpZHRoOiAzMCU7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICAgICAgY29sb3I6ICRiYWNrZ3JvdW5kV2hpdGU7XG4gICAgICAgIHBhZGRpbmc6IDFlbSAyZW07XG4gICAgfVxufSIsIi53cmFwcGVyIHtcblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCl7XG4gICAgICAgIG1heC13aWR0aDogMTIwMHB4O1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICB9XG59IiwiLm1vZGFsIHtcbiAgZGlzcGxheTogbm9uZTtcblxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGFya09yYW5nZTtcbiAgb3BhY2l0eTogMC45NTtcblxuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcblxuICB6LWluZGV4OiA1MDtcblxuICAubW9kYWxfX2ltZyxcbiAgLm1vZGFsX190ZXh0IHtcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gIC5tb2RhbF9faW1nIHtcbiAgICBwYWRkaW5nOiAyZW0gMmVtIDAgMmVtO1xuICB9XG5cbiAgLm1vZGFsX19pbWcgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5tb2RhbF9fdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICB9XG5cbiAgLmZvcm0tcm93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgICBsYWJlbCBzcGFuIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIH1cblxuICAgIGxhYmVsIHNwYW4uc3RvcmUge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBmb250LXNpemU6IDFyZW07XG4gICAgICBtYXJnaW4tdG9wOiAxZW07XG4gICAgICBtYXJnaW4tYm90dG9tOiAwLjc1ZW07XG4gICAgfVxuXG4gICAgbGFiZWwgLmZvcm1fX2J0bnMge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgYnV0dG9uLmJ0biB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmE4YzAwO1xuICAgICAgY29sb3I6ICRiYWNrZ3JvdW5kV2hpdGU7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgIG1hcmdpbi1yaWdodDogMWVtO1xuICAgIH1cblxuICAgIGJ1dHRvbjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmE4YzAwO1xuICAgIH1cblxuICAgIGEge1xuICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgIHBhZGRpbmc6IDFlbSAxLjI1ZW07XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgY29sb3I6ICRiYWNrZ3JvdW5kV2hpdGU7XG4gICAgfVxuXG4gICAgYTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICB9XG5cbiAgICAvL2N1c3RvbSBjaGVja2JveFxuICAgIGlucHV0IHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHdpZHRoOiAwO1xuICAgICAgaGVpZ2h0OiAwO1xuICAgICAgb3BhY2l0eTogMDtcblxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cblxuICAgIC5jaGVja2JveC1jdXN0b20ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBoZWlnaHQ6IDI1cHg7XG4gICAgICB3aWR0aDogMjVweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRiYWNrZ3JvdW5kV2hpdGU7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICB9XG5cbiAgICAuY2hlY2tib3gtY3VzdG9tOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluR3JleTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG5cbiAgICBpbnB1dDpjaGVja2VkIH4gLmNoZWNrYm94LWN1c3RvbSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbkdyZXk7XG4gICAgfVxuXG4gICAgLmNoZWNrYm94LWN1c3RvbTo6YWZ0ZXIge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA3cHg7XG4gICAgICB0b3A6IDRweDtcblxuICAgICAgd2lkdGg6IDVweDtcbiAgICAgIGhlaWdodDogMTBweDtcbiAgICAgIGJvcmRlcjogc29saWQgJGJhY2tncm91bmRXaGl0ZTtcbiAgICAgIGJvcmRlci13aWR0aDogMCA0cHggNHB4IDA7XG4gICAgICAvKiBib3JkZXItcmFkaXVzOiA4cHg7ICovXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgfVxuXG4gICAgaW5wdXQ6Y2hlY2tlZCB+IC5jaGVja2JveC1jdXN0b206OmFmdGVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgfVxufVxuXG4ubW9kYWwuaW4tdmlldyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vL21lZGlhIHF1ZXJ5XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQyNXB4KSB7XG4gIC5tb2RhbCB7XG4gICAgLm1vZGFsX19pbWcgaW1nIHtcbiAgICAgIHdpZHRoOiA3MCU7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc4NnB4KSB7XG4gIC5tb2RhbCB7XG4gICAgLm1vZGFsX19pbWcsXG4gICAgLm1vZGFsX190ZXh0IHtcbiAgICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgfVxuXG4gICAgLm1vZGFsX190ZXh0IHtcbiAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICB9XG5cbiAgICAuZm9ybS1yb3cge1xuICAgICAgbGFiZWwgc3BhbiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgICAgfVxuXG4gICAgICBsYWJlbCBzcGFuLnN0b3JlIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vL2lmIGFnZSBjb25zZW50IGlzIHNldCBpbiBsb2NhbFN0b3JhZ2UsIG1vZGFsIGlzIGhpZGRlblxuLm1vZGFsLmhpZGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiLmNvb2tpZS1jb25zZW50IHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiA2O1xuXG4gIHdpZHRoOiAxMDAlO1xuXG4gIHBhZGRpbmc6IDJlbSAxZW07XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgkbWFpbkJsYWNrLCAkbWFpbk9yYW5nZSwgJG1haW5CbGFjayk7XG4gIG9wYWNpdHk6IDAuOTU7XG4gIGJvcmRlci1yYWRpdXM6IDVweCA1cHggMCAwO1xuXG4gIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgYm90dG9tOiB1bnNldDtcbiAgICB0b3A6IDA7XG4gIH1cblxuICAmLS1zaG93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5cbiAgJi0taGlkZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gICZfX2J0bi1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgZmxleC1mbG93OiByb3ctcmV2ZXJzZTtcbiAgICB9XG4gIH1cblxuICAmX19idG4ge1xuICAgIHdpZHRoOiAxMmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICBtYXJnaW46IDAgMWVtIDAgMDtcbiAgICB9XG4gIH1cbn1cbiIsIi5idG4ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG5cbiAgYmFja2dyb3VuZC1jb2xvcjogJGRhcmtPcmFuZ2U7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm94LXNoYWRvdzogMnB4IDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xuXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSBlYXNlLWluIDAuM3M7XG5cbiAgcGFkZGluZzogMC41ZW0gMWVtO1xuXG4gICYtLW91dGxpbmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHVuc2V0O1xuICAgIGJvcmRlcjogMXB4ICRsaWdodFllbGxvdyBzb2xpZDtcbiAgfVxuXG4gICY6aG92ZXIge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMTI1KTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cbiIsIi8qXG4gICAgIyMjIyMjIyMjI1xuICAgIEJBU0UgU1RZTEVcbiAgICAjIyMjIyMjIyMjXG5cbi0gbW9iaWxlIGZpcnN0IGFwcHJvYWNoOiBiYXNlIHN0eWxlICsgbWVkaWEgcXVlcnlcbi0gYmFzZSBzdHlsZSBnZXRzIGZvciBhbGwgcGFnZXNcbi0gbGFuZGluZyBjbGFzcyBnZXRzIGFkZGVkIHRocm91Z2gganMgb24gaG9tZXBhZ2Ugb25seVxuKi9cblxuaGVhZGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG5cbiAgLm5hdmJhciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgYS5sb2dvIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXG4gICAgICBpIHtcbiAgICAgICAgbWFyZ2luOiAyZW0gMCAwIDFlbTtcbiAgICAgIH1cblxuICAgICAgaW1nIHtcbiAgICAgICAgd2lkdGg6IDEyNXB4O1xuICAgICAgICBoZWlnaHQ6IDUwcHg7XG4gICAgICAgIG1hcmdpbi10b3A6IDFlbTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDJlbTtcbiAgICAgICAganVzdGlmeS1zZWxmOiBmbGV4LXN0YXJ0O1xuICAgICAgfVxuICAgIH1cblxuICAgIHVsLm1lbnUge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIG1hcmdpbi1yaWdodDogMmVtO1xuICAgIH1cblxuICAgIGxpIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBhZGRpbmc6IDFlbSAwO1xuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgZWFzZS1pbi1vdXQ7XG4gICAgfVxuXG4gICAgbGkubWVudV9fbGluayArIGxpLm1lbnVfX2xpbmsge1xuICAgICAgbWFyZ2luLWxlZnQ6IDEuNWVtO1xuICAgIH1cblxuICAgIC8vaGlkZSBsaW5rIGVsZW1zIG9uIG1vYmlsZS9sZ1xuICAgIC5oaWRlLW1vYmlsZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgIC8vdG9nZ2xlXG4gICAgdWwubWVudSBsaTpsYXN0LWNoaWxkIHtcbiAgICAgIHBhZGRpbmc6IDAuNWVtIDAgMCAxZW07XG4gICAgfVxuXG4gICAgLy9saW5rIHN0eWxlc1xuICAgIHVsIGEge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuXG4gICAgdWwgYSBpIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDFlbTtcbiAgICB9XG5cbiAgICB1bCBsaSN0b2dnbGUgYSBpIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgfVxuXG4gICAgbGk6aG92ZXIsXG4gICAgbGk6YWN0aXZlIHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XG4gICAgfVxuXG4gICAgLy9tZW51LWNvbGxhcHNlXG4gICAgdWwubWVudV9fY29sbGFwc2Uge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1MHB4O1xuICAgICAgcmlnaHQ6IDJlbTtcbiAgICAgIHotaW5kZXg6IDEwO1xuXG4gICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoJGRhcmtPcmFuZ2UsICRtYWluQmxhY2spO1xuICAgICAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuXG4gICAgICBwYWRkaW5nOiAyZW07XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLCAwKTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCBlYXNlLWluIDAuM3M7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XG4gICAgfVxuXG4gICAgdWwubWVudV9fY29sbGFwc2UudmlzaWJsZSB7XG4gICAgICBvcGFjaXR5OiAwLjk1O1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLCAxKTtcbiAgICB9XG5cbiAgICB1bC5tZW51X19jb2xsYXBzZSBsaSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxZW07XG4gICAgfVxuXG4gICAgdWwubWVudV9fY29sbGFwc2UudmlzaWJsZSB7XG4gICAgICBvcGFjaXR5OiAwLjk1O1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLCAxKTtcbiAgICB9XG5cbiAgICB1bC5tZW51X19jb2xsYXBzZSBsaSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxZW07XG4gICAgfVxuXG4gICAgLy9vbmxpbmUgc2hvcCBsaW5rIGRpc2FibGVkIGZvciBub3dcbiAgICB1bC5tZW51X19jb2xsYXBzZSBsaSNzaG9wIHtcbiAgICAgIG9wYWNpdHk6IDAuNDU7XG4gICAgfVxuXG4gICAgdWwubWVudV9fY29sbGFwc2UgbGkjc2hvcDpob3ZlcixcbiAgICB1bC5tZW51X19jb2xsYXBzZSBsaSNzaG9wIGE6aG92ZXIge1xuICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICB9XG4gIH1cblxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5uYXZiYXIge1xuICAgICAgdWwubWVudSBsaS5oaWRlLW1vYmlsZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgfVxuXG4gICAgICB1bC5tZW51X19jb2xsYXBzZSBsaS5oaWRlLWxnIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLypcbiAgICAjIyMjIyMjIyMjIyMjI1xuICAgIEhPTUVQQUdFIFNUWUxFXG4gICAgIyMjIyMjIyMjIyMjIyNcbiAgICBcbi0gbWVudSBhdCB0aGUgYm90dG9tIG9uIG1vYmlsZSwgdG9wIG9uIGxnIHNjcmVlbnNcbi0gJ2xhbmRpbmcnIGNsYXNzIGdldHMgYWRkZWQgdGhyb3VnaCBqcyBvbiB0aGUgaG9tZXBhZ2VcbiovXG5cbmhlYWRlci5sYW5kaW5nIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCRtYWluQmxhY2ssICRkYXJrT3JhbmdlKTtcblxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgaGVpZ2h0OiAyMHZoO1xuXG4gIHotaW5kZXg6IDU7XG5cbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcblxuICAubmF2YmFyIHtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcblxuICAgIGEubG9nbyB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgIC8vbGluayBzdHlsZXNcbiAgICB1bCBhIHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgfVxuXG4gICAgdWwgYSBpIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMWVtO1xuICAgIH1cblxuICAgIHVsIGxpOmxhc3Qtb2YtdHlwZSBhIGkge1xuICAgICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgfVxuXG4gICAgbGkge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyBlYXNlLWluLW91dDtcbiAgICAgIGZvbnQtc2l6ZTogMC44cmVtO1xuICAgIH1cblxuICAgIC8vY29ycmVjdCBtYXJnaW4gaW5oZXJpdGVkIGZyb20gYmFzZSBzdHlsZVxuICAgIHVsLm1lbnUge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgfVxuXG4gICAgLy9tZW51LWNvbGxhcHNlXG4gICAgdWwubWVudV9fY29sbGFwc2Uge1xuICAgICAgdG9wOiAtMTgwcHg7XG4gICAgICByaWdodDogMmVtO1xuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogYm90dG9tO1xuICAgICAgcGFkZGluZzogMWVtO1xuICAgIH1cblxuICAgIHVsLm1lbnVfX2NvbGxhcHNlIGEge1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgfVxuXG4gICAgdWwubWVudV9fY29sbGFwc2UgYSBpIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMWVtO1xuICAgICAgb3JkZXI6IDE7XG4gICAgfVxuXG4gICAgdWwubWVudV9fY29sbGFwc2UgbGkuaGlkZS1sZyB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuXG4gIC8vbWVkaWEtcXVlcnlcblxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NzZweCkge1xuICAgIHBvc2l0aW9uOiBpbmhlcml0O1xuICAgIGJhY2tncm91bmQ6IGluaGVyaXQ7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgbWluLWhlaWdodDogMjVweDtcblxuICAgIC5uYXZiYXIge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgIHVsIGxpIHtcbiAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgICBwYWRkaW5nOiAxZW0gMDtcbiAgICAgIH1cblxuICAgICAgbGkgKyBsaSB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyZW07XG4gICAgICB9XG5cbiAgICAgIHVsLm1lbnUge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDJlbTtcbiAgICAgIH1cblxuICAgICAgdWwubWVudV9fY29sbGFwc2Uge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogNTVweDtcbiAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xuICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoJGRhcmtPcmFuZ2UsICRtYWluQmxhY2spO1xuICAgICAgfVxuXG4gICAgICB1bCBhIHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgIH1cblxuICAgICAgdWwgYSBpIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMWVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmhlcm8tc2VjdGlvbiB7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAvL3NlZSBhcHAuanM6IGNhbGMgYmFzZWQgb24gdGhlIGFjdHVhbCBzaXplIG9mIHRoZSBzY3JlZW4sIHdpdGhvdXQgYnJvd3Nlcm5hdlxuICAgIGhlaWdodDogY2FsYyh2YXIoLS12aCwgMXZoKSAqIDEwMCk7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAud3JhcHBlciB7XG4gICAgICAgIGhlaWdodDogMTAwJTtcblxuICAgICAgICAuaGVyb19fY29udGVudCB7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vZmxhc2ggbWVzc2FnZSBhZnRlciBzdWNjZXNmdWwgY29udGFjdCBmb3JtIHJlcXVlc3Rcbi5mbGFzaC1tc2ctY29udGFpbmVyIHtcbiAgICB3aWR0aDogMzUwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMmVtO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB6LWluZGV4OiA1MDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGNvbG9yOiAkdGV4dENvbG9yLWRhcms7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZFdoaXRlO1xuICAgIGFuaW1hdGlvbjogZmFkZU91dCA1cyAycyBmb3J3YXJkcztcbn1cblxuQGtleWZyYW1lcyBmYWRlT3V0IHtcbiAgICBmcm9tIHtvcGFjaXR5OjF9XG4gICAgdG8ge29wYWNpdHk6IDB9XG59XG5cbi8vc2Nyb2xsIGFycm93XG4uc2Nyb2xsLWljb24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8vSEVSTyBTRUNUSU9OIENPTlRFTlRcbi5oZXJvX19jdGEge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjb2xvcjogJGxpZ2h0WWVsbG93O1xuICAgIHBhZGRpbmc6IDJlbSAyZW0gMCAyZW07XG5cbiAgICAuaGVyb19fbG9nby1jb250YWluZXIgaW1nIHtcbiAgICAgICAgbWF4LXdpZHRoOiA2MCU7XG4gICAgfVxuXG4gICAgaDEsIFxuICAgIGgyLCBcbiAgICAuYnRuIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG59XG5cbi5oZXJvX19pbWFnZS1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5oZXJvX19pbWFnZS1jb250YWluZXIgaW1nIHtcbiAgICB3aWR0aDogNjAlO1xufVxuXG4vKlxuICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjXG4gICAgbWVkaWEgcXVlcmllcyBtb2JpbGVcbiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjI1xuICAgIFxuICAgIHNtIC0+IGxnXG4gICAgc2NyZWVucyB3aXRoIHN1ZmZpY2llbnQgaGVpZ2h0IGdldCB0byBzZWUgdGhlIHRpdGxlXG4qL1xuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLWhlaWdodDogNjUwcHgpe1xuICAgIC5oZXJvX19jb250ZW50IHtcbiAgICAgICAgbWFyZ2luLXRvcDogMTUlO1xuICAgIH1cblxuICAgIC5oZXJvX19jdGEge1xuICAgICAgICBcbiAgICAgICAgaDEsIFxuICAgICAgICBoMiB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgfVxuXG4gICAgICAgIGgxIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDJlbTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIGgyIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjc1cmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgLmhlcm9fX2xvZ28tY29udGFpbmVyIGltZyB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDgwJTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5oZXJvX19pbWFnZS1jb250YWluZXIgaW1nIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzNTBweCl7XG4gICAgLmhlcm9fX2NvbnRlbnQge1xuICAgICAgICBtYXJnaW4tdG9wOiB1bnNldDtcblxuICAgICAgICAuaGVyb19fbG9nby1jb250YWluZXIgaW1nIHtcbiAgICAgICAgICAgIG1heC13aWR0aDogNTAlO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5oZXJvX19pbWFnZS1jb250YWluZXIgaW1nIHtcbiAgICAgICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDM5MHB4KXtcbiAgICAuaGVyb19fY29udGVudCB7XG5cbiAgICAgICAgLmhlcm9fX2xvZ28tY29udGFpbmVyIGltZyB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDQ1JTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5oZXJvX19pbWFnZS1jb250YWluZXIgaW1nIHtcbiAgICAgICAgICAgIHdpZHRoOiA0NSU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ2MHB4KXtcbiAgICAuaGVyb19fY29udGVudCB7XG4gICAgICAgIFxuICAgICAgICAuaGVyb19fbG9nby1jb250YWluZXIgaW1nIHtcbiAgICAgICAgICAgIG1heC13aWR0aDogNDAlO1xuICAgICAgICB9XG5cbiAgICAgICAgLmhlcm9fX2ltYWdlLWNvbnRhaW5lciBpbWcge1xuICAgICAgICAgICAgd2lkdGg6IDQwJTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTAwcHgpe1xuICAgIC5oZXJvX19jb250ZW50IHtcbiAgICAgICAgXG4gICAgICAgIC5oZXJvX19sb2dvLWNvbnRhaW5lciBpbWcge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAzNSU7XG4gICAgICAgIH1cblxuICAgICAgICAuaGVyb19faW1hZ2UtY29udGFpbmVyIGltZyB7XG4gICAgICAgICAgICB3aWR0aDogMzUlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4vKlxuICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuICAgIG1lZGlhIHF1ZXJpZXMgdGFibGV0IGFuZCB1cFxuICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuICAgIFxuICAgIHN3aXRjaCB0byB0d28tY29sdW1uIGxheW91dFxuKi9cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTc2cHgpe1xuXG4gICAgLmhlcm9fX2NvbnRlbnQge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgICAgICAuaGVyb19fY3RhLFxuICAgICAgICAuaGVyb19faW1hZ2UtY29udGFpbmVyIHtcbiAgICAgICAgICAgIGhlaWdodDogODAlO1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAuaGVyb19faW1hZ2UtY29udGFpbmVyIHtcbiAgICAgICAgICAgIGZsZXg6IDI7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmhlcm9fX2ltYWdlLWNvbnRhaW5lciBpbWcge1xuICAgICAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IC0yNXB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmhlcm9fX2N0YSB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgICBmbGV4OiAzO1xuICAgICAgICAgICAgcGFkZGluZzogMmVtO1xuICAgIFxuICAgICAgICAgICAgaDEsXG4gICAgICAgICAgICBoMixcbiAgICAgICAgICAgIC5idG4ge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICBoMSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgICAgICAgICAgICAgIC8vb3ZlcnJpZGUgdGhlIG1pbi1oZWlnaHQgbWVkaWEgcXVlcnkgZm9yIGxnIG1vYmlsZTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgICAgIH1cbiAgICBcbiAgICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IC43NXJlbTtcbiAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAuYnRuIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTc1cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMmVtO1xuICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAuODVyZW07XG5cbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGFya09yYW5nZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KXtcbiAgICAuc2Nyb2xsLWljb24ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuIFxuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgICAgYW5pbWF0aW9uOiBtb3ZlQXJyb3cgMXMgaW5maW5pdGU7XG4gICAgfVxuICAgIEBrZXlmcmFtZXMgbW92ZUFycm93IHtcbiAgICAgICAgMCUge2JvdHRvbTogMWVtfVxuICAgICAgICA1MCUge2JvdHRvbToxLjM1ZW19XG4gICAgICAgIDEwMCUge2JvdHRvbToxZW19XG4gICAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmhlcm9fX2NvbnRlbnQge1xuICAgICAgICAuaGVyb19fY3RhIHtcbiAgICAgICAgICAgIC5oZXJvX19sb2dvLWNvbnRhaW5lciB7XG4gICAgICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA1MCU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaDEge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaDIge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5idG4ge1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDogMjI1cHg7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC5oZXJvX19pbWFnZS1jb250YWluZXIge1xuICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogODUlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQ0MHB4KSB7XG4gICAgLmhlcm9fX2NvbnRlbnQge1xuICAgICAgICAuaGVyb19fY3RhIHtcbiAgICAgICAgICAgIC5oZXJvX19sb2dvLWNvbnRhaW5lciB7XG4gICAgICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA2MCU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaDEge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS43NXJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuMjVyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuYnRuIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDMwMHB4O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAuaGVyb19faW1hZ2UtY29udGFpbmVyIHtcbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE4MDBweCkge1xuICAgIC5oZXJvX19jb250ZW50IHtcbiAgICAgICAgLmhlcm9fX2N0YSB7XG4gICAgICAgICAgICAuaGVyb19fbG9nby1jb250YWluZXIge1xuICAgICAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogODAlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGgxIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDIuMjVyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBoMiB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjc1cmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLmJ0biB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA1MDBweDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNzVyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLmhlcm9fX2ltYWdlLWNvbnRhaW5lciB7XG4gICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiLnRlc3RpbW9uaWFsIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZE90aGVyV2hpdGU7XG4gICAgcGFkZGluZzogNGVtIDFlbTtcbiAgICBjb2xvcjogJHRleHRDb2xvci1kYXJrO1xufVxuXG4udGVzdGltb25pYWxfX2NvbnRlbnQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAwIDJlbTtcblxuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSBlYXNlLWluLW91dCAuM3M7XG5cbiAgICAmLnJldmVhbCB7XG4gICAgICAgIG9wYWNpdHk6IDE7IC8vaW50ZXJzZWN0aW9uYWwgb2JzZXJ2ZXIgYXBpXG4gICAgfVxuXG4gICAgLnRlc3RpbW9uaWFsX19jb250YWluZXI6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDRlbTtcbiAgICB9XG5cbiAgICAudGVzdGltb25pYWxfX2NvbnRhaW5lciBwOmxhc3Qtb2YtdHlwZXtcbiAgICAgICAgY29sb3I6ICRtYWluT3JhbmdlO1xuICAgIH1cblxuICAgIGkuZmEtYW5nbGUtcmlnaHQge1xuICAgICAgICBjb2xvcjogJG1haW5ZZWxsb3c7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMWVtO1xuICAgIH1cblxuICAgIHA6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjc1O1xuICAgICAgICBwYWRkaW5nOiAxZW0gMDtcbiAgICB9XG5cbiAgICBwLmF1dGhvciB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCl7XG5cbiAgICAudGVzdGltb25pYWxfX2hlYWRpbmcge1xuICAgICAgICAvL292ZXJyaWRlIHRoZSBkZWZhdWx0IHN0eWxlIGRlZmluZWQgaW4gX3NlY3Rpb24taGVhZGluZ1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA2ZW0gIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAudGVzdGltb25pYWxfX2hlYWRpbmcgaHIge1xuICAgICAgICBtYXgtd2lkdGg6IDI1MHB4O1xuICAgIH1cblxuICAgIC50ZXN0aW1vbmlhbF9fY29udGVudCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgICAgIHBhZGRpbmctbGVmdDogNGVtO1xuICAgIH1cblxuICAgIC50ZXN0aW1vbmlhbF9fY29udGFpbmVyIHtcbiAgICAgICAgZmxleDogMTtcbiAgICB9XG5cbiAgICAudGVzdGltb25pYWxfX2NvbnRhaW5lciArIC50ZXN0aW1vbmlhbF9fY29udGFpbmVyIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDFlbTtcbiAgICB9XG5cbiAgICAudGVzdGltb25pYWxfX2NvbnRhaW5lciB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcblxuICAgICAgICBpIHtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLjVlbTtcbiAgICAgICAgfVxuICAgICAgICBwLnF1b3RlIHtcbiAgICAgICAgICAgIHdpZHRoOiA3MCU7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogMDtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgfVxuICAgICAgICBwLmF1dGhvciB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDRlbTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICB9XG4gICAgfVxufSIsIi5oZWFkaW5nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuXG4gICAgaSB7XG4gICAgICAgIGNvbG9yOiAkbWFpblllbGxvdztcbiAgICB9XG5cbiAgICBoMixcbiAgICBoMyB7XG4gICAgICAgIGNvbG9yOiAkdGV4dENvbG9yLWRhcmtcbiAgICB9XG4gICAgaDMge1xuICAgICAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgbWFyZ2luOiAwIDAgLjVlbSAwO1xuICAgIH1cblxuICAgIGhyIHtcbiAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgaGVpZ2h0OiAycHg7XG4gICAgICAgIGJhY2tncm91bmQ6ICRtYWluT3JhbmdlO1xuICAgIH1cbn0iLCIuaGlzdG9yeSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmRPdGhlcldoaXRlO1xufVxuXG4uaGlzdG9yeV9fY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiA0ZW0gMmVtO1xufVxuXG4uaGlzdG9yeS1zZWN0aW9uX19oZWFkaW5nIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG59XG5cbi5pbWFnZS1saW5rLWNvbnRhaW5lciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uaW1hZ2UtbGluay1jb250YWluZXIgaW1nIHtcbiAgICB3aWR0aDogODAlO1xuICAgIGJvcmRlci1yYWRpdXM6IDJlbTtcbn1cblxuLmltYWdlLWxpbmstY29udGFpbmVyIGE6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmltYWdlLWxpbmstY29udGFpbmVyIGltZzpmaXJzdC1vZi10eXBlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KXtcbiAgICAuaGlzdG9yeV9fY29udGFpbmVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgfVxuXG4gICAgLmhpc3Rvcnktc2VjdGlvbl9faGVhZGluZ3tcbiAgICAgICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICB9XG5cbiAgICAuaW1hZ2UtbGluay1jb250YWluZXIge1xuICAgICAgICBtYXJnaW4tbGVmdDogMmVtO1xuICAgICAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgIH1cblxuICAgIC5pbWFnZS1saW5rLWNvbnRhaW5lciBpbWcge1xuICAgICAgICB3aWR0aDogNTAlO1xuICAgIH1cbn0iLCIubmV3c2xldHRlci1zZWN0aW9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZFdoaXRlO1xuICAgIHBhZGRpbmc6IDRlbSAyZW07XG59XG5cbi5uZXdzbGV0dGVyX19pbnB1dCB7XG5cbiAgICBmb3JtLm5ld3NsZXR0ZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cblxuICAgIGlucHV0W25hbWU9XCJlbWFpbFwiXSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IC41ZW07XG4gICAgICAgIHdpZHRoOiA4MCU7XG4gICAgICAgIGJvcmRlcjogJG1haW5PcmFuZ2UgMXB4IHNvbGlkO1xuICAgICAgICBcbiAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgICBjb2xvcjogJHRleHRDb2xvci1kYXJrO1xuXG4gICAgICAgIHBhZGRpbmc6IDFlbTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmRPdGhlcldoaXRlO1xuICAgIH1cblxuICAgIGlucHV0W25hbWU9XCJlbWFpbFwiXTo6cGxhY2Vob2xkZXIge1xuICAgICAgICBjb2xvcjogJHRleHRDb2xvci1kYXJrO1xuICAgIH1cblxuICAgIGlucHV0W25hbWU9XCJlbWFpbFwiXTpmb2N1cy13aXRoaW4ge1xuICAgICAgICBvdXRsaW5lOiAkbWFpbk9yYW5nZSAxcHggc29saWQ7XG4gICAgfVxuXG4gICAgLmZvcm1fX2NvbnNlbnQge1xuICAgICAgICB3aWR0aDogODAlO1xuICAgICAgICBjb2xvcjogJHRleHRDb2xvci1kYXJrO1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBmb250LXNpemU6IC43NXJlbTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNzU7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuXG4gICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgY29sb3I6ICRiYWNrZ3JvdW5kT3RoZXJXaGl0ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJ1dHRvbltkaXNhYmxlZF0ge1xuICAgICAgICAgICAgb3BhY2l0eTogLjU7XG4gICAgICAgIH1cblxuICAgICAgICBwIHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG5cbiAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC5mb3JtX19jb25zZW50LWNvbnRhaW5lciB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07XG5cbiAgICAgICAgICAgIC8vY3VzdG9tIGNoZWNrYm94IFxuICAgICAgICAgICAgLmNoZWNrYm94LWNvbnRhaW5lciB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAgICAgICAgICAgaW5wdXQge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAwO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLmNoZWNrYm94LWN1c3RvbSB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IC0xNzVweDtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAtMzdweDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMzBweDtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmRXaGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAzcHggc29saWQgJG1haW5ZZWxsb3c7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC5jaGVja2JveC1jdXN0b206aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbkdyZXk7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpbnB1dDpjaGVja2VkIH4gLmNoZWNrYm94LWN1c3RvbSB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluR3JleTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL2NoZWNrbWFya1xuICAgICAgICAgICAgICAgIC5jaGVja2JveC1jdXN0b206OmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogN3B4O1xuICAgICAgICAgICAgICAgICAgICB0b3A6IDRweDtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA1cHg7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTBweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBzb2xpZCAkYmFja2dyb3VuZFdoaXRlO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDAgNHB4IDRweCAwO1xuICAgICAgICAgICAgICAgICAgICAvKiBib3JkZXItcmFkaXVzOiA4cHg7ICovXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaW5wdXQ6Y2hlY2tlZCB+IC5jaGVja2JveC1jdXN0b206OmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgfSAgICAgXG4gICAgICAgICAgICB9IFxuICAgICAgICB9XG5cblxuICAgICAgICAvL2N1c3RvbSBjaGVja2JveFxuXG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCl7XG5cbiAgICAubmV3c2xldHRlci1zZWN0aW9uX19oZWFkaW5nIHtcbiAgICAgICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG8gNGVtIGF1dG87XG4gICAgfSBcblxuICAgIC5uZXdzbGV0dGVyX19pbnB1dCB7XG4gICAgXG4gICAgICAgIGlucHV0W25hbWU9XCJlbWFpbFwiXSB7XG4gICAgICAgICAgICB3aWR0aDogNDAlO1xuICAgICAgICAgICAgbWFyZ2luOiAuMjVlbSBhdXRvIDAgYXV0bztcbiAgICAgICAgfVxuXG4gICAgICAgIC5mb3JtX19jb25zZW50IHtcbiAgICAgICAgICAgIHdpZHRoOiA0MCU7XG4gICAgICAgICAgICBidXR0b24ge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLmZvcm1fX2NvbnNlbnQtY29udGFpbmVyIHtcbiAgICAgICAgICAgICAgICAuY2hlY2tib3gtY29udGFpbmVyIHtcbiAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLmNoZWNrYm94LWN1c3RvbSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAtMjI1cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICB0b3A6IC00NXB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICB9XG5cbiAgICB9XG59IiwiZm9vdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiAkb3RoZXJCbGFjaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogNGVtIDJlbSAuNWVtIDJlbTtcblxuICAgIGgzIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICBtYXJnaW46IDAgMCAuNWVtIDA7XG4gICAgfVxuXG4gICAgaHIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICAgICAgd2lkdGg6IDcwJTtcbiAgICAgICAgaGVpZ2h0OiAycHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgICB9XG59XG5cbi5mb290ZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZvb3Rlcl9fc29jaWFsLW1lZGlhIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG5cbiAgICBhICsgYSB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyZW07XG4gICAgfVxufVxuXG4uZm9vdGVyX19mYXEge1xuICAgIG1hcmdpbi1ib3R0b206IDRlbTtcbn1cblxuLmZvb3Rlcl9fbGVnYWwge1xuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgIHVsIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICAgIH1cblxuICAgIHVsIGxpIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgfVxufVxuXG4uZm9vdGVyX19hZGRyZXNzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAzZW07XG5cbiAgICBpbWcge1xuICAgICAgICB3aWR0aDogNTUlO1xuICAgIH1cblxuICAgIGFkZHJlc3Mge1xuICAgICAgICB3aWR0aDogMjAwcHg7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICB9XG59XG5cbi5mb290ZXJfX2NvcHlyaWdodCxcbi5mb290ZXJfX3Byb21vLWxpbmsge1xuICAgIGZvbnQtc2l6ZTogLjc1cmVtO1xufVxuXG4uZm9vdGVyX19jb3B5cmlnaHQge1xuICAgIG1hcmdpbi1ib3R0b206IC41ZW07XG59XG5cbi5mb290ZXJfX3Byb21vLWxpbmsge1xuICAgIGNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICBvcGFjaXR5OiAxO1xufVxuXG4vL21lZGlhIHF1ZXJpZXNcblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTY3cHgpe1xuICAgIC5mb290ZXJfX2FkZHJlc3Mge1xuICAgICAgICBpbWcge1xuICAgICAgICAgICAgd2lkdGg6IDQwJTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpe1xuICAgIFxuICAgIGZvb3RlciB7XG4gICAgICAgIGhyIHtcbiAgICAgICAgICAgIHdpZHRoOiAyMDBweDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5mb290ZXIge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIH1cblxuICAgIC5mb290ZXJfX3NvY2lhbC1tZWRpYSB7XG4gICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgIG9yZGVyOiAxO1xuICAgIH1cblxuICAgIC5mb290ZXJfX2ZhcSB7XG4gICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgIG9yZGVyOiAyO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gICAgfVxuXG4gICAgLmZvb3Rlcl9fYWRkcmVzcyB7XG4gICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgIG9yZGVyOiAzO1xuXG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICB3aWR0aDogMjUlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLmZvb3Rlcl9fbGVnYWwge1xuICAgICAgICBvcmRlcjogNDtcbiAgICAgICAgd2lkdGg6IDUwJTtcbiAgICB9XG5cbiAgICAuZm9vdGVyX19jb3B5cmlnaHQge1xuICAgICAgICBvcmRlcjogNTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgLmZvb3Rlcl9fcHJvbW8tbGluayB7XG4gICAgICAgIG9yZGVyOiA2O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCl7XG4gICAgXG4gICAgLy9uYXYtdXAgYnRuXG5cbiAgICAubmF2LXVwIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW5ZZWxsb3c7XG4gICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICBoZWlnaHQ6IDUwcHg7XG4gICAgICAgIG9wYWNpdHk6IC43O1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICB0b3A6IDE1JTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5uYXYtdXAtZmlndXJlIHtcbiAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IDIwJTtcbiAgICAgICAgdG9wOiAtMTAlO1xuICAgIFxuICAgICAgICBib3JkZXItdG9wOiAxNXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItcmlnaHQ6IDE1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1ib3R0b206MjVweCBzb2xpZCAjMDMwMzAzO1xuICAgICAgICBib3JkZXItbGVmdDogMTVweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAubmF2LXVwOmhvdmVye1xuICAgICAgICBvcGFjaXR5OiAuODtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW5PcmFuZ2U7XG4gICAgICAgIH1cbn0iXX0= */