/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
  margin: 0; /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type=button],
input[type=reset],
input[type=submit] {
  -webkit-appearance: button; /* 2 */
  cursor: pointer; /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type=checkbox],
input[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type=search] {
  -webkit-appearance: textfield; /* 1 */ /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* MEDIA QUERY MIXINS - START*/
/* MEDIA QUERY MIXINS - END*/
* {
  padding: 0;
  border: 0;
  box-sizing: border-box;
}

html {
  height: 100%;
  scroll-behavior: smooth;
}

body {
  width: 100%;
  height: 100%;
  font-family: "Montserrat", sans-serif;
  font-weight: 400;
  background-color: #010101;
  color: #ffffc0;
  display: flex;
  flex-direction: column;
}
body .page-content {
  flex-grow: 1;
}

a {
  text-decoration: none;
  color: #ffffc0;
}

img {
  width: 100%;
  max-width: 100%;
  height: auto;
}

ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

h3 {
  line-height: 1.75;
}

p {
  line-height: 1.5;
}

.text-emphasis {
  font-style: italic;
}

.antispm {
  display: none;
}

noscript::before {
  content: "Om deze website te bezoeken moet je webbrowser JavaScript ondersteunen en toestaan.";
  font-style: italic;
  font-weight: bolder;
  font-size: 1.25rem;
  text-align: center;
  color: #f35000;
  background-color: #010101;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  padding: 1em 0;
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
@keyframes moveArrow {
  25% {
    opacity: 0.85;
  }
  33.3% {
    opacity: 1;
    transform: translateY(2.28rem);
  }
  66.6% {
    opacity: 1;
    transform: translateY(3.12rem);
  }
  100% {
    opacity: 0;
    transform: translateY(4.8rem) scale(0.5);
  }
}
.timeline {
  padding: 2em 1em;
}
@media (min-width: 425px) {
  .timeline {
    padding: 2em 2em;
  }
}
@media (min-width: 768px) {
  .timeline {
    padding: 8em 2em;
  }
}
.timeline__intro {
  margin: 0 0 4em 0;
}
@media (min-width: 768px) {
  .timeline__intro {
    max-width: 55ch;
    margin: 0 auto 4em;
  }
}
.timeline__intro__title {
  color: #f35000;
  text-transform: capitalize;
  text-align: center;
  margin-bottom: 1em;
}
.timeline__menu-container {
  margin-bottom: 4em;
}
@media (min-width: 576px) {
  .timeline__menu-container {
    max-width: 21em;
    margin: 0 auto 4em;
  }
}
.timeline__menu {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: #555;
  border-radius: 5px;
  padding: 1em;
  margin: 0;
}
.timeline__menu__item {
  width: 100%;
  background-color: #202020;
  margin-bottom: 0.5em;
}
.timeline__menu__item__link {
  display: block;
  text-align: center;
  transition: all 0.5s ease-in-out;
  padding: 1em 1.5em;
}
.timeline__menu__item__link:hover {
  background-color: #ffffc0;
  color: #202020;
}
.timeline__content-container {
  position: relative;
}
.timeline__content-container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 10px;
  width: 0.375em;
  height: 99.6%;
  background-color: #f35000;
  border-radius: 1em;
}
@media (min-width: 1024px) {
  .timeline__content-container::before {
    left: 50%;
    transform: translateX(-50%);
  }
}
.timeline__item {
  position: relative;
  opacity: 0;
  transition: opacity 0.35s ease-in;
  padding: 1.5em 0 0 1.5em;
  margin: 0 auto 4em;
}
.timeline__item--reveal {
  opacity: 1;
}
.timeline__item::before {
  content: "";
  position: absolute;
  left: 2.5px;
  top: 1.5em;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: #feea00;
}
@media (min-width: 1024px) {
  .timeline__item--left {
    right: 50%;
    transform: translateX(50%);
    width: 50%;
    padding: 1.5em 1.5em 0 0;
  }
  .timeline__item--left::before {
    width: 27px;
    height: 27px;
    left: unset;
    right: -0.825em;
  }
}
@media (min-width: 1024px) {
  .timeline__item--right {
    left: 50%;
    transform: translateX(-50%);
    width: 50%;
  }
  .timeline__item--right::before {
    width: 27px;
    height: 27px;
    left: -0.825em;
  }
}
.timeline__item__scroll-up {
  position: absolute;
  bottom: 0;
  right: 0;
  margin: 0 0.25em 0.25em 0;
}
@media (min-width: 768px) {
  .timeline__item__scroll-up {
    right: 50%;
    transform: translateX(50%);
    margin: 0 0 0.5em 0;
  }
}
.timeline__item__scroll-up a {
  color: #555;
}
.timeline__item__content-container {
  background-color: #f6efeb;
  color: #2a2a2a;
  border-radius: 0.5em;
  padding: 0.5em;
}
@media (min-width: 768px) {
  .timeline__item__content-container {
    padding: 2em;
  }
}
.timeline__item__title {
  text-align: center;
  text-transform: capitalize;
}
.timeline__item__blockquote {
  font-style: italic;
  line-height: 1.5;
  margin: 0;
}
.timeline__item__blockquote:first-of-type {
  margin-bottom: 0.5em;
}
.timeline__item__image {
  display: block;
}
@media (min-width: 768px) {
  .timeline__item__image {
    width: 82%;
    margin: 0 auto;
  }
}
@media (min-width: 768px) {
  .timeline__credits {
    max-width: 55ch;
    margin: 0 auto 4em;
  }
}
.timeline__credits__title {
  text-align: center;
}

.products {
  padding: 2em 1em;
}
@media (min-width: 425px) {
  .products {
    padding: 2em 2em;
  }
}
@media (min-width: 768px) {
  .products {
    padding: 8em 2em;
  }
}
.products__intro {
  margin-bottom: 2em;
}
@media (min-width: 768px) {
  .products__intro {
    max-width: 75ch;
    margin: 0 auto 2em;
  }
}
.products__intro__title {
  text-align: center;
  margin-bottom: 1em;
}
.products__intro__image-container {
  padding: 1em 0;
}
@media (min-width: 425px) {
  .products__intro__image-container {
    max-width: 21em;
    margin: 0 auto;
  }
}
@media (min-width: 768px) {
  .products__intro__image-container {
    display: flex;
    flex-direction: row;
    justify-content: center;
    max-width: 66%;
  }
}
.products__intro__image {
  border-radius: 0.3125em;
}
@media (min-width: 768px) {
  .products__contact-container {
    max-width: 55ch;
    margin: 0 auto;
  }
}
.products__contact__divider {
  background-color: #f35000;
  height: 0.1875em;
  width: 33%;
  margin-bottom: 2em;
}
.products__contact__text:last-of-type {
  margin-bottom: 2em;
}

.location {
  padding: 2em 1em;
}
@media (min-width: 576px) {
  .location {
    padding: 2em 2em;
  }
}
@media (min-width: 768px) {
  .location {
    padding: 8em 2em;
  }
}
.location__content-container {
  margin-bottom: 4em;
}
@media (min-width: 768px) {
  .location__intro {
    max-width: 55ch;
    margin: 0 auto;
  }
}
.location__intro__socials-insert {
  margin: 0 auto 4em;
}
.location__title {
  font-size: 1.5em;
  text-transform: capitalize;
  text-align: center;
  margin-bottom: 1em;
}
.location__section-title {
  text-transform: capitalize;
  text-align: center;
  font-size: 1.25em;
  margin-bottom: 1em;
}
.location__btn {
  display: block;
  width: 12em;
  margin: 0 auto;
  text-transform: capitalize;
}
.location__map-container {
  text-align: center;
  margin: 0 auto 6em auto;
}
.location__map {
  width: 100%;
  min-width: 250px;
  height: 100%;
  min-height: 500px;
  border: 2px solid #f35000;
  color: #f35000;
}

.contact__content-container {
  padding: 2em 1em;
}
@media (min-width: 425px) {
  .contact__content-container {
    padding: 2em 2em;
  }
}
@media (min-width: 768px) {
  .contact__content-container {
    padding: 8em 2em;
  }
}
.contact__intro {
  margin-bottom: 4em;
}
@media (min-width: 768px) {
  .contact__intro {
    max-width: 75ch;
    margin: 0 auto 4em;
  }
}
.contact__intro__title {
  font-size: 1.5em;
  text-align: center;
  margin-bottom: 2em;
}
.contact__intro__text__link > a {
  color: #f35000;
}
.contact__form {
  width: 100%;
  margin: 0 auto 4em;
}
.contact__form__anti-spam {
  display: none;
}
.contact__form__content-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  color: #2a2a2a;
}
.contact__form__input-container {
  display: flex;
  flex-direction: column;
  margin-bottom: 2em;
  width: 100%;
}
@media (min-width: 768px) {
  .contact__form__input-container {
    max-width: 55ch;
    margin: 0 auto 2em;
  }
}
.contact__form__label {
  text-transform: uppercase;
  font-weight: 600;
  color: #ffffc0;
  margin-bottom: 1em;
}
.contact__form__label::after {
  content: "*";
  color: #f35000;
  padding-left: 0.5em;
  font-size: 0.75rem;
}
.contact__form__label[for=subject]::after {
  display: none;
}
.contact__form__input, .contact__form__select, .contact__form__textarea {
  background-color: #f6efeb;
  padding: 1em;
}
.contact__form__input:focus-within, .contact__form__select:focus-within, .contact__form__textarea:focus-within {
  outline: #feea00 0.1875em solid;
}
.contact__form__input, .contact__form__select {
  max-width: 21em;
}
.contact__form__select {
  text-transform: capitalize;
}
.contact__form__select:hover {
  cursor: pointer;
}
@media (min-width: 768px) {
  .contact__form__consent-container {
    max-width: 55ch;
    margin: 0 auto 2em;
  }
}
.contact__form__consent-text > a {
  color: #f35000;
}
.contact__form__submit-container {
  padding: 1em;
}
.contact__form__btn {
  position: relative;
  top: -0.1875em;
  font-weight: 700;
  font-size: 1em;
  text-transform: uppercase;
  color: #f6efeb;
  margin-left: 4em;
}
.contact__form__btn[disabled] {
  opacity: 0.7;
}

.policy {
  padding: 2em 1em;
}
@media (min-width: 576px) {
  .policy {
    padding: 2em 2em;
  }
}
@media (min-width: 768px) {
  .policy {
    padding: 8em 2em;
  }
}
.policy__content-container {
  width: 100%;
}
@media (min-width: 576px) {
  .policy__content-container {
    max-width: 55ch;
    margin: 0 auto;
  }
}
.policy__title {
  font-size: 1.5em;
}
.policy__section-title {
  font-size: 1.25em;
}

.error {
  padding: 8em 1em;
}
@media (min-width: 576px) {
  .error {
    padding: 8em 2em;
  }
}
@media (min-width: 768px) {
  .error {
    padding: 16em 2em;
  }
}
.error__content-container {
  min-height: 66vh;
  text-align: center;
}
@media (min-width: 768px) {
  .error__content-container {
    max-width: 55ch;
    margin: 0 auto;
  }
}
.error__msg {
  font-size: 1.5em;
  text-align: center;
  margin-bottom: 2em;
}
.error__status {
  font-size: 1.25em;
  text-align: center;
  margin-bottom: 2em;
}
.error__btn {
  display: block;
  width: 12em;
  padding: 1em 1.5em !important;
  margin: 0 auto;
}

@media screen and (min-width: 1200px) {
  .wrapper {
    max-width: 1200px;
    margin: 0 auto;
  }
}

.modal {
  display: none;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 4;
  background-color: #7a2800;
  opacity: 0.99;
  overflow-y: auto;
}
.modal--show {
  display: block;
}
.modal__content-container {
  width: 100%;
  height: 100%;
  font-size: 20px;
  padding: 2em;
}
.modal__heading {
  text-align: center;
}
.modal__heading__img-container {
  margin-bottom: 2em;
}
@media (min-width: 425px) {
  .modal__heading__img {
    max-width: 66%;
  }
}
@media (min-width: 768px) {
  .modal__heading__img {
    max-width: 33%;
  }
}
.modal__heading__text-container {
  max-width: 55ch;
  margin: 0 auto 2em;
}
.modal__heading__text {
  line-height: 1.5;
}
.modal__form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.modal__form__instruction {
  font-size: 18px;
  color: #feea00;
}
.modal__form__input-group {
  display: flex;
  flex-direction: column;
}
@media (min-width: 768px) {
  .modal__form__input-group {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin-bottom: 2em;
  }
}
.modal__form__input-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 18px;
  margin-bottom: 0.5em;
}
@media (min-width: 768px) {
  .modal__form__input-container {
    margin-right: 0.5em;
  }
}
.modal__form__input-container:last-of-type {
  margin-bottom: 1.5em;
}
@media (min-width: 768px) {
  .modal__form__input-container:last-of-type {
    margin-bottom: 0.5em;
    margin-right: 0;
  }
}
.modal__form__input-container input {
  width: 3em;
  text-align: center;
  color: #feea00;
  background-color: unset;
  border-bottom: 1px #feea00 solid;
}
.modal__form__btn {
  width: 100%;
  margin-bottom: 2em;
}
@media (min-width: 425px) {
  .modal__form__btn {
    max-width: 66%;
  }
}
@media (min-width: 768px) {
  .modal__form__btn {
    max-width: 33%;
  }
}
@media (min-width: 1920px) {
  .modal__form__btn {
    max-width: 18%;
  }
}

.cookie-consent {
  display: none;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 6;
  width: 100%;
  padding: 2em 1em;
  background-color: #010101;
  border-radius: 5px 5px 0 0;
}
.cookie-consent--show {
  display: flex;
}
.cookie-consent__btn-container {
  display: flex;
  flex-direction: column;
}
@media (min-width: 768px) {
  .cookie-consent__btn-container {
    flex-direction: row;
    flex-flow: row-reverse;
  }
}
.cookie-consent__btn {
  width: 12em;
  margin-bottom: 1em;
}
@media (min-width: 768px) {
  .cookie-consent__btn {
    margin: 0 1em 0 0;
  }
}

.btn {
  text-align: center;
  letter-spacing: 1px;
  background-color: #7a2800;
  border-radius: 5px;
  box-shadow: 2px 2px 2px 0 rgba(0, 0, 0, 0.25);
  transition: all ease-in 0.3s;
  padding: 0.5em 1em;
}
.btn--outline {
  background-color: unset;
  border: 1px #ffffc0 solid;
}
.btn--light {
  background-color: #ffffc0;
  color: #7a2800;
}
.btn:hover {
  cursor: pointer;
}

.heading {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  margin-bottom: 2em;
}
.heading i {
  color: #feea00;
}
.heading h2,
.heading h3 {
  color: #2a2a2a;
}
.heading h3 {
  font-size: 1.1rem;
  font-weight: 300;
  margin: 0 0 0.5em 0;
}
.heading hr {
  width: 50%;
  height: 2px;
  background: #f35000;
}

.flash {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 7;
  width: 100%;
  animation: fadeOut 5s 2s forwards;
}
.flash__content-container {
  width: 95%;
  text-align: center;
  color: #2a2a2a;
  font-weight: 700;
  font-size: 18px;
  background-color: #fff9f6;
  border-radius: 5px;
  padding: 1em 2em;
  margin: 0.5em auto 0;
}
@media (min-width: 1024px) {
  .flash__content-container {
    max-width: 66%;
  }
}
@media (min-width: 1920px) {
  .flash__content-container {
    max-width: 33%;
  }
}
.flash__content-container--alert {
  background-color: rgba(255, 0, 0, 0.95);
  color: #fff;
}
.flash--hide {
  display: none;
}
.flash--alert {
  display: none;
}
.flash--alert--show {
  display: block;
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
/* 
  ### NOTE ###
  This is the base menu
*/
.menu {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  font-size: 0.75em;
}
@media (min-width: 768px) {
  .menu {
    justify-content: flex-end;
    font-size: 1em;
  }
}
.menu__item {
  min-width: 33px;
  margin-right: 1em;
  transition: transform 0.3s ease-in;
}
@media (min-width: 768px) {
  .menu__item {
    margin-right: 2em;
  }
}
.menu__item:last-child {
  margin-right: 0;
}
.menu__item--icon-only {
  align-self: center;
}
.menu__item__link-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
@media (min-width: 768px) {
  .menu__item__link-container {
    flex-direction: row-reverse;
    justify-content: flex-start;
  }
  .menu__item__link-container:hover {
    color: #feea00;
  }
}
.menu__item__text {
  text-align: center;
  text-transform: capitalize;
  margin: 0.5em auto 0;
}
@media (min-width: 768px) {
  .menu__item__text {
    margin: 0.5em 0.5em 0 0;
  }
}
.menu__item__btn {
  background-color: unset;
  color: #ffffc0;
}

/* 
  ### NOTE ###
  This is the menu that pops-up when toggling the dotted menu link in the base menu. It is positioned relative to the navbar element in the header section
*/
.menu-pop-up {
  display: none;
  position: absolute;
  top: 0;
  right: 0;
  transform: translate(-15%, -93%);
  background-color: #555;
  border-radius: 5px;
  padding: 1em 0.5em;
}
@media (min-width: 768px) {
  .menu-pop-up {
    top: unset;
    bottom: 0;
    transform: translate(-33%, 96%);
  }
}
.menu-pop-up--active {
  display: block;
  animation: fade-in 500ms forwards;
}
.menu-pop-up--closing {
  animation: fade-out 500ms forwards;
}
.menu-pop-up__item {
  padding: 1em;
}
.menu-pop-up__item:hover {
  background-color: #202020;
  border-radius: 5px;
}
.menu-pop-up__item--disabled {
  pointer-events: none;
}
.menu-pop-up__item--disabled a {
  color: grey;
}
.menu-pop-up__item__link-container {
  display: flex;
  flex-direction: row-reverse;
  justify-content: flex-start;
  align-items: center;
}
.menu-pop-up__item__text {
  text-align: right;
  text-transform: capitalize;
  margin: 0 1em 0 0;
}

.scroll-down-icon {
  display: none;
  position: absolute;
  bottom: 25%;
  left: 50%;
  opacity: 0;
  animation: moveArrow 3s ease-out infinite;
}
.scroll-down-icon--active {
  display: block;
}

.socials-insert {
  width: 15em;
}
.socials-insert__divider {
  width: 50%;
  height: 0.125em;
  background-color: #f35000;
  margin-bottom: 1em;
}
.socials-insert__link-container {
  width: 50%;
  display: flex;
  justify-content: space-evenly;
  margin: 0 auto;
}
.custom-checkbox {
  position: relative;
}
.custom-checkbox__input {
  /* 
      we use the functionality of the input element but the styling is entirely done with the span element below 
  */
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0;
  cursor: pointer;
}
.custom-checkbox__input:checked ~ span {
  background-color: #555;
}
.custom-checkbox__input:checked ~ span::after {
  display: block;
}
.custom-checkbox__span {
  display: block;
  position: absolute;
  height: 1.875em;
  width: 1.875em;
  background-color: #fff9f6;
  border: 0.1875em solid #feea00;
  margin: 0 auto;
}
.custom-checkbox__span:hover {
  background-color: #555;
  cursor: pointer;
}
.custom-checkbox__span::after {
  display: none;
  content: "";
  position: absolute;
  top: 0.25em;
  left: 0.4375em;
  width: 0.3125em;
  height: 0.625em;
  border: solid #fff9f6;
  border-width: 0 0.25em 0.25em 0;
  /* border-radius: 8px; */
  transform: rotate(45deg);
}

.logo-on-mobile {
  width: 15%;
  max-width: 3em;
  margin: 0 auto 2em;
}
@media (min-width: 768px) {
  .logo-on-mobile {
    display: none;
  }
}
.logo-on-mobile__image {
  border-radius: 0.3125em;
  opacity: 0.6;
}

.snow-toggle {
  display: none;
}
.snow-toggle--show {
  display: block;
}
.snow-toggle__checkbox {
  height: 0;
  width: 0;
  visibility: hidden;
}
.snow-toggle__checkbox:checked + label {
  background: #7a2800;
}
.snow-toggle__checkbox:checked + label::after {
  left: calc(100% - 2px);
  transform: translateX(-100%);
}
.snow-toggle__label {
  position: relative;
  display: block;
  text-indent: -9999px;
  cursor: pointer;
  width: 40px;
  height: 20px;
  background: #202020;
  border-radius: 20px;
}
.snow-toggle__label:active::after {
  width: 22px;
}
.snow-toggle__label::after {
  content: "";
  position: absolute;
  top: 2px;
  left: 2px;
  width: 16px;
  height: 16px;
  background: #ffffc0;
  border-radius: 16px;
  transition: 0.3s;
}

.testimonial {
  background-color: #f6efeb;
  color: #2a2a2a;
  padding: 4em 1em;
}
@media (min-width: 576px) {
  .testimonial {
    padding: 4em 2em;
  }
}
.testimonial__heading {
  margin-bottom: 4em !important;
}
.testimonial__heading hr {
  width: 50%;
}
.testimonial__content-container {
  text-align: center;
  transition: opacity ease-in-out 0.3s;
}
@media (min-width: 768px) {
  .testimonial__content-container {
    display: flex;
  }
}
.testimonial__quote {
  margin-bottom: 4em;
}
@media (min-width: 768px) {
  .testimonial__quote {
    flex: 0 0 50%;
  }
}
.testimonial__quote__text {
  text-align: left;
  line-height: 1.75;
  padding: 1em 0;
}
@media (min-width: 768px) {
  .testimonial__quote__text {
    padding: 1em 1.5em;
    max-width: 55ch;
    margin: 0 auto;
  }
}
.testimonial__quote__author {
  display: flex;
  justify-content: flex-start;
  text-align: left;
  color: #f35000;
}
@media (min-width: 768px) {
  .testimonial__quote__author {
    justify-content: center;
  }
}
.testimonial__quote__author i.fa-angle-right {
  color: #feea00;
  margin-right: 0.5em;
}

@media screen and (min-width: 768px) {
  .testimonial__content {
    display: flex;
    padding-right: 0;
    padding-left: 4em;
  }
  .testimonial__container {
    flex: 1;
  }
  .testimonial__container + .testimonial__container {
    margin-left: 1em;
  }
  .testimonial__container {
    display: flex;
    flex-wrap: wrap;
  }
  .testimonial__container i {
    margin-right: 0.5em;
  }
  .testimonial__container p.quote {
    width: 70%;
    padding-top: 0;
    margin: 0;
    font-size: 1rem;
  }
  .testimonial__container p.author {
    display: flex;
    margin-left: 4em;
    margin-top: 0;
    text-align: left;
  }
}
/*
    #########
    DEV NOTES
    #########

- mobile first approach
- landing class gets added through js on homepage only
- the navbar has two menu components: see _menu.scss & menu-pop-up.scss
*/
.header {
  position: fixed;
  bottom: 0;
  z-index: 3;
  width: 100%;
  background-color: #7a2800;
  border-top: 2px solid #feea00;
}
@media (min-width: 768px) {
  .header {
    bottom: unset;
    top: 0;
    background-color: rgba(0, 0, 0, 0.66);
    border-top: unset;
  }
}
@media (min-width: 768px) {
  .header__content-container {
    display: flex;
  }
}
.header__logo-container {
  display: none;
}
@media (min-width: 768px) {
  .header__logo-container {
    display: block;
    flex: 0 0 20%;
    text-align: center;
    padding: 0.5em 2em;
  }
}
.header__logo {
  width: 66%;
}
.header__logo--hide {
  display: none;
}
.header__navbar {
  position: relative;
  width: 100%;
  padding: 1em 2em 0.5em 2em;
}
@media (min-width: 768px) {
  .header__navbar {
    width: unset;
    flex: 1;
    padding: 1em 2em 1em 2em;
  }
}
.header__navbar--js-small {
  padding: 0.25em 1em;
}
.header__navbar__snow-toggle {
  display: flex;
  justify-content: center;
  margin: 1em 0 0 1em;
}
.header__navbar__snow-toggle__text {
  margin-right: 1em;
}

.hero {
  height: calc(var(--vh, 1vh) * 100);
  overflow: hidden;
}
.hero__content-container {
  position: relative;
  height: calc(var(--innerHeight) - var(--menuHeight));
}
@media (min-width: 576px) {
  .hero__content-container {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    flex-direction: row;
    padding: 2em;
  }
}
.hero__cta {
  width: 100%;
  text-align: center;
  color: #ffffc0;
  padding: 2em 2em 0 2em;
}
@media (min-width: 576px) {
  .hero__cta {
    width: 50%;
  }
}
.hero__cta__logo {
  max-width: 45%;
  margin-bottom: 1em;
}
.hero__cta__heading {
  display: block;
}
.hero__cta__heading--hide {
  display: none;
}
@media (min-width: 576px) {
  .hero__cta__heading {
    margin-bottom: 2em;
  }
}
.hero__cta__heading__title {
  font-size: 1.5em;
  color: #feea00;
}
@media (min-width: 1024px) {
  .hero__cta__heading__title {
    font-size: 2em;
  }
}
.hero__cta__heading__subtitle {
  font-size: 1em;
  color: #d8d8d8;
  font-style: italic;
}
@media (min-width: 1024px) {
  .hero__cta__heading__subtitle {
    font-size: 1.5em;
  }
}
.hero__cta__btn {
  display: none;
}
@media (min-width: 576px) {
  .hero__cta__btn {
    display: block;
    max-width: 12em;
    margin: 0 auto;
  }
}
.hero__brand-image-container {
  text-align: center;
}
@media (min-width: 576px) {
  .hero__brand-image-container {
    width: 50%;
  }
}
.hero__brand-image {
  display: block;
  margin: 0 auto;
  width: 66%;
}
@media (min-width: 576px) {
  .hero__brand-image {
    width: 100%;
  }
}
@media (min-width: 1024px) {
  .hero__brand-image {
    width: 66%;
  }
}

.link-section {
  background-color: #fff9f6;
  padding: 4em 1em;
}
@media (min-width: 425px) {
  .link-section {
    padding: 4em 2em;
  }
}
.link-section__content-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
@media (min-width: 1024px) {
  .link-section__content-container {
    flex-direction: row;
    justify-content: space-around;
  }
}
.link-section__link {
  flex: 1;
  opacity: 1;
  box-shadow: 2px 2px 2px 0 rgba(0, 0, 0, 0.25);
  border-radius: 9px;
  transition: all 0.3s ease-in;
}
@media (min-width: 1024px) {
  .link-section__link {
    max-width: 40%;
  }
}
.link-section__link:first-of-type {
  margin-bottom: 4em;
}
@media (min-width: 1024px) {
  .link-section__link:first-of-type {
    margin-bottom: 0;
  }
}
.link-section__link:hover {
  cursor: pointer;
  box-shadow: 2px 2px 2px 0 #f35000;
}
.link-section__link__content {
  padding: 0 1em;
}
@media (min-width: 576px) {
  .link-section__link__content {
    padding: 0 2em;
  }
}

.history {
  background-color: #f6efeb;
}
.history__content-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 4em 1em;
  margin: 0 auto;
}
@media (min-width: 425px) {
  .history__content-container {
    padding: 4em 2em;
  }
}
@media (min-width: 1024px) {
  .history__content-container {
    flex-direction: row;
    justify-content: space-evenly;
    align-items: flex-start;
  }
}
.history__heading {
  padding: 0 1em;
}
@media (min-width: 576px) {
  .history__heading {
    padding: 0 2em;
  }
}
.history__image-container {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  text-align: center;
}
.history__image-container figure {
  margin: 0;
}
.history__image-container figure:first-of-type {
  margin-bottom: 2em;
}
.history__image-container figure img {
  border-radius: 9px;
}
@media (min-width: 1024px) {
  .history__image-container figure img {
    width: 63%;
  }
}
@media (min-width: 1920px) {
  .history__image-container figure img {
    width: 57%;
  }
}

.newsletter {
  background-color: #fff9f6;
  padding: 4em 1em;
}
.newsletter__content-container {
  padding: 4em 1em;
}
@media (min-width: 425px) {
  .newsletter__content-container {
    padding: 4em 2em;
  }
}
@media (min-width: 768px) {
  .newsletter__content-container {
    max-width: 66%;
    margin: 0 auto;
  }
}
.newsletter__input-container {
  width: 100%;
}
@media (min-width: 768px) {
  .newsletter__input-container {
    max-width: 54%;
    margin: 0 auto;
  }
}
.newsletter__form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.newsletter__form__input-email {
  width: 80%;
  font-size: 1rem;
  color: #2a2a2a;
  background-color: #f6efeb;
  border: #f35000 1px solid;
  padding: 1em;
  margin-bottom: 0.5em;
}
.newsletter__form__input-email::-moz-placeholder {
  color: #2a2a2a;
}
.newsletter__form__input-email::placeholder {
  color: #2a2a2a;
}
.newsletter__form__input-email:focus-within {
  outline: #f35000 1px solid;
}
.newsletter__form__consent-container {
  width: 80%;
  color: #2a2a2a;
  font-size: 1rem;
  line-height: 1.75;
  text-align: center;
}
.newsletter__form__consent-text {
  text-align: center;
  margin-bottom: 2em;
}
.newsletter__form__consent-text a {
  color: #f35000;
  text-decoration: underline;
}
.newsletter__form__btn {
  text-transform: uppercase;
  color: #ffffff;
  background-color: #7a2800;
  border: 0.125em solid #7a2800;
}
.newsletter__form__btn:disabled {
  opacity: 0.5;
}
.newsletter__form__btn:hover {
  background-color: #f6efeb;
  color: #2a2a2a;
}

.footer {
  position: relative;
  background: #202020;
  border-top: 4px #feea00 solid;
}
.footer__content-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: 8em 2em 8em 2em;
  /* 
      extra padding on bottom to create space for fixed header 
      bottom menu on mobile devices
  */
}
@media (min-width: 576px) {
  .footer__content-container {
    flex-direction: row;
    flex-wrap: wrap;
  }
}
@media (min-width: 768px) {
  .footer__content-container {
    padding: 8em 2em 1em 2em;
  }
}
.footer h3 {
  font-size: 1.25rem;
  font-weight: 300;
  margin: 0 0 0.5em 0;
}
.footer hr {
  width: 70%;
  height: 2px;
  background-color: #f35000;
  margin-bottom: 2em;
}
.footer__social-media {
  margin-bottom: 4em;
}
.footer__social-media a + a {
  margin-left: 2em;
}
@media (min-width: 576px) {
  .footer__social-media {
    width: 50%;
  }
}
.footer__contact {
  margin-bottom: 4em;
}
@media (min-width: 576px) {
  .footer__contact {
    width: 50%;
    margin-bottom: 0.5em;
  }
}
.footer__legal-links {
  margin-bottom: 4em;
}
.footer__legal-links ul li {
  text-align: center;
  margin-bottom: 1em;
}
.footer__legal-links ul li a {
  text-decoration: underline;
}
@media (min-width: 576px) {
  .footer__legal-links {
    width: 100%;
    margin-top: 2em;
  }
}
.footer__address {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-bottom: 4em;
}
.footer__address img {
  width: 55%;
}
@media (min-width: 576px) {
  .footer__address img {
    width: 40%;
  }
}
@media (min-width: 1024px) {
  .footer__address img {
    width: 33%;
  }
}
.footer__address address {
  width: 200px;
  margin: 0;
}
.footer__copyright {
  font-size: 0.75rem;
}
.footer__copyright hr {
  background-color: #ffffc0;
}
@media (min-width: 576px) {
  .footer__copyright hr {
    width: 95%;
  }
}
@media (min-width: 576px) {
  .footer__copyright {
    width: 100%;
  }
}
.footer__credits {
  font-size: 0.75rem;
  color: #f35000;
}
.footer__credits p {
  margin-bottom: 0;
}
@media (min-width: 576px) {
  .footer__credits {
    width: 100%;
  }
}
.footer__nav-up {
  display: none;
  position: absolute;
  left: 50%;
  top: 15%;
  transform: translateX(-50%);
}
@media (min-width: 1024px) {
  .footer__nav-up {
    display: block;
  }
}
.footer__nav-up__container {
  position: relative;
  width: 50px;
  height: 50px;
  opacity: 0.7;
  background-color: #feea00;
  border-radius: 50%;
  transition: all 0.5s ease-in-out;
}
.footer__nav-up__container:hover {
  opacity: 0.8;
  transform: scale(1.0125);
  background-color: #f35000;
}
.footer__nav-up__figure {
  position: absolute;
  left: 20%;
  top: -10%;
  border-top: 15px solid transparent;
  border-right: 15px solid transparent;
  border-bottom: 25px solid #030303;
  border-left: 15px solid transparent;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuc2Nzcy9ub3JtYWxpemUuc2NzcyIsIm1haW4uY3NzIiwibW9kdWxlcy9fbWl4aW5zLnNjc3MiLCJtb2R1bGVzL19nbG9iYWwuc2NzcyIsIm1vZHVsZXMvX3ZhcmlhYmxlcy5zY3NzIiwibW9kdWxlcy9fYW5pbWF0aW9ucy5zY3NzIiwibW9kdWxlcy9fcGFnZS1oaXN0b3J5LnNjc3MiLCJtb2R1bGVzL19wYWdlLWluZm8uc2NzcyIsIm1vZHVsZXMvX3BhZ2UtbG9jYXRpb24uc2NzcyIsIm1vZHVsZXMvX3BhZ2UtY29udGFjdC5zY3NzIiwibW9kdWxlcy9fcGFnZS1wb2xpY3kuc2NzcyIsIm1vZHVsZXMvX3BhZ2UtZXJyb3Iuc2NzcyIsIm1vZHVsZXMvX3dyYXBwZXIuc2NzcyIsIm1vZHVsZXMvY29tcG9uZW50cy9fbW9kYWwuc2NzcyIsIm1vZHVsZXMvY29tcG9uZW50cy9fY29va2llLWNvbnNlbnQuc2NzcyIsIm1vZHVsZXMvY29tcG9uZW50cy9fYnRucy5zY3NzIiwibW9kdWxlcy9jb21wb25lbnRzL19oZWFkaW5nLnNjc3MiLCJtb2R1bGVzL2NvbXBvbmVudHMvX2FsZXJ0LW1zZy5zY3NzIiwibW9kdWxlcy9jb21wb25lbnRzL19tZW51LnNjc3MiLCJtb2R1bGVzL2NvbXBvbmVudHMvX21lbnUtcG9wLXVwLnNjc3MiLCJtb2R1bGVzL2NvbXBvbmVudHMvX3Njcm9sbC1kb3duLWljb24uc2NzcyIsIm1vZHVsZXMvY29tcG9uZW50cy9fc29jaWFscy1pbnNlcnQuc2NzcyIsIm1vZHVsZXMvY29tcG9uZW50cy9fY3VzdG9tLWNoZWNrYm94LnNjc3MiLCJtb2R1bGVzL2NvbXBvbmVudHMvX2xvZ28tb24tbW9iaWxlLnNjc3MiLCJtb2R1bGVzL2NvbXBvbmVudHMvX3RvZ2dsZS5zY3NzIiwibW9kdWxlcy9zZWN0aW9ucy9fc2VjdGlvbi10ZXN0aW1vbmlhbC5zY3NzIiwibW9kdWxlcy9zZWN0aW9ucy9faGVhZGVyLnNjc3MiLCJtb2R1bGVzL3NlY3Rpb25zL19oZXJvLnNjc3MiLCJtb2R1bGVzL3NlY3Rpb25zL19saW5rLXNlY3Rpb24uc2NzcyIsIm1vZHVsZXMvc2VjdGlvbnMvX2hpc3Rvcnkuc2NzcyIsIm1vZHVsZXMvc2VjdGlvbnMvX25ld3NsZXR0ZXIuc2NzcyIsIm1vZHVsZXMvc2VjdGlvbnMvX2Zvb3Rlci5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFFQUFBO0FBRUE7Ozs7RUFBQTtBQU1BO0VBQ0UsdUJBQUEsRUFBQSxNQUFBO0VBQ0EsMEJBQUEsRUFBQSxNQUFBO0VBQ0EsOEJBQUEsRUFBQSxNQUFBO0FDREY7O0FESUE7O0VBQUE7QUFJQTtFQUNFLFNBQUE7QUNGRjs7QURLQTsrRUFBQTtBQUdBOzs7OztFQUFBO0FBT0E7Ozs7Ozs7Ozs7Ozs7RUFhRSxjQUFBO0FDSkY7O0FET0E7OztFQUFBO0FBS0E7Ozs7RUFJRSxxQkFBQSxFQUFBLE1BQUE7RUFDQSx3QkFBQSxFQUFBLE1BQUE7QUNMRjs7QURRQTs7O0VBQUE7QUFLQTtFQUNFLGFBQUE7RUFDQSxTQUFBO0FDTkY7O0FEU0E7OztFQUFBO0FBS0E7O0VBRUUsYUFBQTtBQ1BGOztBRFVBOytFQUFBO0FBR0E7O0VBQUE7QUFJQTtFQUNFLDZCQUFBO0FDVEY7O0FEWUE7O0VBQUE7QUFJQTs7RUFFRSxVQUFBO0FDVkY7O0FEYUE7K0VBQUE7QUFHQTs7RUFBQTtBQUlBO0VBQ0UseUJBQUE7QUNaRjs7QURlQTs7RUFBQTtBQUlBOztFQUVFLGlCQUFBO0FDYkY7O0FEZ0JBOztFQUFBO0FBSUE7RUFDRSxrQkFBQTtBQ2RGOztBRGlCQTs7O0VBQUE7QUFLQTtFQUNFLGNBQUE7RUFDQSxnQkFBQTtBQ2ZGOztBRGtCQTs7RUFBQTtBQUlBO0VBQ0UsZ0JBQUE7RUFDQSxXQUFBO0FDaEJGOztBRG1CQTs7RUFBQTtBQUlBO0VBQ0UsY0FBQTtBQ2pCRjs7QURvQkE7O0VBQUE7QUFJQTs7RUFFRSxjQUFBO0VBQ0EsY0FBQTtFQUNBLGtC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O0VBQ0UsZ0JBQUE7QTlCZzRETjtBQ3IvREU7RTZCZ0hBO0lBU0ksV0FBQTtFOUJnNERKO0FBQ0Y7QThCNzNERTtFQUNFLGFBQUE7RUFFQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxRQUFBO0VBQ0EsMkJBQUE7QTlCODNESjtBQ3QvREU7RTZCa0hBO0lBU0ksY0FBQTtFOUIrM0RKO0FBQ0Y7QThCNzNESTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFFQSxZQUFBO0VBQ0EseUIzQmxKTztFMkJtSlAsa0JBQUE7RUFFQSxnQ0FBQTtBOUI2M0ROO0E4QjMzRE07RUFDRSxZQUFBO0VBQ0Esd0JBQUE7RUFDQSx5QjNCdkpLO0FIb2hFYjtBOEJ6M0RJO0VBQ0Usa0JBQUE7RUFDQSxTQUFBO0VBQ0EsU0FBQTtFQUVBLGtDQUFBO0VBQ0Esb0NBQUE7RUFDQSxpQ0FBQTtFQUNBLG1DQUFBO0E5QjAzRE4iLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLnNjc3MgdjAuMS4wIHwgTUlUIExpY2Vuc2UgfCBiYXNlZCBvbiBnaXQuaW8vbm9ybWFsaXplICovXG5cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xuICogICAgdXNlciB6b29tLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXI6IDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuICovXG5cbmhyIHtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xuICBtYXJnaW46IDA7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjsgLyogMyAqL1xufVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cblxuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cbiAqL1xuXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8qKlxuICogSXQncyByZWNvbW1lbmRlZCB0aGF0IHlvdSBkb24ndCBhdHRlbXB0IHRvIHN0eWxlIHRoZXNlIGVsZW1lbnRzLlxuICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAqXG4gKiAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGBjb250ZW50LWJveGAgaW4gSUUgOC85LzEwLlxuICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWVcbiAqICAgIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAyICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm9yZGVyOiAwOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDtcbn1cbiIsIi8qISBub3JtYWxpemUuc2NzcyB2MC4xLjAgfCBNSVQgTGljZW5zZSB8IGJhc2VkIG9uIGdpdC5pby9ub3JtYWxpemUgKi9cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xuICogICAgdXNlciB6b29tLlxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgXG4gKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqL1xubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4gKi9cbmltZyB7XG4gIGJvcmRlcjogMDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gKi9cbmhyIHtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuICovXG4vKipcbiAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gIG1hcmdpbjogMDsgLyogMyAqL1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiAqICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiAqICAgIGBpbnB1dGAgYW5kIG90aGVycy5cbiAqL1xuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPWJ1dHRvbl0sXG5pbnB1dFt0eXBlPXJlc2V0XSxcbmlucHV0W3R5cGU9c3VibWl0XSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjsgLyogMyAqL1xufVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8qKlxuICogSXQncyByZWNvbW1lbmRlZCB0aGF0IHlvdSBkb24ndCBhdHRlbXB0IHRvIHN0eWxlIHRoZXNlIGVsZW1lbnRzLlxuICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAqXG4gKiAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGBjb250ZW50LWJveGAgaW4gSUUgOC85LzEwLlxuICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAqL1xuaW5wdXRbdHlwZT1jaGVja2JveF0sXG5pbnB1dFt0eXBlPXJhZGlvXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXG4gKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICovXG5pbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lXG4gKiAgICAoaW5jbHVkZSBgLW1vemAgdG8gZnV0dXJlLXByb29mKS5cbiAqL1xuaW5wdXRbdHlwZT1zZWFyY2hdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMiAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAqL1xuaW5wdXRbdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG5sZWdlbmQge1xuICBib3JkZXI6IDA7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICovXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDtcbn1cblxuLyogTUVESUEgUVVFUlkgTUlYSU5TIC0gU1RBUlQqL1xuLyogTUVESUEgUVVFUlkgTUlYSU5TIC0gRU5EKi9cbioge1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmh0bWwge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xufVxuXG5ib2R5IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDEwMTAxO1xuICBjb2xvcjogI2ZmZmZjMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbmJvZHkgLnBhZ2UtY29udGVudCB7XG4gIGZsZXgtZ3JvdzogMTtcbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICNmZmZmYzA7XG59XG5cbmltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxudWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuaDMge1xuICBsaW5lLWhlaWdodDogMS43NTtcbn1cblxucCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbi50ZXh0LWVtcGhhc2lzIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4uYW50aXNwbSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbm5vc2NyaXB0OjpiZWZvcmUge1xuICBjb250ZW50OiBcIk9tIGRlemUgd2Vic2l0ZSB0ZSBiZXpvZWtlbiBtb2V0IGplIHdlYmJyb3dzZXIgSmF2YVNjcmlwdCBvbmRlcnN0ZXVuZW4gZW4gdG9lc3RhYW4uXCI7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjZjM1MDAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDEwMTAxO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxZW0gMDtcbn1cblxuQGtleWZyYW1lcyBmYWRlLWluIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuQGtleWZyYW1lcyBmYWRlLW91dCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cbkBrZXlmcmFtZXMgbW92ZUFycm93IHtcbiAgMjUlIHtcbiAgICBvcGFjaXR5OiAwLjg1O1xuICB9XG4gIDMzLjMlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyLjI4cmVtKTtcbiAgfVxuICA2Ni42JSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMy4xMnJlbSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNC44cmVtKSBzY2FsZSgwLjUpO1xuICB9XG59XG4udGltZWxpbmUge1xuICBwYWRkaW5nOiAyZW0gMWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDQyNXB4KSB7XG4gIC50aW1lbGluZSB7XG4gICAgcGFkZGluZzogMmVtIDJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50aW1lbGluZSB7XG4gICAgcGFkZGluZzogOGVtIDJlbTtcbiAgfVxufVxuLnRpbWVsaW5lX19pbnRybyB7XG4gIG1hcmdpbjogMCAwIDRlbSAwO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50aW1lbGluZV9faW50cm8ge1xuICAgIG1heC13aWR0aDogNTVjaDtcbiAgICBtYXJnaW46IDAgYXV0byA0ZW07XG4gIH1cbn1cbi50aW1lbGluZV9faW50cm9fX3RpdGxlIHtcbiAgY29sb3I6ICNmMzUwMDA7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cbi50aW1lbGluZV9fbWVudS1jb250YWluZXIge1xuICBtYXJnaW4tYm90dG9tOiA0ZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLnRpbWVsaW5lX19tZW51LWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAyMWVtO1xuICAgIG1hcmdpbjogMCBhdXRvIDRlbTtcbiAgfVxufVxuLnRpbWVsaW5lX19tZW51IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICM1NTU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgcGFkZGluZzogMWVtO1xuICBtYXJnaW46IDA7XG59XG4udGltZWxpbmVfX21lbnVfX2l0ZW0ge1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjAyMDtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG59XG4udGltZWxpbmVfX21lbnVfX2l0ZW1fX2xpbmsge1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlLWluLW91dDtcbiAgcGFkZGluZzogMWVtIDEuNWVtO1xufVxuLnRpbWVsaW5lX19tZW51X19pdGVtX19saW5rOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZjMDtcbiAgY29sb3I6ICMyMDIwMjA7XG59XG4udGltZWxpbmVfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLnRpbWVsaW5lX19jb250ZW50LWNvbnRhaW5lcjo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDEwcHg7XG4gIHdpZHRoOiAwLjM3NWVtO1xuICBoZWlnaHQ6IDk5LjYlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjM1MDAwO1xuICBib3JkZXItcmFkaXVzOiAxZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC50aW1lbGluZV9fY29udGVudC1jb250YWluZXI6OmJlZm9yZSB7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgfVxufVxuLnRpbWVsaW5lX19pdGVtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMzVzIGVhc2UtaW47XG4gIHBhZGRpbmc6IDEuNWVtIDAgMCAxLjVlbTtcbiAgbWFyZ2luOiAwIGF1dG8gNGVtO1xufVxuLnRpbWVsaW5lX19pdGVtLS1yZXZlYWwge1xuICBvcGFjaXR5OiAxO1xufVxuLnRpbWVsaW5lX19pdGVtOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDIuNXB4O1xuICB0b3A6IDEuNWVtO1xuICB3aWR0aDogMjBweDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZWVhMDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC50aW1lbGluZV9faXRlbS0tbGVmdCB7XG4gICAgcmlnaHQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNTAlKTtcbiAgICB3aWR0aDogNTAlO1xuICAgIHBhZGRpbmc6IDEuNWVtIDEuNWVtIDAgMDtcbiAgfVxuICAudGltZWxpbmVfX2l0ZW0tLWxlZnQ6OmJlZm9yZSB7XG4gICAgd2lkdGg6IDI3cHg7XG4gICAgaGVpZ2h0OiAyN3B4O1xuICAgIGxlZnQ6IHVuc2V0O1xuICAgIHJpZ2h0OiAtMC44MjVlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAudGltZWxpbmVfX2l0ZW0tLXJpZ2h0IHtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbiAgLnRpbWVsaW5lX19pdGVtLS1yaWdodDo6YmVmb3JlIHtcbiAgICB3aWR0aDogMjdweDtcbiAgICBoZWlnaHQ6IDI3cHg7XG4gICAgbGVmdDogLTAuODI1ZW07XG4gIH1cbn1cbi50aW1lbGluZV9faXRlbV9fc2Nyb2xsLXVwIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIHJpZ2h0OiAwO1xuICBtYXJnaW46IDAgMC4yNWVtIDAuMjVlbSAwO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50aW1lbGluZV9faXRlbV9fc2Nyb2xsLXVwIHtcbiAgICByaWdodDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1MCUpO1xuICAgIG1hcmdpbjogMCAwIDAuNWVtIDA7XG4gIH1cbn1cbi50aW1lbGluZV9faXRlbV9fc2Nyb2xsLXVwIGEge1xuICBjb2xvcjogIzU1NTtcbn1cbi50aW1lbGluZV9faXRlbV9fY29udGVudC1jb250YWluZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZlZmViO1xuICBjb2xvcjogIzJhMmEyYTtcbiAgYm9yZGVyLXJhZGl1czogMC41ZW07XG4gIHBhZGRpbmc6IDAuNWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50aW1lbGluZV9faXRlbV9fY29udGVudC1jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDJlbTtcbiAgfVxufVxuLnRpbWVsaW5lX19pdGVtX190aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59XG4udGltZWxpbmVfX2l0ZW1fX2Jsb2NrcXVvdGUge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIG1hcmdpbjogMDtcbn1cbi50aW1lbGluZV9faXRlbV9fYmxvY2txdW90ZTpmaXJzdC1vZi10eXBlIHtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG59XG4udGltZWxpbmVfX2l0ZW1fX2ltYWdlIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRpbWVsaW5lX19pdGVtX19pbWFnZSB7XG4gICAgd2lkdGg6IDgyJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50aW1lbGluZV9fY3JlZGl0cyB7XG4gICAgbWF4LXdpZHRoOiA1NWNoO1xuICAgIG1hcmdpbjogMCBhdXRvIDRlbTtcbiAgfVxufVxuLnRpbWVsaW5lX19jcmVkaXRzX190aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnByb2R1Y3RzIHtcbiAgcGFkZGluZzogMmVtIDFlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MjVweCkge1xuICAucHJvZHVjdHMge1xuICAgIHBhZGRpbmc6IDJlbSAyZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAucHJvZHVjdHMge1xuICAgIHBhZGRpbmc6IDhlbSAyZW07XG4gIH1cbn1cbi5wcm9kdWN0c19faW50cm8ge1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnByb2R1Y3RzX19pbnRybyB7XG4gICAgbWF4LXdpZHRoOiA3NWNoO1xuICAgIG1hcmdpbjogMCBhdXRvIDJlbTtcbiAgfVxufVxuLnByb2R1Y3RzX19pbnRyb19fdGl0bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cbi5wcm9kdWN0c19faW50cm9fX2ltYWdlLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDFlbSAwO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDQyNXB4KSB7XG4gIC5wcm9kdWN0c19faW50cm9fX2ltYWdlLWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAyMWVtO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnByb2R1Y3RzX19pbnRyb19faW1hZ2UtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWF4LXdpZHRoOiA2NiU7XG4gIH1cbn1cbi5wcm9kdWN0c19faW50cm9fX2ltYWdlIHtcbiAgYm9yZGVyLXJhZGl1czogMC4zMTI1ZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnByb2R1Y3RzX19jb250YWN0LWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA1NWNoO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG4ucHJvZHVjdHNfX2NvbnRhY3RfX2RpdmlkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjM1MDAwO1xuICBoZWlnaHQ6IDAuMTg3NWVtO1xuICB3aWR0aDogMzMlO1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG4ucHJvZHVjdHNfX2NvbnRhY3RfX3RleHQ6bGFzdC1vZi10eXBlIHtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuXG4ubG9jYXRpb24ge1xuICBwYWRkaW5nOiAyZW0gMWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5sb2NhdGlvbiB7XG4gICAgcGFkZGluZzogMmVtIDJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5sb2NhdGlvbiB7XG4gICAgcGFkZGluZzogOGVtIDJlbTtcbiAgfVxufVxuLmxvY2F0aW9uX19jb250ZW50LWNvbnRhaW5lciB7XG4gIG1hcmdpbi1ib3R0b206IDRlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubG9jYXRpb25fX2ludHJvIHtcbiAgICBtYXgtd2lkdGg6IDU1Y2g7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cbi5sb2NhdGlvbl9faW50cm9fX3NvY2lhbHMtaW5zZXJ0IHtcbiAgbWFyZ2luOiAwIGF1dG8gNGVtO1xufVxuLmxvY2F0aW9uX190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cbi5sb2NhdGlvbl9fc2VjdGlvbi10aXRsZSB7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMS4yNWVtO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG4ubG9jYXRpb25fX2J0biB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTJlbTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuLmxvY2F0aW9uX19tYXAtY29udGFpbmVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDAgYXV0byA2ZW0gYXV0bztcbn1cbi5sb2NhdGlvbl9fbWFwIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1pbi13aWR0aDogMjUwcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgbWluLWhlaWdodDogNTAwcHg7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNmMzUwMDA7XG4gIGNvbG9yOiAjZjM1MDAwO1xufVxuXG4uY29udGFjdF9fY29udGVudC1jb250YWluZXIge1xuICBwYWRkaW5nOiAyZW0gMWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDQyNXB4KSB7XG4gIC5jb250YWN0X19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMmVtIDJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5jb250YWN0X19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogOGVtIDJlbTtcbiAgfVxufVxuLmNvbnRhY3RfX2ludHJvIHtcbiAgbWFyZ2luLWJvdHRvbTogNGVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5jb250YWN0X19pbnRybyB7XG4gICAgbWF4LXdpZHRoOiA3NWNoO1xuICAgIG1hcmdpbjogMCBhdXRvIDRlbTtcbiAgfVxufVxuLmNvbnRhY3RfX2ludHJvX190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuLmNvbnRhY3RfX2ludHJvX190ZXh0X19saW5rID4gYSB7XG4gIGNvbG9yOiAjZjM1MDAwO1xufVxuLmNvbnRhY3RfX2Zvcm0ge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG8gNGVtO1xufVxuLmNvbnRhY3RfX2Zvcm1fX2FudGktc3BhbSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uY29udGFjdF9fZm9ybV9fY29udGVudC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGNvbG9yOiAjMmEyYTJhO1xufVxuLmNvbnRhY3RfX2Zvcm1fX2lucHV0LWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgd2lkdGg6IDEwMCU7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmNvbnRhY3RfX2Zvcm1fX2lucHV0LWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA1NWNoO1xuICAgIG1hcmdpbjogMCBhdXRvIDJlbTtcbiAgfVxufVxuLmNvbnRhY3RfX2Zvcm1fX2xhYmVsIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6ICNmZmZmYzA7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cbi5jb250YWN0X19mb3JtX19sYWJlbDo6YWZ0ZXIge1xuICBjb250ZW50OiBcIipcIjtcbiAgY29sb3I6ICNmMzUwMDA7XG4gIHBhZGRpbmctbGVmdDogMC41ZW07XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbn1cbi5jb250YWN0X19mb3JtX19sYWJlbFtmb3I9c3ViamVjdF06OmFmdGVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5jb250YWN0X19mb3JtX19pbnB1dCwgLmNvbnRhY3RfX2Zvcm1fX3NlbGVjdCwgLmNvbnRhY3RfX2Zvcm1fX3RleHRhcmVhIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZWZlYjtcbiAgcGFkZGluZzogMWVtO1xufVxuLmNvbnRhY3RfX2Zvcm1fX2lucHV0OmZvY3VzLXdpdGhpbiwgLmNvbnRhY3RfX2Zvcm1fX3NlbGVjdDpmb2N1cy13aXRoaW4sIC5jb250YWN0X19mb3JtX190ZXh0YXJlYTpmb2N1cy13aXRoaW4ge1xuICBvdXRsaW5lOiAjZmVlYTAwIDAuMTg3NWVtIHNvbGlkO1xufVxuLmNvbnRhY3RfX2Zvcm1fX2lucHV0LCAuY29udGFjdF9fZm9ybV9fc2VsZWN0IHtcbiAgbWF4LXdpZHRoOiAyMWVtO1xufVxuLmNvbnRhY3RfX2Zvcm1fX3NlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuLmNvbnRhY3RfX2Zvcm1fX3NlbGVjdDpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuY29udGFjdF9fZm9ybV9fY29uc2VudC1jb250YWluZXIge1xuICAgIG1heC13aWR0aDogNTVjaDtcbiAgICBtYXJnaW46IDAgYXV0byAyZW07XG4gIH1cbn1cbi5jb250YWN0X19mb3JtX19jb25zZW50LXRleHQgPiBhIHtcbiAgY29sb3I6ICNmMzUwMDA7XG59XG4uY29udGFjdF9fZm9ybV9fc3VibWl0LWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDFlbTtcbn1cbi5jb250YWN0X19mb3JtX19idG4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLTAuMTg3NWVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDFlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICNmNmVmZWI7XG4gIG1hcmdpbi1sZWZ0OiA0ZW07XG59XG4uY29udGFjdF9fZm9ybV9fYnRuW2Rpc2FibGVkXSB7XG4gIG9wYWNpdHk6IDAuNztcbn1cblxuLnBvbGljeSB7XG4gIHBhZGRpbmc6IDJlbSAxZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLnBvbGljeSB7XG4gICAgcGFkZGluZzogMmVtIDJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5wb2xpY3kge1xuICAgIHBhZGRpbmc6IDhlbSAyZW07XG4gIH1cbn1cbi5wb2xpY3lfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLnBvbGljeV9fY29udGVudC1jb250YWluZXIge1xuICAgIG1heC13aWR0aDogNTVjaDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxufVxuLnBvbGljeV9fdGl0bGUge1xuICBmb250LXNpemU6IDEuNWVtO1xufVxuLnBvbGljeV9fc2VjdGlvbi10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS4yNWVtO1xufVxuXG4uZXJyb3Ige1xuICBwYWRkaW5nOiA4ZW0gMWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5lcnJvciB7XG4gICAgcGFkZGluZzogOGVtIDJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5lcnJvciB7XG4gICAgcGFkZGluZzogMTZlbSAyZW07XG4gIH1cbn1cbi5lcnJvcl9fY29udGVudC1jb250YWluZXIge1xuICBtaW4taGVpZ2h0OiA2NnZoO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmVycm9yX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA1NWNoO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG4uZXJyb3JfX21zZyB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuLmVycm9yX19zdGF0dXMge1xuICBmb250LXNpemU6IDEuMjVlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG4uZXJyb3JfX2J0biB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTJlbTtcbiAgcGFkZGluZzogMWVtIDEuNWVtICFpbXBvcnRhbnQ7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLndyYXBwZXIge1xuICAgIG1heC13aWR0aDogMTIwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG5cbi5tb2RhbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiA0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjN2EyODAwO1xuICBvcGFjaXR5OiAwLjk5O1xuICBvdmVyZmxvdy15OiBhdXRvO1xufVxuLm1vZGFsLS1zaG93IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4ubW9kYWxfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBwYWRkaW5nOiAyZW07XG59XG4ubW9kYWxfX2hlYWRpbmcge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4ubW9kYWxfX2hlYWRpbmdfX2ltZy1jb250YWluZXIge1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDI1cHgpIHtcbiAgLm1vZGFsX19oZWFkaW5nX19pbWcge1xuICAgIG1heC13aWR0aDogNjYlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm1vZGFsX19oZWFkaW5nX19pbWcge1xuICAgIG1heC13aWR0aDogMzMlO1xuICB9XG59XG4ubW9kYWxfX2hlYWRpbmdfX3RleHQtY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA1NWNoO1xuICBtYXJnaW46IDAgYXV0byAyZW07XG59XG4ubW9kYWxfX2hlYWRpbmdfX3RleHQge1xuICBsaW5lLWhlaWdodDogMS41O1xufVxuLm1vZGFsX19mb3JtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4ubW9kYWxfX2Zvcm1fX2luc3RydWN0aW9uIHtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBjb2xvcjogI2ZlZWEwMDtcbn1cbi5tb2RhbF9fZm9ybV9faW5wdXQtZ3JvdXAge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5tb2RhbF9fZm9ybV9faW5wdXQtZ3JvdXAge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICB9XG59XG4ubW9kYWxfX2Zvcm1fX2lucHV0LWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LXNpemU6IDE4cHg7XG4gIG1hcmdpbi1ib3R0b206IDAuNWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5tb2RhbF9fZm9ybV9faW5wdXQtY29udGFpbmVyIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuNWVtO1xuICB9XG59XG4ubW9kYWxfX2Zvcm1fX2lucHV0LWNvbnRhaW5lcjpsYXN0LW9mLXR5cGUge1xuICBtYXJnaW4tYm90dG9tOiAxLjVlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubW9kYWxfX2Zvcm1fX2lucHV0LWNvbnRhaW5lcjpsYXN0LW9mLXR5cGUge1xuICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgfVxufVxuLm1vZGFsX19mb3JtX19pbnB1dC1jb250YWluZXIgaW5wdXQge1xuICB3aWR0aDogM2VtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjZmVlYTAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB1bnNldDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4ICNmZWVhMDAgc29saWQ7XG59XG4ubW9kYWxfX2Zvcm1fX2J0biB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDI1cHgpIHtcbiAgLm1vZGFsX19mb3JtX19idG4ge1xuICAgIG1heC13aWR0aDogNjYlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm1vZGFsX19mb3JtX19idG4ge1xuICAgIG1heC13aWR0aDogMzMlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTkyMHB4KSB7XG4gIC5tb2RhbF9fZm9ybV9fYnRuIHtcbiAgICBtYXgtd2lkdGg6IDE4JTtcbiAgfVxufVxuXG4uY29va2llLWNvbnNlbnQge1xuICBkaXNwbGF5OiBub25lO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogNjtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDJlbSAxZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMTAxMDE7XG4gIGJvcmRlci1yYWRpdXM6IDVweCA1cHggMCAwO1xufVxuLmNvb2tpZS1jb25zZW50LS1zaG93IHtcbiAgZGlzcGxheTogZmxleDtcbn1cbi5jb29raWUtY29uc2VudF9fYnRuLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmNvb2tpZS1jb25zZW50X19idG4tY29udGFpbmVyIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGZsZXgtZmxvdzogcm93LXJldmVyc2U7XG4gIH1cbn1cbi5jb29raWUtY29uc2VudF9fYnRuIHtcbiAgd2lkdGg6IDEyZW07XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuY29va2llLWNvbnNlbnRfX2J0biB7XG4gICAgbWFyZ2luOiAwIDFlbSAwIDA7XG4gIH1cbn1cblxuLmJ0biB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdhMjgwMDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3gtc2hhZG93OiAycHggMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gIHRyYW5zaXRpb246IGFsbCBlYXNlLWluIDAuM3M7XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbn1cbi5idG4tLW91dGxpbmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB1bnNldDtcbiAgYm9yZGVyOiAxcHggI2ZmZmZjMCBzb2xpZDtcbn1cbi5idG4tLWxpZ2h0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZjMDtcbiAgY29sb3I6ICM3YTI4MDA7XG59XG4uYnRuOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uaGVhZGluZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cbi5oZWFkaW5nIGkge1xuICBjb2xvcjogI2ZlZWEwMDtcbn1cbi5oZWFkaW5nIGgyLFxuLmhlYWRpbmcgaDMge1xuICBjb2xvcjogIzJhMmEyYTtcbn1cbi5oZWFkaW5nIGgzIHtcbiAgZm9udC1zaXplOiAxLjFyZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIG1hcmdpbjogMCAwIDAuNWVtIDA7XG59XG4uaGVhZGluZyBociB7XG4gIHdpZHRoOiA1MCU7XG4gIGhlaWdodDogMnB4O1xuICBiYWNrZ3JvdW5kOiAjZjM1MDAwO1xufVxuXG4uZmxhc2gge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogNztcbiAgd2lkdGg6IDEwMCU7XG4gIGFuaW1hdGlvbjogZmFkZU91dCA1cyAycyBmb3J3YXJkcztcbn1cbi5mbGFzaF9fY29udGVudC1jb250YWluZXIge1xuICB3aWR0aDogOTUlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjMmEyYTJhO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDE4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY5ZjY7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgcGFkZGluZzogMWVtIDJlbTtcbiAgbWFyZ2luOiAwLjVlbSBhdXRvIDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5mbGFzaF9fY29udGVudC1jb250YWluZXIge1xuICAgIG1heC13aWR0aDogNjYlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTkyMHB4KSB7XG4gIC5mbGFzaF9fY29udGVudC1jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMzMlO1xuICB9XG59XG4uZmxhc2hfX2NvbnRlbnQtY29udGFpbmVyLS1hbGVydCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAwLCAwLCAwLjk1KTtcbiAgY29sb3I6ICNmZmY7XG59XG4uZmxhc2gtLWhpZGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmZsYXNoLS1hbGVydCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uZmxhc2gtLWFsZXJ0LS1zaG93IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbkBrZXlmcmFtZXMgZmFkZU91dCB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cbi8qIFxuICAjIyMgTk9URSAjIyNcbiAgVGhpcyBpcyB0aGUgYmFzZSBtZW51XG4qL1xuLm1lbnUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZvbnQtc2l6ZTogMC43NWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5tZW51IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICB9XG59XG4ubWVudV9faXRlbSB7XG4gIG1pbi13aWR0aDogMzNweDtcbiAgbWFyZ2luLXJpZ2h0OiAxZW07XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UtaW47XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm1lbnVfX2l0ZW0ge1xuICAgIG1hcmdpbi1yaWdodDogMmVtO1xuICB9XG59XG4ubWVudV9faXRlbTpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuLm1lbnVfX2l0ZW0tLWljb24tb25seSB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbn1cbi5tZW51X19pdGVtX19saW5rLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5tZW51X19pdGVtX19saW5rLWNvbnRhaW5lciB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgfVxuICAubWVudV9faXRlbV9fbGluay1jb250YWluZXI6aG92ZXIge1xuICAgIGNvbG9yOiAjZmVlYTAwO1xuICB9XG59XG4ubWVudV9faXRlbV9fdGV4dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gIG1hcmdpbjogMC41ZW0gYXV0byAwO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5tZW51X19pdGVtX190ZXh0IHtcbiAgICBtYXJnaW46IDAuNWVtIDAuNWVtIDAgMDtcbiAgfVxufVxuLm1lbnVfX2l0ZW1fX2J0biB7XG4gIGJhY2tncm91bmQtY29sb3I6IHVuc2V0O1xuICBjb2xvcjogI2ZmZmZjMDtcbn1cblxuLyogXG4gICMjIyBOT1RFICMjI1xuICBUaGlzIGlzIHRoZSBtZW51IHRoYXQgcG9wcy11cCB3aGVuIHRvZ2dsaW5nIHRoZSBkb3R0ZWQgbWVudSBsaW5rIGluIHRoZSBiYXNlIG1lbnUuIEl0IGlzIHBvc2l0aW9uZWQgcmVsYXRpdmUgdG8gdGhlIG5hdmJhciBlbGVtZW50IGluIHRoZSBoZWFkZXIgc2VjdGlvblxuKi9cbi5tZW51LXBvcC11cCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTE1JSwgLTkzJSk7XG4gIGJhY2tncm91bmQtY29sb3I6ICM1NTU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgcGFkZGluZzogMWVtIDAuNWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5tZW51LXBvcC11cCB7XG4gICAgdG9wOiB1bnNldDtcbiAgICBib3R0b206IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTMzJSwgOTYlKTtcbiAgfVxufVxuLm1lbnUtcG9wLXVwLS1hY3RpdmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYW5pbWF0aW9uOiBmYWRlLWluIDUwMG1zIGZvcndhcmRzO1xufVxuLm1lbnUtcG9wLXVwLS1jbG9zaW5nIHtcbiAgYW5pbWF0aW9uOiBmYWRlLW91dCA1MDBtcyBmb3J3YXJkcztcbn1cbi5tZW51LXBvcC11cF9faXRlbSB7XG4gIHBhZGRpbmc6IDFlbTtcbn1cbi5tZW51LXBvcC11cF9faXRlbTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMDIwMjA7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cbi5tZW51LXBvcC11cF9faXRlbS0tZGlzYWJsZWQge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cbi5tZW51LXBvcC11cF9faXRlbS0tZGlzYWJsZWQgYSB7XG4gIGNvbG9yOiBncmV5O1xufVxuLm1lbnUtcG9wLXVwX19pdGVtX19saW5rLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLm1lbnUtcG9wLXVwX19pdGVtX190ZXh0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICBtYXJnaW46IDAgMWVtIDAgMDtcbn1cblxuLnNjcm9sbC1kb3duLWljb24ge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMjUlO1xuICBsZWZ0OiA1MCU7XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogbW92ZUFycm93IDNzIGVhc2Utb3V0IGluZmluaXRlO1xufVxuLnNjcm9sbC1kb3duLWljb24tLWFjdGl2ZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uc29jaWFscy1pbnNlcnQge1xuICB3aWR0aDogMTVlbTtcbn1cbi5zb2NpYWxzLWluc2VydF9fZGl2aWRlciB7XG4gIHdpZHRoOiA1MCU7XG4gIGhlaWdodDogMC4xMjVlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YzNTAwMDtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuLnNvY2lhbHMtaW5zZXJ0X19saW5rLWNvbnRhaW5lciB7XG4gIHdpZHRoOiA1MCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICBtYXJnaW46IDAgYXV0bztcbn1cbi5jdXN0b20tY2hlY2tib3gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uY3VzdG9tLWNoZWNrYm94X19pbnB1dCB7XG4gIC8qIFxuICAgICAgd2UgdXNlIHRoZSBmdW5jdGlvbmFsaXR5IG9mIHRoZSBpbnB1dCBlbGVtZW50IGJ1dCB0aGUgc3R5bGluZyBpcyBlbnRpcmVseSBkb25lIHdpdGggdGhlIHNwYW4gZWxlbWVudCBiZWxvdyBcbiAgKi9cbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xuICBvcGFjaXR5OiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uY3VzdG9tLWNoZWNrYm94X19pbnB1dDpjaGVja2VkIH4gc3BhbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM1NTU7XG59XG4uY3VzdG9tLWNoZWNrYm94X19pbnB1dDpjaGVja2VkIH4gc3Bhbjo6YWZ0ZXIge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5jdXN0b20tY2hlY2tib3hfX3NwYW4ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDEuODc1ZW07XG4gIHdpZHRoOiAxLjg3NWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOWY2O1xuICBib3JkZXI6IDAuMTg3NWVtIHNvbGlkICNmZWVhMDA7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuLmN1c3RvbS1jaGVja2JveF9fc3Bhbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM1NTU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5jdXN0b20tY2hlY2tib3hfX3NwYW46OmFmdGVyIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDAuMjVlbTtcbiAgbGVmdDogMC40Mzc1ZW07XG4gIHdpZHRoOiAwLjMxMjVlbTtcbiAgaGVpZ2h0OiAwLjYyNWVtO1xuICBib3JkZXI6IHNvbGlkICNmZmY5ZjY7XG4gIGJvcmRlci13aWR0aDogMCAwLjI1ZW0gMC4yNWVtIDA7XG4gIC8qIGJvcmRlci1yYWRpdXM6IDhweDsgKi9cbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xufVxuXG4ubG9nby1vbi1tb2JpbGUge1xuICB3aWR0aDogMTUlO1xuICBtYXgtd2lkdGg6IDNlbTtcbiAgbWFyZ2luOiAwIGF1dG8gMmVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5sb2dvLW9uLW1vYmlsZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLmxvZ28tb24tbW9iaWxlX19pbWFnZSB7XG4gIGJvcmRlci1yYWRpdXM6IDAuMzEyNWVtO1xuICBvcGFjaXR5OiAwLjY7XG59XG5cbi5zbm93LXRvZ2dsZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uc25vdy10b2dnbGUtLXNob3cge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5zbm93LXRvZ2dsZV9fY2hlY2tib3gge1xuICBoZWlnaHQ6IDA7XG4gIHdpZHRoOiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG4uc25vdy10b2dnbGVfX2NoZWNrYm94OmNoZWNrZWQgKyBsYWJlbCB7XG4gIGJhY2tncm91bmQ6ICM3YTI4MDA7XG59XG4uc25vdy10b2dnbGVfX2NoZWNrYm94OmNoZWNrZWQgKyBsYWJlbDo6YWZ0ZXIge1xuICBsZWZ0OiBjYWxjKDEwMCUgLSAycHgpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xufVxuLnNub3ctdG9nZ2xlX19sYWJlbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtaW5kZW50OiAtOTk5OXB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG59XG4uc25vdy10b2dnbGVfX2xhYmVsOmFjdGl2ZTo6YWZ0ZXIge1xuICB3aWR0aDogMjJweDtcbn1cbi5zbm93LXRvZ2dsZV9fbGFiZWw6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDJweDtcbiAgbGVmdDogMnB4O1xuICB3aWR0aDogMTZweDtcbiAgaGVpZ2h0OiAxNnB4O1xuICBiYWNrZ3JvdW5kOiAjZmZmZmMwO1xuICBib3JkZXItcmFkaXVzOiAxNnB4O1xuICB0cmFuc2l0aW9uOiAwLjNzO1xufVxuXG4udGVzdGltb25pYWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZlZmViO1xuICBjb2xvcjogIzJhMmEyYTtcbiAgcGFkZGluZzogNGVtIDFlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAudGVzdGltb25pYWwge1xuICAgIHBhZGRpbmc6IDRlbSAyZW07XG4gIH1cbn1cbi50ZXN0aW1vbmlhbF9faGVhZGluZyB7XG4gIG1hcmdpbi1ib3R0b206IDRlbSAhaW1wb3J0YW50O1xufVxuLnRlc3RpbW9uaWFsX19oZWFkaW5nIGhyIHtcbiAgd2lkdGg6IDUwJTtcbn1cbi50ZXN0aW1vbmlhbF9fY29udGVudC1jb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgZWFzZS1pbi1vdXQgMC4zcztcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAudGVzdGltb25pYWxfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG59XG4udGVzdGltb25pYWxfX3F1b3RlIHtcbiAgbWFyZ2luLWJvdHRvbTogNGVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50ZXN0aW1vbmlhbF9fcXVvdGUge1xuICAgIGZsZXg6IDAgMCA1MCU7XG4gIH1cbn1cbi50ZXN0aW1vbmlhbF9fcXVvdGVfX3RleHQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBsaW5lLWhlaWdodDogMS43NTtcbiAgcGFkZGluZzogMWVtIDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRlc3RpbW9uaWFsX19xdW90ZV9fdGV4dCB7XG4gICAgcGFkZGluZzogMWVtIDEuNWVtO1xuICAgIG1heC13aWR0aDogNTVjaDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxufVxuLnRlc3RpbW9uaWFsX19xdW90ZV9fYXV0aG9yIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBjb2xvcjogI2YzNTAwMDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAudGVzdGltb25pYWxfX3F1b3RlX19hdXRob3Ige1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG59XG4udGVzdGltb25pYWxfX3F1b3RlX19hdXRob3IgaS5mYS1hbmdsZS1yaWdodCB7XG4gIGNvbG9yOiAjZmVlYTAwO1xuICBtYXJnaW4tcmlnaHQ6IDAuNWVtO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudGVzdGltb25pYWxfX2NvbnRlbnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZy1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDRlbTtcbiAgfVxuICAudGVzdGltb25pYWxfX2NvbnRhaW5lciB7XG4gICAgZmxleDogMTtcbiAgfVxuICAudGVzdGltb25pYWxfX2NvbnRhaW5lciArIC50ZXN0aW1vbmlhbF9fY29udGFpbmVyIHtcbiAgICBtYXJnaW4tbGVmdDogMWVtO1xuICB9XG4gIC50ZXN0aW1vbmlhbF9fY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgfVxuICAudGVzdGltb25pYWxfX2NvbnRhaW5lciBpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuNWVtO1xuICB9XG4gIC50ZXN0aW1vbmlhbF9fY29udGFpbmVyIHAucXVvdGUge1xuICAgIHdpZHRoOiA3MCU7XG4gICAgcGFkZGluZy10b3A6IDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgfVxuICAudGVzdGltb25pYWxfX2NvbnRhaW5lciBwLmF1dGhvciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBtYXJnaW4tbGVmdDogNGVtO1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxufVxuLypcbiAgICAjIyMjIyMjIyNcbiAgICBERVYgTk9URVNcbiAgICAjIyMjIyMjIyNcblxuLSBtb2JpbGUgZmlyc3QgYXBwcm9hY2hcbi0gbGFuZGluZyBjbGFzcyBnZXRzIGFkZGVkIHRocm91Z2gganMgb24gaG9tZXBhZ2Ugb25seVxuLSB0aGUgbmF2YmFyIGhhcyB0d28gbWVudSBjb21wb25lbnRzOiBzZWUgX21lbnUuc2NzcyAmIG1lbnUtcG9wLXVwLnNjc3NcbiovXG4uaGVhZGVyIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDA7XG4gIHotaW5kZXg6IDM7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjN2EyODAwO1xuICBib3JkZXItdG9wOiAycHggc29saWQgI2ZlZWEwMDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuaGVhZGVyIHtcbiAgICBib3R0b206IHVuc2V0O1xuICAgIHRvcDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNjYpO1xuICAgIGJvcmRlci10b3A6IHVuc2V0O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmhlYWRlcl9fY29udGVudC1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gIH1cbn1cbi5oZWFkZXJfX2xvZ28tY29udGFpbmVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuaGVhZGVyX19sb2dvLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmxleDogMCAwIDIwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMC41ZW0gMmVtO1xuICB9XG59XG4uaGVhZGVyX19sb2dvIHtcbiAgd2lkdGg6IDY2JTtcbn1cbi5oZWFkZXJfX2xvZ28tLWhpZGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmhlYWRlcl9fbmF2YmFyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMWVtIDJlbSAwLjVlbSAyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmhlYWRlcl9fbmF2YmFyIHtcbiAgICB3aWR0aDogdW5zZXQ7XG4gICAgZmxleDogMTtcbiAgICBwYWRkaW5nOiAxZW0gMmVtIDFlbSAyZW07XG4gIH1cbn1cbi5oZWFkZXJfX25hdmJhci0tanMtc21hbGwge1xuICBwYWRkaW5nOiAwLjI1ZW0gMWVtO1xufVxuLmhlYWRlcl9fbmF2YmFyX19zbm93LXRvZ2dsZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtYXJnaW46IDFlbSAwIDAgMWVtO1xufVxuLmhlYWRlcl9fbmF2YmFyX19zbm93LXRvZ2dsZV9fdGV4dCB7XG4gIG1hcmdpbi1yaWdodDogMWVtO1xufVxuXG4uaGVybyB7XG4gIGhlaWdodDogY2FsYyh2YXIoLS12aCwgMXZoKSAqIDEwMCk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uaGVyb19fY29udGVudC1jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogY2FsYyh2YXIoLS1pbm5lckhlaWdodCkgLSB2YXIoLS1tZW51SGVpZ2h0KSk7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmhlcm9fX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIHBhZGRpbmc6IDJlbTtcbiAgfVxufVxuLmhlcm9fX2N0YSB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjZmZmZmMwO1xuICBwYWRkaW5nOiAyZW0gMmVtIDAgMmVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5oZXJvX19jdGEge1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbn1cbi5oZXJvX19jdGFfX2xvZ28ge1xuICBtYXgtd2lkdGg6IDQ1JTtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuLmhlcm9fX2N0YV9faGVhZGluZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLmhlcm9fX2N0YV9faGVhZGluZy0taGlkZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmhlcm9fX2N0YV9faGVhZGluZyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICB9XG59XG4uaGVyb19fY3RhX19oZWFkaW5nX190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIGNvbG9yOiAjZmVlYTAwO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuaGVyb19fY3RhX19oZWFkaW5nX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAyZW07XG4gIH1cbn1cbi5oZXJvX19jdGFfX2hlYWRpbmdfX3N1YnRpdGxlIHtcbiAgZm9udC1zaXplOiAxZW07XG4gIGNvbG9yOiAjZDhkOGQ4O1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oZXJvX19jdGFfX2hlYWRpbmdfX3N1YnRpdGxlIHtcbiAgICBmb250LXNpemU6IDEuNWVtO1xuICB9XG59XG4uaGVyb19fY3RhX19idG4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5oZXJvX19jdGFfX2J0biB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWF4LXdpZHRoOiAxMmVtO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG4uaGVyb19fYnJhbmQtaW1hZ2UtY29udGFpbmVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5oZXJvX19icmFuZC1pbWFnZS1jb250YWluZXIge1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbn1cbi5oZXJvX19icmFuZC1pbWFnZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDY2JTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuaGVyb19fYnJhbmQtaW1hZ2Uge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oZXJvX19icmFuZC1pbWFnZSB7XG4gICAgd2lkdGg6IDY2JTtcbiAgfVxufVxuXG4ubGluay1zZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjlmNjtcbiAgcGFkZGluZzogNGVtIDFlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MjVweCkge1xuICAubGluay1zZWN0aW9uIHtcbiAgICBwYWRkaW5nOiA0ZW0gMmVtO1xuICB9XG59XG4ubGluay1zZWN0aW9uX19jb250ZW50LWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAubGluay1zZWN0aW9uX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgfVxufVxuLmxpbmstc2VjdGlvbl9fbGluayB7XG4gIGZsZXg6IDE7XG4gIG9wYWNpdHk6IDE7XG4gIGJveC1zaGFkb3c6IDJweCAycHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTtcbiAgYm9yZGVyLXJhZGl1czogOXB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAubGluay1zZWN0aW9uX19saW5rIHtcbiAgICBtYXgtd2lkdGg6IDQwJTtcbiAgfVxufVxuLmxpbmstc2VjdGlvbl9fbGluazpmaXJzdC1vZi10eXBlIHtcbiAgbWFyZ2luLWJvdHRvbTogNGVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAubGluay1zZWN0aW9uX19saW5rOmZpcnN0LW9mLXR5cGUge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cbi5saW5rLXNlY3Rpb25fX2xpbms6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJveC1zaGFkb3c6IDJweCAycHggMnB4IDAgI2YzNTAwMDtcbn1cbi5saW5rLXNlY3Rpb25fX2xpbmtfX2NvbnRlbnQge1xuICBwYWRkaW5nOiAwIDFlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAubGluay1zZWN0aW9uX19saW5rX19jb250ZW50IHtcbiAgICBwYWRkaW5nOiAwIDJlbTtcbiAgfVxufVxuXG4uaGlzdG9yeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNmVmZWI7XG59XG4uaGlzdG9yeV9fY29udGVudC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogNGVtIDFlbTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDI1cHgpIHtcbiAgLmhpc3RvcnlfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiA0ZW0gMmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oaXN0b3J5X19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgfVxufVxuLmhpc3RvcnlfX2hlYWRpbmcge1xuICBwYWRkaW5nOiAwIDFlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuaGlzdG9yeV9faGVhZGluZyB7XG4gICAgcGFkZGluZzogMCAyZW07XG4gIH1cbn1cbi5oaXN0b3J5X19pbWFnZS1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5oaXN0b3J5X19pbWFnZS1jb250YWluZXIgZmlndXJlIHtcbiAgbWFyZ2luOiAwO1xufVxuLmhpc3RvcnlfX2ltYWdlLWNvbnRhaW5lciBmaWd1cmU6Zmlyc3Qtb2YtdHlwZSB7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cbi5oaXN0b3J5X19pbWFnZS1jb250YWluZXIgZmlndXJlIGltZyB7XG4gIGJvcmRlci1yYWRpdXM6IDlweDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhpc3RvcnlfX2ltYWdlLWNvbnRhaW5lciBmaWd1cmUgaW1nIHtcbiAgICB3aWR0aDogNjMlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTkyMHB4KSB7XG4gIC5oaXN0b3J5X19pbWFnZS1jb250YWluZXIgZmlndXJlIGltZyB7XG4gICAgd2lkdGg6IDU3JTtcbiAgfVxufVxuXG4ubmV3c2xldHRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY5ZjY7XG4gIHBhZGRpbmc6IDRlbSAxZW07XG59XG4ubmV3c2xldHRlcl9fY29udGVudC1jb250YWluZXIge1xuICBwYWRkaW5nOiA0ZW0gMWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDQyNXB4KSB7XG4gIC5uZXdzbGV0dGVyX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogNGVtIDJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5uZXdzbGV0dGVyX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA2NiU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cbi5uZXdzbGV0dGVyX19pbnB1dC1jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubmV3c2xldHRlcl9faW5wdXQtY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDU0JTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxufVxuLm5ld3NsZXR0ZXJfX2Zvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5uZXdzbGV0dGVyX19mb3JtX19pbnB1dC1lbWFpbCB7XG4gIHdpZHRoOiA4MCU7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgY29sb3I6ICMyYTJhMmE7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNmVmZWI7XG4gIGJvcmRlcjogI2YzNTAwMCAxcHggc29saWQ7XG4gIHBhZGRpbmc6IDFlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG59XG4ubmV3c2xldHRlcl9fZm9ybV9faW5wdXQtZW1haWw6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICMyYTJhMmE7XG59XG4ubmV3c2xldHRlcl9fZm9ybV9faW5wdXQtZW1haWw6Zm9jdXMtd2l0aGluIHtcbiAgb3V0bGluZTogI2YzNTAwMCAxcHggc29saWQ7XG59XG4ubmV3c2xldHRlcl9fZm9ybV9fY29uc2VudC1jb250YWluZXIge1xuICB3aWR0aDogODAlO1xuICBjb2xvcjogIzJhMmEyYTtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBsaW5lLWhlaWdodDogMS43NTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLm5ld3NsZXR0ZXJfX2Zvcm1fX2NvbnNlbnQtdGV4dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuLm5ld3NsZXR0ZXJfX2Zvcm1fX2NvbnNlbnQtdGV4dCBhIHtcbiAgY29sb3I6ICNmMzUwMDA7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuLm5ld3NsZXR0ZXJfX2Zvcm1fX2J0biB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjN2EyODAwO1xuICBib3JkZXI6IDAuMTI1ZW0gc29saWQgIzdhMjgwMDtcbn1cbi5uZXdzbGV0dGVyX19mb3JtX19idG46ZGlzYWJsZWQge1xuICBvcGFjaXR5OiAwLjU7XG59XG4ubmV3c2xldHRlcl9fZm9ybV9fYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZWZlYjtcbiAgY29sb3I6ICMyYTJhMmE7XG59XG5cbi5mb290ZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQ6ICMyMDIwMjA7XG4gIGJvcmRlci10b3A6IDRweCAjZmVlYTAwIHNvbGlkO1xufVxuLmZvb3Rlcl9fY29udGVudC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDhlbSAyZW0gOGVtIDJlbTtcbiAgLyogXG4gICAgICBleHRyYSBwYWRkaW5nIG9uIGJvdHRvbSB0byBjcmVhdGUgc3BhY2UgZm9yIGZpeGVkIGhlYWRlciBcbiAgICAgIGJvdHRvbSBtZW51IG9uIG1vYmlsZSBkZXZpY2VzXG4gICovXG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmZvb3Rlcl9fY29udGVudC1jb250YWluZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmZvb3Rlcl9fY29udGVudC1jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDhlbSAyZW0gMWVtIDJlbTtcbiAgfVxufVxuLmZvb3RlciBoMyB7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgbWFyZ2luOiAwIDAgMC41ZW0gMDtcbn1cbi5mb290ZXIgaHIge1xuICB3aWR0aDogNzAlO1xuICBoZWlnaHQ6IDJweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YzNTAwMDtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuLmZvb3Rlcl9fc29jaWFsLW1lZGlhIHtcbiAgbWFyZ2luLWJvdHRvbTogNGVtO1xufVxuLmZvb3Rlcl9fc29jaWFsLW1lZGlhIGEgKyBhIHtcbiAgbWFyZ2luLWxlZnQ6IDJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuZm9vdGVyX19zb2NpYWwtbWVkaWEge1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbn1cbi5mb290ZXJfX2NvbnRhY3Qge1xuICBtYXJnaW4tYm90dG9tOiA0ZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmZvb3Rlcl9fY29udGFjdCB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbiAgfVxufVxuLmZvb3Rlcl9fbGVnYWwtbGlua3Mge1xuICBtYXJnaW4tYm90dG9tOiA0ZW07XG59XG4uZm9vdGVyX19sZWdhbC1saW5rcyB1bCBsaSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuLmZvb3Rlcl9fbGVnYWwtbGlua3MgdWwgbGkgYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5mb290ZXJfX2xlZ2FsLWxpbmtzIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiAyZW07XG4gIH1cbn1cbi5mb290ZXJfX2FkZHJlc3Mge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogNGVtO1xufVxuLmZvb3Rlcl9fYWRkcmVzcyBpbWcge1xuICB3aWR0aDogNTUlO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5mb290ZXJfX2FkZHJlc3MgaW1nIHtcbiAgICB3aWR0aDogNDAlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5mb290ZXJfX2FkZHJlc3MgaW1nIHtcbiAgICB3aWR0aDogMzMlO1xuICB9XG59XG4uZm9vdGVyX19hZGRyZXNzIGFkZHJlc3Mge1xuICB3aWR0aDogMjAwcHg7XG4gIG1hcmdpbjogMDtcbn1cbi5mb290ZXJfX2NvcHlyaWdodCB7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbn1cbi5mb290ZXJfX2NvcHlyaWdodCBociB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmYzA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmZvb3Rlcl9fY29weXJpZ2h0IGhyIHtcbiAgICB3aWR0aDogOTUlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmZvb3Rlcl9fY29weXJpZ2h0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuLmZvb3Rlcl9fY3JlZGl0cyB7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgY29sb3I6ICNmMzUwMDA7XG59XG4uZm9vdGVyX19jcmVkaXRzIHAge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5mb290ZXJfX2NyZWRpdHMge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG4uZm9vdGVyX19uYXYtdXAge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDUwJTtcbiAgdG9wOiAxNSU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmZvb3Rlcl9fbmF2LXVwIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuLmZvb3Rlcl9fbmF2LXVwX19jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiA1MHB4O1xuICBoZWlnaHQ6IDUwcHg7XG4gIG9wYWNpdHk6IDAuNztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZWEwMDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlLWluLW91dDtcbn1cbi5mb290ZXJfX25hdi11cF9fY29udGFpbmVyOmhvdmVyIHtcbiAgb3BhY2l0eTogMC44O1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMDEyNSk7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMzUwMDA7XG59XG4uZm9vdGVyX19uYXYtdXBfX2ZpZ3VyZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMjAlO1xuICB0b3A6IC0xMCU7XG4gIGJvcmRlci10b3A6IDE1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yaWdodDogMTVweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWJvdHRvbTogMjVweCBzb2xpZCAjMDMwMzAzO1xuICBib3JkZXItbGVmdDogMTVweCBzb2xpZCB0cmFuc3BhcmVudDtcbn0iLCIvKiBNRURJQSBRVUVSWSBNSVhJTlMgLSBTVEFSVCovXG5AbWl4aW4gbW9iaWxlX21kIHtcbiAgQG1lZGlhIChtaW4td2lkdGg6IDM3NXB4KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbkBtaXhpbiBtb2JpbGVfbGcge1xuICBAbWVkaWEgKG1pbi13aWR0aDogNDI1cHgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gdGFibGV0X3NtIHtcbiAgQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbkBtaXhpbiB0YWJsZXRfbWQge1xuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gcGNfc20ge1xuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIHBjX21kIHtcbiAgQG1lZGlhIChtaW4td2lkdGg6IDEzNjZweCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBwY19sZyB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxOTIwcHgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuQG1peGluIHBjX3hsIHtcbiAgQG1lZGlhIChtaW4td2lkdGg6IDI1NjBweCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5AbWl4aW4gcGNfMnhsIHtcbiAgQG1lZGlhIChtaW4td2lkdGg6IDUxMjFweCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG4vKiBNRURJQSBRVUVSWSBNSVhJTlMgLSBFTkQqL1xuIiwiKiB7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaHRtbCB7XG4gIGhlaWdodDogMTAwJTtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG59XG5cbmJvZHkge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuXG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcblxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbkJsYWNrO1xuICBjb2xvcjogJGxpZ2h0WWVsbG93O1xuXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgLy9hbGwgcGFnZS1jb250ZW50IGlzIHdyYXBwZWQgaW4gdGhpcyB3cmFwcGVyIHRvIGdldCBzdGlja3kgZm9vdGVyXG4gIC5wYWdlLWNvbnRlbnQge1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgfVxufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogJGxpZ2h0WWVsbG93O1xufVxuXG5pbWcge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbnVsIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG5cbmgzIHtcbiAgbGluZS1oZWlnaHQ6IDEuNzU7XG59XG5cbnAge1xuICBsaW5lLWhlaWdodDogMS41O1xufVxuXG4udGV4dC1lbXBoYXNpcyB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLmFudGlzcG0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5ub3NjcmlwdDo6YmVmb3JlIHtcbiAgY29udGVudDogXCJPbSBkZXplIHdlYnNpdGUgdGUgYmV6b2VrZW4gbW9ldCBqZSB3ZWJicm93c2VyIEphdmFTY3JpcHQgb25kZXJzdGV1bmVuIGVuIHRvZXN0YWFuLlwiO1xuXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgY29sb3I6ICRtYWluT3JhbmdlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbkJsYWNrO1xuXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcblxuICB3aWR0aDogMTAwJTtcblxuICBwYWRkaW5nOiAxZW0gMDtcbn1cbiIsIiRiYWNrZ3JvdW5kV2hpdGU6ICNmZmY5ZjY7XG4kYmFja2dyb3VuZE90aGVyV2hpdGU6ICNmNmVmZWI7XG5cbiRtYWluQmxhY2s6ICMwMTAxMDE7XG4kbWFpbkdyZXk6ICM1NTU7XG4kbGlnaHRHcmV5OiAjZDhkOGQ4O1xuJG90aGVyQmxhY2s6ICMyMDIwMjA7XG5cbiR0ZXh0Q29sb3ItZGFyazogIzJhMmEyYTtcblxuJG1haW5ZZWxsb3c6ICNmZWVhMDA7XG4kbGlnaHRZZWxsb3c6ICNmZmZmYzA7XG5cbiRtYWluT3JhbmdlOiAjZjM1MDAwO1xuJGRhcmtPcmFuZ2U6ICM3YTI4MDA7XG4iLCJAa2V5ZnJhbWVzIGZhZGUtaW4ge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgZmFkZS1vdXQge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgbW92ZUFycm93IHtcbiAgMjUlIHtcbiAgICBvcGFjaXR5OiAwLjg1O1xuICB9XG4gIDMzLjMlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwLjZyZW0gKiAzLjgpO1xuICB9XG4gIDY2LjYlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwLjZyZW0gKiA1LjIpO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAuNnJlbSAqIDgpIHNjYWxlKDAuNSk7XG4gIH1cbn1cbiIsIi50aW1lbGluZSB7XG4gIHBhZGRpbmc6IDJlbSAxZW07XG5cbiAgQGluY2x1ZGUgbW9iaWxlX2xnIHtcbiAgICBwYWRkaW5nOiAyZW0gMmVtO1xuICB9XG5cbiAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICBwYWRkaW5nOiA4ZW0gMmVtO1xuICB9XG5cbiAgJl9faW50cm8ge1xuICAgIG1hcmdpbjogMCAwIDRlbSAwO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIG1heC13aWR0aDogNTVjaDtcbiAgICAgIG1hcmdpbjogMCBhdXRvIDRlbTtcbiAgICB9XG5cbiAgICAmX190aXRsZSB7XG4gICAgICBjb2xvcjogJG1haW5PcmFuZ2U7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICB9XG4gIH1cblxuICAmX19tZW51LWNvbnRhaW5lciB7XG4gICAgbWFyZ2luLWJvdHRvbTogNGVtO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0X3NtIHtcbiAgICAgIG1heC13aWR0aDogMjFlbTtcbiAgICAgIG1hcmdpbjogMCBhdXRvIDRlbTtcbiAgICB9XG4gIH1cblxuICAmX19tZW51IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluR3JleTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG5cbiAgICBwYWRkaW5nOiAxZW07XG4gICAgbWFyZ2luOiAwO1xuXG4gICAgJl9faXRlbSB7XG4gICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG90aGVyQmxhY2s7XG5cbiAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuXG4gICAgICAmX19saW5rIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlLWluLW91dDtcblxuICAgICAgICBwYWRkaW5nOiAxZW0gMS41ZW07XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGxpZ2h0WWVsbG93O1xuICAgICAgICAgIGNvbG9yOiAkb3RoZXJCbGFjaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICZfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICAvL2hlcmUgeW91IHNldCB0aGUgcG9zaXRpb24gb2YgdGhlIGVudGlyZSB0aW1lbGluZSBibG9ja1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgIC8vIHZlcnRpY2FsIGxpbmVcbiAgICAmOjpiZWZvcmUge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDEwcHg7XG5cbiAgICAgIHdpZHRoOiAwLjM3NWVtO1xuICAgICAgaGVpZ2h0OiA5OS42JTtcblxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW5PcmFuZ2U7XG4gICAgICBib3JkZXItcmFkaXVzOiAxZW07XG5cbiAgICAgIEBpbmNsdWRlIHBjX3NtIHtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJl9faXRlbSB7XG4gICAgLy9oZXJlIHlvdSBzZXQgdGhlIHBvc2l0aW9uIG9mIHRoZSBpdGVtIG9uIGluc2lkZSB0aGUgdGltZWxpbmUgYmxvY2tcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zNXMgZWFzZS1pbjtcblxuICAgIHBhZGRpbmc6IDEuNWVtIDAgMCAxLjVlbTsgLy9wdXNoIGZyZWUgZnJvbSB2ZXJ0aWNhbCBsaW5lXG5cbiAgICBtYXJnaW46IDAgYXV0byA0ZW07XG5cbiAgICAmLS1yZXZlYWwge1xuICAgICAgb3BhY2l0eTogMTsgLy9pbnRlcnNlY3Rpb24gb2JzZXJ2ZXIgYXBpIGZhZGUtaW5cbiAgICB9XG5cbiAgICAvLyB0aGUgZG90IG9uIHRoZSB0aW1lbGluZVxuICAgICY6OmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiAyLjVweDtcbiAgICAgIHRvcDogMS41ZW07XG5cbiAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuXG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpblllbGxvdztcbiAgICB9XG5cbiAgICAmLS1sZWZ0IHtcbiAgICAgIEBpbmNsdWRlIHBjX3NtIHtcbiAgICAgICAgcmlnaHQ6IDUwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwJSk7XG5cbiAgICAgICAgd2lkdGg6IDUwJTtcblxuICAgICAgICBwYWRkaW5nOiAxLjVlbSAxLjVlbSAwIDA7IC8vcHVzaCBmcmVlIGZyb20gdmVydGljYWwgbGluZVxuXG4gICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgd2lkdGg6IDI3cHg7XG4gICAgICAgICAgaGVpZ2h0OiAyN3B4O1xuXG4gICAgICAgICAgbGVmdDogdW5zZXQ7XG4gICAgICAgICAgcmlnaHQ6IC0wLjgyNWVtO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi0tcmlnaHQge1xuICAgICAgQGluY2x1ZGUgcGNfc20ge1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcblxuICAgICAgICB3aWR0aDogNTAlO1xuXG4gICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgd2lkdGg6IDI3cHg7XG4gICAgICAgICAgaGVpZ2h0OiAyN3B4O1xuXG4gICAgICAgICAgbGVmdDogLTAuODI1ZW07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19zY3JvbGwtdXAge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAwO1xuICAgICAgcmlnaHQ6IDA7XG5cbiAgICAgIG1hcmdpbjogMCAwLjI1ZW0gMC4yNWVtIDA7XG5cbiAgICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICAgIHJpZ2h0OiA1MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1MCUpO1xuICAgICAgICBtYXJnaW46IDAgMCAwLjVlbSAwO1xuICAgICAgfVxuXG4gICAgICBhIHtcbiAgICAgICAgY29sb3I6ICRtYWluR3JleTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgICAvL2hlcmUgeW91IHNldCB0aGUgc3R5bGluZyBvZiB0aGUgdGltZWxpbmUgaXRlbSBhbmQgaXRzIGNvbnRlbnRcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRiYWNrZ3JvdW5kT3RoZXJXaGl0ZTtcbiAgICAgIGNvbG9yOiAkdGV4dENvbG9yLWRhcms7XG4gICAgICBib3JkZXItcmFkaXVzOiAwLjVlbTtcblxuICAgICAgcGFkZGluZzogMC41ZW07XG5cbiAgICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICAgIHBhZGRpbmc6IDJlbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX190aXRsZSB7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgICB9XG5cbiAgICAmX19ibG9ja3F1b3RlIHtcbiAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgICBtYXJnaW46IDA7XG5cbiAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2ltYWdlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgICB3aWR0aDogODIlO1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmX19jcmVkaXRzIHtcbiAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgbWF4LXdpZHRoOiA1NWNoO1xuICAgICAgbWFyZ2luOiAwIGF1dG8gNGVtO1xuICAgIH1cblxuICAgICZfX3RpdGxlIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG4gIH1cbn1cbiIsIi5wcm9kdWN0cyB7XG4gIHBhZGRpbmc6IDJlbSAxZW07XG5cbiAgQGluY2x1ZGUgbW9iaWxlX2xnIHtcbiAgICBwYWRkaW5nOiAyZW0gMmVtO1xuICB9XG5cbiAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICBwYWRkaW5nOiA4ZW0gMmVtO1xuICB9XG5cbiAgJl9faW50cm8ge1xuICAgIG1hcmdpbi1ib3R0b206IDJlbTtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICBtYXgtd2lkdGg6IDc1Y2g7XG4gICAgICBtYXJnaW46IDAgYXV0byAyZW07XG4gICAgfVxuXG4gICAgJl9fdGl0bGUge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIH1cblxuICAgICZfX2ltYWdlLWNvbnRhaW5lciB7XG4gICAgICBwYWRkaW5nOiAxZW0gMDtcblxuICAgICAgQGluY2x1ZGUgbW9iaWxlX2xnIHtcbiAgICAgICAgbWF4LXdpZHRoOiAyMWVtO1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIH1cblxuICAgICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIG1heC13aWR0aDogNjYlO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2ltYWdlIHtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDAuMzEyNWVtO1xuICAgIH1cbiAgfVxuXG4gIC8vIHRoZSBjb250YWN0IGZvcm0gaXRzZWxmIHJlLXVzZXMgdGhlIHN0eWxlcyBmcm9tIF9wYWdlLWNvbnRhY3Quc2Nzc1xuICAmX19jb250YWN0LWNvbnRhaW5lciB7XG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIG1heC13aWR0aDogNTVjaDtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cbiAgfVxuXG4gICZfX2NvbnRhY3Qge1xuICAgICZfX2RpdmlkZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW5PcmFuZ2U7XG4gICAgICBoZWlnaHQ6IDAuMTg3NWVtO1xuICAgICAgd2lkdGg6IDMzJTtcblxuICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICAgIH1cblxuICAgICZfX3RleHQge1xuICAgICAgJjpsYXN0LW9mLXR5cGUge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIubG9jYXRpb24ge1xuICBwYWRkaW5nOiAyZW0gMWVtO1xuXG4gIEBpbmNsdWRlIHRhYmxldF9zbSB7XG4gICAgcGFkZGluZzogMmVtIDJlbTtcbiAgfVxuXG4gIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgcGFkZGluZzogOGVtIDJlbTtcbiAgfVxuXG4gICZfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG4gIH1cblxuICAmX19pbnRybyB7XG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIG1heC13aWR0aDogNTVjaDtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cblxuICAgICZfX3NvY2lhbHMtaW5zZXJ0IHtcbiAgICAgIG1hcmdpbjogMCBhdXRvIDRlbTtcbiAgICB9XG4gIH1cblxuICAmX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIH1cblxuICAmX19zZWN0aW9uLXRpdGxlIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAxLjI1ZW07XG5cbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIH1cblxuICAmX19idG4ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMmVtO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICB9XG5cbiAgJl9fbWFwLWNvbnRhaW5lciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgbWFyZ2luOiAwIGF1dG8gNmVtIGF1dG87XG4gIH1cblxuICAmX19tYXAge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1pbi13aWR0aDogMjUwcHg7XG5cbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWluLWhlaWdodDogNTAwcHg7XG5cbiAgICBib3JkZXI6IDJweCBzb2xpZCAkbWFpbk9yYW5nZTtcblxuICAgIGNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgfVxufVxuIiwiLmNvbnRhY3Qge1xuICAmX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMmVtIDFlbTtcblxuICAgIEBpbmNsdWRlIG1vYmlsZV9sZyB7XG4gICAgICBwYWRkaW5nOiAyZW0gMmVtO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICBwYWRkaW5nOiA4ZW0gMmVtO1xuICAgIH1cbiAgfVxuXG4gICZfX2ludHJvIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgbWF4LXdpZHRoOiA3NWNoO1xuICAgICAgbWFyZ2luOiAwIGF1dG8gNGVtO1xuICAgIH1cblxuICAgICZfX3RpdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgICB9XG5cbiAgICAmX190ZXh0IHtcbiAgICAgICZfX2xpbmsgPiBhIHtcbiAgICAgICAgY29sb3I6ICRtYWluT3JhbmdlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICZfX2Zvcm0ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogMCBhdXRvIDRlbTtcblxuICAgICZfX2FudGktc3BhbSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgICZfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGNvbG9yOiAkdGV4dENvbG9yLWRhcms7XG4gICAgfVxuXG4gICAgJl9faW5wdXQtY29udGFpbmVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuXG4gICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgICAgbWF4LXdpZHRoOiA1NWNoO1xuICAgICAgICBtYXJnaW46IDAgYXV0byAyZW07XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fbGFiZWwge1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG5cbiAgICAgIGNvbG9yOiAkbGlnaHRZZWxsb3c7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG5cbiAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCIqXCI7XG4gICAgICAgIGNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwLjVlbTtcbiAgICAgICAgZm9udC1zaXplOiAwLjc1cmVtO1xuICAgICAgfVxuXG4gICAgICAmW2Zvcj1cInN1YmplY3RcIl06OmFmdGVyIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19pbnB1dCxcbiAgICAmX19zZWxlY3QsXG4gICAgJl9fdGV4dGFyZWEge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmRPdGhlcldoaXRlO1xuICAgICAgcGFkZGluZzogMWVtO1xuXG4gICAgICAmOmZvY3VzLXdpdGhpbiB7XG4gICAgICAgIG91dGxpbmU6ICRtYWluWWVsbG93IDAuMTg3NWVtIHNvbGlkO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2lucHV0LFxuICAgICZfX3NlbGVjdCB7XG4gICAgICBtYXgtd2lkdGg6IDIxZW07XG4gICAgfVxuXG4gICAgJl9fc2VsZWN0IHtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2NvbnNlbnQtY29udGFpbmVyIHtcbiAgICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICAgIG1heC13aWR0aDogNTVjaDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG8gMmVtO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2NvbnNlbnQtdGV4dCB7XG4gICAgICAmID4gYSB7XG4gICAgICAgIGNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19zdWJtaXQtY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmc6IDFlbTtcbiAgICB9XG5cbiAgICAmX19idG4ge1xuICAgICAgLy8gcG9zaXRpb25pbmcgaW4gbGluZSB3aXRoIGN1c3RvbS1jaGVja2JveFxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgdG9wOiAtMC4xODc1ZW07XG4gICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgY29sb3I6ICRiYWNrZ3JvdW5kT3RoZXJXaGl0ZTtcblxuICAgICAgbWFyZ2luLWxlZnQ6IDRlbTtcblxuICAgICAgJltkaXNhYmxlZF0ge1xuICAgICAgICBvcGFjaXR5OiAwLjc7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIucG9saWN5IHtcbiAgcGFkZGluZzogMmVtIDFlbTtcblxuICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgIHBhZGRpbmc6IDJlbSAyZW07XG4gIH1cblxuICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgIHBhZGRpbmc6IDhlbSAyZW07XG4gIH1cblxuICAmX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgICAgbWF4LXdpZHRoOiA1NWNoO1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgfVxuICB9XG5cbiAgJl9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gIH1cblxuICAmX19zZWN0aW9uLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDEuMjVlbTtcbiAgfVxufVxuIiwiLmVycm9yIHtcbiAgcGFkZGluZzogOGVtIDFlbTtcblxuICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgIHBhZGRpbmc6IDhlbSAyZW07XG4gIH1cblxuICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgIHBhZGRpbmc6IDE2ZW0gMmVtO1xuICB9XG5cbiAgJl9fY29udGVudC1jb250YWluZXIge1xuICAgIG1pbi1oZWlnaHQ6IDY2dmg7XG5cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgbWF4LXdpZHRoOiA1NWNoO1xuXG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICB9XG4gIH1cblxuICAmX19tc2cge1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICB9XG5cbiAgJl9fc3RhdHVzIHtcbiAgICBmb250LXNpemU6IDEuMjVlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gIH1cblxuICAmX19idG4ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMmVtO1xuXG4gICAgcGFkZGluZzogMWVtIDEuNWVtICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cbiIsIi53cmFwcGVyIHtcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cbiIsIi5tb2RhbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuXG4gIHotaW5kZXg6IDQ7XG5cbiAgYmFja2dyb3VuZC1jb2xvcjogJGRhcmtPcmFuZ2U7XG4gIG9wYWNpdHk6IDAuOTk7XG5cbiAgb3ZlcmZsb3cteTogYXV0bztcblxuICAmLS1zaG93IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gICZfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICBmb250LXNpemU6IDIwcHg7XG5cbiAgICBwYWRkaW5nOiAyZW07XG4gIH1cblxuICAmX19oZWFkaW5nIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAmX19pbWctY29udGFpbmVyIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgICB9XG5cbiAgICAmX19pbWcge1xuICAgICAgQGluY2x1ZGUgbW9iaWxlX2xnIHtcbiAgICAgICAgbWF4LXdpZHRoOiA2NiU7XG4gICAgICB9XG5cbiAgICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICAgIG1heC13aWR0aDogMzMlO1xuICAgICAgfVxuICAgIH1cbiAgICAmX190ZXh0LWNvbnRhaW5lciB7XG4gICAgICBtYXgtd2lkdGg6IDU1Y2g7XG4gICAgICBtYXJnaW46IDAgYXV0byAyZW07XG4gICAgfVxuXG4gICAgJl9fdGV4dCB7XG4gICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIH1cbiAgfVxuXG4gICZfX2Zvcm0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgJl9faW5zdHJ1Y3Rpb24ge1xuICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgY29sb3I6ICRtYWluWWVsbG93O1xuICAgIH1cblxuICAgICZfX2lucHV0LWdyb3VwIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19pbnB1dC1jb250YWluZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICAgIGZvbnQtc2l6ZTogMThweDtcblxuICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG5cbiAgICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMC41ZW07XG4gICAgICB9XG5cbiAgICAgICY6bGFzdC1vZi10eXBlIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMS41ZW07XG5cbiAgICAgICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaW5wdXQge1xuICAgICAgICB3aWR0aDogM2VtO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgICAgY29sb3I6ICRtYWluWWVsbG93O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB1bnNldDtcblxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggJG1haW5ZZWxsb3cgc29saWQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fYnRuIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuXG4gICAgICBAaW5jbHVkZSBtb2JpbGVfbGcge1xuICAgICAgICBtYXgtd2lkdGg6IDY2JTtcbiAgICAgIH1cblxuICAgICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgICAgbWF4LXdpZHRoOiAzMyU7XG4gICAgICB9XG5cbiAgICAgIEBpbmNsdWRlIHBjX2xnIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxOCU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuY29va2llLWNvbnNlbnQge1xuICBkaXNwbGF5OiBub25lO1xuXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogNjtcblxuICB3aWR0aDogMTAwJTtcblxuICBwYWRkaW5nOiAyZW0gMWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbkJsYWNrO1xuICBib3JkZXItcmFkaXVzOiA1cHggNXB4IDAgMDtcblxuICAmLS1zaG93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5cbiAgJl9fYnRuLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBmbGV4LWZsb3c6IHJvdy1yZXZlcnNlO1xuICAgIH1cbiAgfVxuXG4gICZfX2J0biB7XG4gICAgd2lkdGg6IDEyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIG1hcmdpbjogMCAxZW0gMCAwO1xuICAgIH1cbiAgfVxufVxuIiwiLmJ0biB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcblxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGFya09yYW5nZTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3gtc2hhZG93OiAycHggMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7XG5cbiAgdHJhbnNpdGlvbjogYWxsIGVhc2UtaW4gMC4zcztcblxuICBwYWRkaW5nOiAwLjVlbSAxZW07XG5cbiAgJi0tb3V0bGluZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdW5zZXQ7XG4gICAgYm9yZGVyOiAxcHggJGxpZ2h0WWVsbG93IHNvbGlkO1xuICB9XG5cbiAgJi0tbGlnaHQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRsaWdodFllbGxvdztcbiAgICBjb2xvcjogJGRhcmtPcmFuZ2U7XG4gIH1cblxuICAmOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cbiIsIi5oZWFkaW5nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuXG4gICAgaSB7XG4gICAgICAgIGNvbG9yOiAkbWFpblllbGxvdztcbiAgICB9XG5cbiAgICBoMixcbiAgICBoMyB7XG4gICAgICAgIGNvbG9yOiAkdGV4dENvbG9yLWRhcmtcbiAgICB9XG4gICAgaDMge1xuICAgICAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgbWFyZ2luOiAwIDAgLjVlbSAwO1xuICAgIH1cblxuICAgIGhyIHtcbiAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgaGVpZ2h0OiAycHg7XG4gICAgICAgIGJhY2tncm91bmQ6ICRtYWluT3JhbmdlO1xuICAgIH1cbn0iLCIvL2ZsYXNoIGNhcmRzIHNldCBhbmQgcmVuZGVyZWQgYnkgYmFja2VuZCBjb2RlXG4vL2ZsYXNoLS1hbGVydCBpcyB0cmlnZ2VyZWQgYnkgZnJvbnQgZW5kIEphdmFTY3JpcHRcbi5mbGFzaCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuXG4gIHotaW5kZXg6IDc7XG5cbiAgd2lkdGg6IDEwMCU7XG5cbiAgYW5pbWF0aW9uOiBmYWRlT3V0IDVzIDJzIGZvcndhcmRzO1xuXG4gICZfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICB3aWR0aDogOTUlO1xuXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGNvbG9yOiAkdGV4dENvbG9yLWRhcms7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBmb250LXNpemU6IDE4cHg7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZFdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcblxuICAgIHBhZGRpbmc6IDFlbSAyZW07XG4gICAgbWFyZ2luOiAwLjVlbSBhdXRvIDA7XG5cbiAgICBAaW5jbHVkZSBwY19zbSB7XG4gICAgICBtYXgtd2lkdGg6IDY2JTtcbiAgICB9XG4gICAgQGluY2x1ZGUgcGNfbGcge1xuICAgICAgbWF4LXdpZHRoOiAzMyU7XG4gICAgfVxuXG4gICAgJi0tYWxlcnQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDAsIDAsIDAuOTUpO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgfVxuICB9XG5cbiAgJi0taGlkZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gICYtLWFsZXJ0IHtcbiAgICBkaXNwbGF5OiBub25lO1xuXG4gICAgJi0tc2hvdyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gIH1cbn1cblxuQGtleWZyYW1lcyBmYWRlT3V0IHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuIiwiLyogXG4gICMjIyBOT1RFICMjI1xuICBUaGlzIGlzIHRoZSBiYXNlIG1lbnVcbiovXG4ubWVudSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuICBmb250LXNpemU6IDAuNzVlbTtcblxuICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgZm9udC1zaXplOiAxZW07XG4gIH1cblxuICAmX19pdGVtIHtcbiAgICBtaW4td2lkdGg6IDMzcHg7IC8vcmVxdWlyZWQgZm9yIGRvdHRlZCB0b2dnbGVcblxuICAgIG1hcmdpbi1yaWdodDogMWVtO1xuXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZS1pbjtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDJlbTtcbiAgICB9XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIH1cblxuICAgICYtLWljb24tb25seSB7XG4gICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgfVxuXG4gICAgJl9fbGluay1jb250YWluZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAkbWFpblllbGxvdztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgICZfX3RleHQge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG5cbiAgICAgIG1hcmdpbjogMC41ZW0gYXV0byAwO1xuXG4gICAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgICBtYXJnaW46IDAuNWVtIDAuNWVtIDAgMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19idG4ge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdW5zZXQ7XG4gICAgICBjb2xvcjogJGxpZ2h0WWVsbG93O1xuICAgIH1cbiAgfVxufVxuIiwiLyogXG4gICMjIyBOT1RFICMjI1xuICBUaGlzIGlzIHRoZSBtZW51IHRoYXQgcG9wcy11cCB3aGVuIHRvZ2dsaW5nIHRoZSBkb3R0ZWQgbWVudSBsaW5rIGluIHRoZSBiYXNlIG1lbnUuIEl0IGlzIHBvc2l0aW9uZWQgcmVsYXRpdmUgdG8gdGhlIG5hdmJhciBlbGVtZW50IGluIHRoZSBoZWFkZXIgc2VjdGlvblxuKi9cbi5tZW51LXBvcC11cCB7XG4gIGRpc3BsYXk6IG5vbmU7XG5cbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMTUlLCAtOTMlKTtcblxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbkdyZXk7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcblxuICBwYWRkaW5nOiAxZW0gMC41ZW07XG5cbiAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICB0b3A6IHVuc2V0O1xuICAgIGJvdHRvbTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMzMlLCA5NiUpO1xuICB9XG5cbiAgJi0tYWN0aXZlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBhbmltYXRpb246IGZhZGUtaW4gNTAwbXMgZm9yd2FyZHM7XG4gIH1cblxuICAmLS1jbG9zaW5nIHtcbiAgICBhbmltYXRpb246IGZhZGUtb3V0IDUwMG1zIGZvcndhcmRzO1xuICB9XG5cbiAgJl9faXRlbSB7XG4gICAgcGFkZGluZzogMWVtO1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkb3RoZXJCbGFjaztcbiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICB9XG5cbiAgICAmLS1kaXNhYmxlZCB7XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgIGEge1xuICAgICAgICBjb2xvcjogZ3JleTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19saW5rLWNvbnRhaW5lciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG5cbiAgICAmX190ZXh0IHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gICAgICBtYXJnaW46IDAgMWVtIDAgMDtcbiAgICB9XG4gIH1cbn1cbiIsIi5zY3JvbGwtZG93bi1pY29uIHtcbiAgZGlzcGxheTogbm9uZTtcblxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMjUlO1xuICBsZWZ0OiA1MCU7XG5cbiAgb3BhY2l0eTogMDtcblxuICBhbmltYXRpb246IG1vdmVBcnJvdyAzcyBlYXNlLW91dCBpbmZpbml0ZTtcblxuICAmLS1hY3RpdmUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG4iLCIuc29jaWFscy1pbnNlcnQge1xuICB3aWR0aDogMTVlbTtcblxuICAmX19kaXZpZGVyIHtcbiAgICB3aWR0aDogNTAlO1xuICAgIGhlaWdodDogMC4xMjVlbTtcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluT3JhbmdlO1xuXG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICB9XG5cbiAgJl9fbGluay1jb250YWluZXIge1xuICAgIHdpZHRoOiA1MCU7XG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuXG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cblxuICAmX19saW5rIHtcbiAgfVxufVxuIiwiLmN1c3RvbS1jaGVja2JveCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmX19pbnB1dCB7XG4gICAgLyogXG4gICAgICAgIHdlIHVzZSB0aGUgZnVuY3Rpb25hbGl0eSBvZiB0aGUgaW5wdXQgZWxlbWVudCBidXQgdGhlIHN0eWxpbmcgaXMgZW50aXJlbHkgZG9uZSB3aXRoIHRoZSBzcGFuIGVsZW1lbnQgYmVsb3cgXG4gICAgKi9cbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICAgIG9wYWNpdHk6IDA7XG5cbiAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAmOmNoZWNrZWQgfiBzcGFuIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluR3JleTtcbiAgICB9XG5cbiAgICAmOmNoZWNrZWQgfiBzcGFuOjphZnRlciB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gIH1cblxuICAmX19zcGFuIHtcbiAgICAvLyBjdXN0b20gY2hlY2tib3hcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG5cbiAgICBoZWlnaHQ6IDEuODc1ZW07XG4gICAgd2lkdGg6IDEuODc1ZW07XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZFdoaXRlO1xuICAgIGJvcmRlcjogMC4xODc1ZW0gc29saWQgJG1haW5ZZWxsb3c7XG5cbiAgICBtYXJnaW46IDAgYXV0bztcblxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW5HcmV5O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICAvLyBjaGVjay1tYXJrXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG5cbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMC4yNWVtO1xuICAgICAgbGVmdDogMC40Mzc1ZW07XG5cbiAgICAgIHdpZHRoOiAwLjMxMjVlbTtcbiAgICAgIGhlaWdodDogMC42MjVlbTtcblxuICAgICAgYm9yZGVyOiBzb2xpZCAkYmFja2dyb3VuZFdoaXRlO1xuICAgICAgYm9yZGVyLXdpZHRoOiAwIDAuMjVlbSAwLjI1ZW0gMDtcbiAgICAgIC8qIGJvcmRlci1yYWRpdXM6IDhweDsgKi9cbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICB9XG4gIH1cbn1cbiIsIi5sb2dvLW9uLW1vYmlsZSB7XG4gIHdpZHRoOiAxNSU7XG4gIG1heC13aWR0aDogM2VtO1xuICBtYXJnaW46IDAgYXV0byAyZW07XG5cbiAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgJl9faW1hZ2Uge1xuICAgIGJvcmRlci1yYWRpdXM6IDAuMzEyNWVtO1xuICAgIG9wYWNpdHk6IDAuNjtcbiAgfVxufVxuIiwiLnNub3ctdG9nZ2xlIHtcbiAgZGlzcGxheTogbm9uZTtcblxuICAmLS1zaG93IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gICZfX2NoZWNrYm94IHtcbiAgICBoZWlnaHQ6IDA7XG4gICAgd2lkdGg6IDA7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuXG4gICAgJjpjaGVja2VkICsgbGFiZWwge1xuICAgICAgYmFja2dyb3VuZDogJGRhcmtPcmFuZ2U7XG4gICAgfVxuXG4gICAgJjpjaGVja2VkICsgbGFiZWw6OmFmdGVyIHtcbiAgICAgIGxlZnQ6IGNhbGMoMTAwJSAtIDJweCk7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICAgIH1cbiAgfVxuXG4gIC8vIHRoaXMgaXMgdGhlIGJveCB5b3Ugc2VlXG4gICZfX2xhYmVsIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICBkaXNwbGF5OiBibG9jaztcblxuICAgIHRleHQtaW5kZW50OiAtOTk5OXB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIHdpZHRoOiA0MHB4O1xuICAgIGhlaWdodDogMjBweDtcblxuICAgIGJhY2tncm91bmQ6ICRvdGhlckJsYWNrO1xuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XG5cbiAgICAmOmFjdGl2ZTo6YWZ0ZXIge1xuICAgICAgd2lkdGg6IDIycHg7XG4gICAgfVxuXG4gICAgLy8gc3dpdGNoIGluc2lkZVxuICAgICY6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDJweDtcbiAgICAgIGxlZnQ6IDJweDtcbiAgICAgIHdpZHRoOiAxNnB4O1xuICAgICAgaGVpZ2h0OiAxNnB4O1xuICAgICAgYmFja2dyb3VuZDogJGxpZ2h0WWVsbG93O1xuICAgICAgYm9yZGVyLXJhZGl1czogMTZweDtcbiAgICAgIHRyYW5zaXRpb246IDAuM3M7XG4gICAgfVxuICB9XG59XG4iLCIudGVzdGltb25pYWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZE90aGVyV2hpdGU7XG4gIGNvbG9yOiAkdGV4dENvbG9yLWRhcms7XG5cbiAgcGFkZGluZzogNGVtIDFlbTtcblxuICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgIHBhZGRpbmc6IDRlbSAyZW07XG4gIH1cblxuICAmX19oZWFkaW5nIHtcbiAgICAvL292ZXJyaWRlIHRoZSBkZWZhdWx0IHN0eWxlIGRlZmluZWQgaW4gX3NlY3Rpb24taGVhZGluZ1xuICAgIG1hcmdpbi1ib3R0b206IDRlbSAhaW1wb3J0YW50O1xuXG4gICAgaHIge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICB9XG4gIH1cblxuICAmX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSBlYXNlLWluLW91dCAwLjNzO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuICB9XG5cbiAgJl9fcXVvdGUge1xuICAgIG1hcmdpbi1ib3R0b206IDRlbTtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICBmbGV4OiAwIDAgNTAlO1xuICAgIH1cblxuICAgICZfX3RleHQge1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjc1O1xuXG4gICAgICBwYWRkaW5nOiAxZW0gMDtcblxuICAgICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgICAgcGFkZGluZzogMWVtIDEuNWVtO1xuICAgICAgICBtYXgtd2lkdGg6IDU1Y2g7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2F1dGhvciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuXG4gICAgICBjb2xvcjogJG1haW5PcmFuZ2U7XG5cbiAgICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgfVxuXG4gICAgICAvL2FkZGl0aW9uYWwgY2xhc3NlcyB0byBmb250LWF3ZXNvbWUgaWNvbnMgZ2V0IGxvc3QgZHVyaW5nIGNvbXBpbGF0aW9uXG4gICAgICBpLmZhLWFuZ2xlLXJpZ2h0IHtcbiAgICAgICAgY29sb3I6ICRtYWluWWVsbG93O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDAuNWVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudGVzdGltb25pYWxfX2NvbnRlbnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZy1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDRlbTtcbiAgfVxuXG4gIC50ZXN0aW1vbmlhbF9fY29udGFpbmVyIHtcbiAgICBmbGV4OiAxO1xuICB9XG5cbiAgLnRlc3RpbW9uaWFsX19jb250YWluZXIgKyAudGVzdGltb25pYWxfX2NvbnRhaW5lciB7XG4gICAgbWFyZ2luLWxlZnQ6IDFlbTtcbiAgfVxuXG4gIC50ZXN0aW1vbmlhbF9fY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcblxuICAgIGkge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcbiAgICB9XG4gICAgcC5xdW90ZSB7XG4gICAgICB3aWR0aDogNzAlO1xuICAgICAgcGFkZGluZy10b3A6IDA7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBmb250LXNpemU6IDFyZW07XG4gICAgfVxuICAgIHAuYXV0aG9yIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBtYXJnaW4tbGVmdDogNGVtO1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgfVxuICB9XG59XG4iLCIvKlxuICAgICMjIyMjIyMjI1xuICAgIERFViBOT1RFU1xuICAgICMjIyMjIyMjI1xuXG4tIG1vYmlsZSBmaXJzdCBhcHByb2FjaFxuLSBsYW5kaW5nIGNsYXNzIGdldHMgYWRkZWQgdGhyb3VnaCBqcyBvbiBob21lcGFnZSBvbmx5XG4tIHRoZSBuYXZiYXIgaGFzIHR3byBtZW51IGNvbXBvbmVudHM6IHNlZSBfbWVudS5zY3NzICYgbWVudS1wb3AtdXAuc2Nzc1xuKi9cblxuLmhlYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAwO1xuXG4gIHotaW5kZXg6IDM7XG5cbiAgd2lkdGg6IDEwMCU7XG5cbiAgYmFja2dyb3VuZC1jb2xvcjogJGRhcmtPcmFuZ2U7XG4gIGJvcmRlci10b3A6IDJweCBzb2xpZCAkbWFpblllbGxvdztcblxuICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgIGJvdHRvbTogdW5zZXQ7XG4gICAgdG9wOiAwO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjY2KTtcbiAgICBib3JkZXItdG9wOiB1bnNldDtcbiAgfVxuXG4gICZfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICAvLyBrZWVwIHRoaXMgY29udGFpbmVyIGFzIGxvbmcgYXMgd3JhcHBlciBjbGFzcyBhcHBsaWVkXG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgZGlzcGxheTogZmxleDsgLy8gdHVybnMgbG9nby1jb250YWluZXIgYW5kIG5hdmJhciBpbnRvIGZsZXggaXRlbXNcbiAgICB9XG4gIH1cblxuICAmX19sb2dvLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogbm9uZTtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGZsZXg6IDAgMCAyMCU7XG5cbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgICAgcGFkZGluZzogMC41ZW0gMmVtO1xuICAgIH1cbiAgfVxuXG4gICZfX2xvZ28ge1xuICAgIHdpZHRoOiA2NiU7XG5cbiAgICAmLS1oaWRlIHtcbiAgICAgIC8vaGlkZGVuIG9uIGxhbmRpbmcgcGFnZSB2aWEgSlMgdG8gYXZvaWQgZHVwbGljYXRpb24gd2l0aCBoZXJvIHNlY3Rpb24gbG9nb1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cblxuICAmX19uYXZiYXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTAwJTtcblxuICAgIHBhZGRpbmc6IDFlbSAyZW0gMC41ZW0gMmVtO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIHdpZHRoOiB1bnNldDtcbiAgICAgIGZsZXg6IDE7XG5cbiAgICAgIHBhZGRpbmc6IDFlbSAyZW0gMWVtIDJlbTtcbiAgICB9XG5cbiAgICAmLS1qcy1zbWFsbCB7XG4gICAgICBwYWRkaW5nOiAwLjI1ZW0gMWVtO1xuICAgIH1cblxuICAgICZfX3Nub3ctdG9nZ2xlIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIG1hcmdpbjogMWVtIDAgMCAxZW07XG4gICAgICAmX190ZXh0IHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxZW07XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuaGVybyB7XG4gIC8vc2VlIGFwcC5qcyBmb3IgY2FsY3VsYXRpb24gb2YgY3VzdG9tIHZhcmlhYmxlcyBsaWtlIGhlaWdodCBhbmQgc29tZSBtb2RmaWNhdGlvbnMgZm9yIHNtYWxsIHNjcmVlbnNcblxuICBoZWlnaHQ6IGNhbGModmFyKC0tdmgsIDF2aCkgKiAxMDApO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICZfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IC8vc2VlIHNjcm9sbC1kb3duLWljb24uc2Nzc1xuXG4gICAgLy9taW5kIHRoZSBicm93c2VyIG1lbnUncyBhbmQgb3duIHNpdGUgbWVudVxuICAgIGhlaWdodDogY2FsYyh2YXIoLS1pbm5lckhlaWdodCkgLSB2YXIoLS1tZW51SGVpZ2h0KSk7XG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgICAgLy90d28gY29sdW1uIHZpZXcgZnJvbSBoZXJlIG9uXG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgIHBhZGRpbmc6IDJlbTtcbiAgICB9XG4gIH1cblxuICAmX19jdGEge1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGNvbG9yOiAkbGlnaHRZZWxsb3c7XG5cbiAgICBwYWRkaW5nOiAyZW0gMmVtIDAgMmVtO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0X3NtIHtcbiAgICAgIHdpZHRoOiA1MCU7XG4gICAgfVxuXG4gICAgJl9fbG9nbyB7XG4gICAgICBtYXgtd2lkdGg6IDQ1JTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICB9XG5cbiAgICAmX19oZWFkaW5nIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgJi0taGlkZSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gICAgICB9XG5cbiAgICAgICZfX3RpdGxlIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICAgICAgY29sb3I6ICRtYWluWWVsbG93O1xuXG4gICAgICAgIEBpbmNsdWRlIHBjX3NtIHtcbiAgICAgICAgICBmb250LXNpemU6IDJlbTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmX19zdWJ0aXRsZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgICBjb2xvcjogJGxpZ2h0R3JleTtcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xuXG4gICAgICAgIEBpbmNsdWRlIHBjX3NtIHtcbiAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fYnRuIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICAgIEBpbmNsdWRlIHRhYmxldF9zbSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBtYXgtd2lkdGg6IDEyZW07XG5cbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJl9fYnJhbmQtaW1hZ2UtY29udGFpbmVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICB9XG4gIH1cblxuICAmX19icmFuZC1pbWFnZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIGF1dG87XG5cbiAgICB3aWR0aDogNjYlO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0X3NtIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIHBjX3NtIHtcbiAgICAgIHdpZHRoOiA2NiU7XG4gICAgfVxuICB9XG59XG4iLCIubGluay1zZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmRXaGl0ZTtcbiAgcGFkZGluZzogNGVtIDFlbTtcblxuICBAaW5jbHVkZSBtb2JpbGVfbGcge1xuICAgIHBhZGRpbmc6IDRlbSAyZW07XG4gIH1cblxuICAmX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICBAaW5jbHVkZSBwY19zbSB7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgfVxuICB9XG5cbiAgJl9fbGluayB7XG4gICAgZmxleDogMTtcbiAgICBvcGFjaXR5OiAxO1xuXG4gICAgYm94LXNoYWRvdzogMnB4IDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xuICAgIGJvcmRlci1yYWRpdXM6IDlweDtcblxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW47XG5cbiAgICBAaW5jbHVkZSBwY19zbSB7XG4gICAgICBtYXgtd2lkdGg6IDQwJTtcbiAgICB9XG5cbiAgICAmOmZpcnN0LW9mLXR5cGUge1xuICAgICAgbWFyZ2luLWJvdHRvbTogNGVtO1xuXG4gICAgICBAaW5jbHVkZSBwY19zbSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBib3gtc2hhZG93OiAycHggMnB4IDJweCAwICRtYWluT3JhbmdlO1xuICAgIH1cblxuICAgICZfX2NvbnRlbnQge1xuICAgICAgcGFkZGluZzogMCAxZW07XG5cbiAgICAgIEBpbmNsdWRlIHRhYmxldF9zbSB7XG4gICAgICAgIHBhZGRpbmc6IDAgMmVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmhpc3Rvcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZE90aGVyV2hpdGU7XG5cbiAgJl9fY29udGVudC1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgcGFkZGluZzogNGVtIDFlbTtcbiAgICBtYXJnaW46IDAgYXV0bztcblxuICAgIEBpbmNsdWRlIG1vYmlsZV9sZyB7XG4gICAgICBwYWRkaW5nOiA0ZW0gMmVtO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIHBjX3NtIHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIH1cbiAgfVxuXG4gIC8vdGhlIGNvbnRlbnQgaXMgd3JhcHBlZCBpbiBhbiBhLXRhZy4gVGhhdCBhLXRhZyByZS11c2VzIHRoZSBzdHlsaW5nIGZyb20gX2xpbmstc2VjdGlvbl9fbGlua1xuXG4gICZfX2hlYWRpbmcge1xuICAgIHBhZGRpbmc6IDAgMWVtO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0X3NtIHtcbiAgICAgIHBhZGRpbmc6IDAgMmVtO1xuICAgIH1cbiAgfVxuXG4gICZfX2ltYWdlLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIGZpZ3VyZSB7XG4gICAgICBtYXJnaW46IDA7XG5cbiAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgICAgIH1cblxuICAgICAgaW1nIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOXB4O1xuXG4gICAgICAgIEBpbmNsdWRlIHBjX3NtIHtcbiAgICAgICAgICB3aWR0aDogNjMlO1xuICAgICAgICB9XG5cbiAgICAgICAgQGluY2x1ZGUgcGNfbGcge1xuICAgICAgICAgIHdpZHRoOiA1NyU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi5uZXdzbGV0dGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmRXaGl0ZTtcbiAgcGFkZGluZzogNGVtIDFlbTtcblxuICAmX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogNGVtIDFlbTtcblxuICAgIEBpbmNsdWRlIG1vYmlsZV9sZyB7XG4gICAgICBwYWRkaW5nOiA0ZW0gMmVtO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICBtYXgtd2lkdGg6IDY2JTtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cbiAgfVxuXG4gICZfX2hlYWRpbmcge1xuICB9XG5cbiAgJl9faW5wdXQtY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICBtYXgtd2lkdGg6IDU0JTtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cbiAgfVxuXG4gICZfX2Zvcm0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgJl9faW5wdXQtZW1haWwge1xuICAgICAgd2lkdGg6IDgwJTtcblxuICAgICAgZm9udC1zaXplOiAxcmVtO1xuXG4gICAgICBjb2xvcjogJHRleHRDb2xvci1kYXJrO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmRPdGhlcldoaXRlO1xuICAgICAgYm9yZGVyOiAkbWFpbk9yYW5nZSAxcHggc29saWQ7XG5cbiAgICAgIHBhZGRpbmc6IDFlbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuXG4gICAgICAmOjpwbGFjZWhvbGRlciB7XG4gICAgICAgIGNvbG9yOiAkdGV4dENvbG9yLWRhcms7XG4gICAgICB9XG4gICAgICAmOmZvY3VzLXdpdGhpbiB7XG4gICAgICAgIG91dGxpbmU6ICRtYWluT3JhbmdlIDFweCBzb2xpZDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jb25zZW50LWNvbnRhaW5lciB7XG4gICAgICB3aWR0aDogODAlO1xuXG4gICAgICBjb2xvcjogJHRleHRDb2xvci1kYXJrO1xuXG4gICAgICBmb250LXNpemU6IDFyZW07XG4gICAgICBsaW5lLWhlaWdodDogMS43NTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG5cbiAgICAmX19jb25zZW50LXRleHQge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuXG4gICAgICBhIHtcbiAgICAgICAgY29sb3I6ICRtYWluT3JhbmdlO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19idG4ge1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGRhcmtPcmFuZ2U7XG4gICAgICBib3JkZXI6IDAuMTI1ZW0gc29saWQgJGRhcmtPcmFuZ2U7XG5cbiAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICBvcGFjaXR5OiAwLjU7XG4gICAgICB9XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZE90aGVyV2hpdGU7XG4gICAgICAgIGNvbG9yOiAkdGV4dENvbG9yLWRhcms7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuZm9vdGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kOiAkb3RoZXJCbGFjaztcblxuICBib3JkZXItdG9wOiA0cHggJG1haW5ZZWxsb3cgc29saWQ7XG5cbiAgJl9fY29udGVudC1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgcGFkZGluZzogOGVtIDJlbSA4ZW0gMmVtO1xuICAgIC8qIFxuICAgICAgICBleHRyYSBwYWRkaW5nIG9uIGJvdHRvbSB0byBjcmVhdGUgc3BhY2UgZm9yIGZpeGVkIGhlYWRlciBcbiAgICAgICAgYm90dG9tIG1lbnUgb24gbW9iaWxlIGRldmljZXNcbiAgICAqL1xuICAgIEBpbmNsdWRlIHRhYmxldF9zbSB7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICBwYWRkaW5nOiA4ZW0gMmVtIDFlbSAyZW07XG4gICAgfVxuICB9XG5cbiAgaDMge1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIG1hcmdpbjogMCAwIDAuNWVtIDA7XG4gIH1cblxuICBociB7XG4gICAgd2lkdGg6IDcwJTtcbiAgICBoZWlnaHQ6IDJweDtcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluT3JhbmdlO1xuXG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICB9XG5cbiAgJl9fc29jaWFsLW1lZGlhIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG5cbiAgICBhICsgYSB7XG4gICAgICBtYXJnaW4tbGVmdDogMmVtO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIHRhYmxldF9zbSB7XG4gICAgICB3aWR0aDogNTAlO1xuICAgIH1cbiAgfVxuXG4gICZfX2NvbnRhY3Qge1xuICAgIG1hcmdpbi1ib3R0b206IDRlbTtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9zbSB7XG4gICAgICB3aWR0aDogNTAlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgfVxuICB9XG5cbiAgJl9fbGVnYWwtbGlua3Mge1xuICAgIG1hcmdpbi1ib3R0b206IDRlbTtcblxuICAgIHVsIGxpIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcblxuICAgICAgYSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgfVxuICAgIH1cblxuICAgIEBpbmNsdWRlIHRhYmxldF9zbSB7XG4gICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgbWFyZ2luLXRvcDogMmVtO1xuICAgIH1cbiAgfVxuXG4gICZfX2FkZHJlc3Mge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgbWFyZ2luLWJvdHRvbTogNGVtO1xuXG4gICAgaW1nIHtcbiAgICAgIHdpZHRoOiA1NSU7XG5cbiAgICAgIEBpbmNsdWRlIHRhYmxldF9zbSB7XG4gICAgICAgIHdpZHRoOiA0MCU7XG4gICAgICB9XG5cbiAgICAgIEBpbmNsdWRlIHBjX3NtIHtcbiAgICAgICAgd2lkdGg6IDMzJTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBhZGRyZXNzIHtcbiAgICAgIHdpZHRoOiAyMDBweDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICB9XG4gIH1cblxuICAmX19jb3B5cmlnaHQge1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcblxuICAgIGhyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRsaWdodFllbGxvdztcblxuICAgICAgQGluY2x1ZGUgdGFibGV0X3NtIHtcbiAgICAgICAgd2lkdGg6IDk1JTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICB9XG5cbiAgJl9fY3JlZGl0cyB7XG4gICAgZm9udC1zaXplOiAwLjc1cmVtO1xuICAgIGNvbG9yOiAkbWFpbk9yYW5nZTtcblxuICAgIHAge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICB9XG5cbiAgJl9fbmF2LXVwIHtcbiAgICBkaXNwbGF5OiBub25lO1xuXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0b3A6IDE1JTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG5cbiAgICBAaW5jbHVkZSBwY19zbSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICAmX19jb250YWluZXIge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICBoZWlnaHQ6IDUwcHg7XG5cbiAgICAgIG9wYWNpdHk6IDAuNztcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluWWVsbG93O1xuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuXG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlLWluLW91dDtcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IDAuODtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAxMjUpO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19maWd1cmUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogMjAlO1xuICAgICAgdG9wOiAtMTAlO1xuXG4gICAgICBib3JkZXItdG9wOiAxNXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLXJpZ2h0OiAxNXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLWJvdHRvbTogMjVweCBzb2xpZCAjMDMwMzAzO1xuICAgICAgYm9yZGVyLWxlZnQ6IDE1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgfVxuICB9XG59XG4iXX0= */