/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
  margin: 0; /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type=button],
input[type=reset],
input[type=submit] {
  -webkit-appearance: button; /* 2 */
  cursor: pointer; /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type=checkbox],
input[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type=search] {
  -webkit-appearance: textfield; /* 1 */ /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* MEDIA QUERY MIXINS - START*/
/* MEDIA QUERY MIXINS - END*/
* {
  padding: 0;
  border: 0;
  box-sizing: border-box;
}

html {
  height: 100%;
  scroll-behavior: smooth;
}

body {
  width: 100%;
  height: 100%;
  font-family: "Montserrat", sans-serif;
  font-weight: 400;
  background-color: #010101;
  color: #ffffc0;
  display: flex;
  flex-direction: column;
}
body .page-content {
  flex-grow: 1;
}

a {
  text-decoration: none;
  color: #ffffc0;
}

img {
  width: 100%;
  max-width: 100%;
  height: auto;
}

ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

h3 {
  line-height: 1.75;
}

p {
  line-height: 1.5;
}

.text-emphasis {
  font-style: italic;
}

.antispm {
  display: none;
}

noscript::before {
  content: "Om deze website te bezoeken moet je webbrowser JavaScript ondersteunen en toestaan.";
  font-style: italic;
  font-weight: bolder;
  font-size: 1.25rem;
  text-align: center;
  color: #f35000;
  background-color: #010101;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  padding: 1em 0;
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
@keyframes moveArrow {
  25% {
    opacity: 0.85;
  }
  33.3% {
    opacity: 1;
    transform: translateY(2.28rem);
  }
  66.6% {
    opacity: 1;
    transform: translateY(3.12rem);
  }
  100% {
    opacity: 0;
    transform: translateY(4.8rem) scale(0.5);
  }
}
.timeline {
  padding: 4em 1em;
}
@media (min-width: 425px) {
  .timeline {
    padding: 4em 2em;
  }
}
@media (min-width: 768px) {
  .timeline {
    padding: 8em 2em;
  }
}
.timeline__intro {
  margin: 0 0 4em 0;
}
@media (min-width: 768px) {
  .timeline__intro {
    max-width: 55ch;
    margin: 0 auto 4em;
  }
}
.timeline__intro__title {
  color: #f35000;
  text-transform: capitalize;
  text-align: center;
  margin-bottom: 1em;
}
.timeline__menu-container {
  margin-bottom: 4em;
}
@media (min-width: 576px) {
  .timeline__menu-container {
    max-width: 21em;
    margin: 0 auto 4em;
  }
}
.timeline__menu {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: #555;
  border-radius: 5px;
  padding: 1em;
  margin: 0;
}
.timeline__menu__item {
  width: 100%;
  background-color: #202020;
  margin-bottom: 0.5em;
}
.timeline__menu__item__link {
  display: block;
  text-align: center;
  transition: all 0.5s ease-in-out;
  padding: 1em 1.5em;
}
.timeline__menu__item__link:hover {
  background-color: #ffffc0;
  color: #202020;
}
.timeline__content-container {
  position: relative;
}
.timeline__content-container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 10px;
  width: 0.375em;
  height: 99.6%;
  background-color: #f35000;
  border-radius: 1em;
}
@media (min-width: 1024px) {
  .timeline__content-container::before {
    left: 50%;
    transform: translateX(-50%);
  }
}
.timeline__item {
  position: relative;
  opacity: 0;
  transition: opacity 0.35s ease-in;
  padding: 1.5em 0 0 1.5em;
  margin: 0 auto 4em;
}
.timeline__item.reveal {
  opacity: 1;
}
.timeline__item::before {
  content: "";
  position: absolute;
  left: 2.5px;
  top: 1.5em;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: #feea00;
}
@media (min-width: 1024px) {
  .timeline__item--left {
    right: 50%;
    transform: translateX(50%);
    width: 50%;
    padding: 1.5em 1.5em 0 0;
  }
  .timeline__item--left::before {
    width: 27px;
    height: 27px;
    left: unset;
    right: -0.825em;
  }
}
@media (min-width: 1024px) {
  .timeline__item--right {
    left: 50%;
    transform: translateX(-50%);
    width: 50%;
  }
  .timeline__item--right::before {
    width: 27px;
    height: 27px;
    left: -0.825em;
  }
}
.timeline__item__scroll-up {
  position: absolute;
  bottom: 0;
  right: 0;
  margin: 0 0.25em 0.25em 0;
}
@media (min-width: 768px) {
  .timeline__item__scroll-up {
    right: 50%;
    transform: translateX(50%);
    margin: 0 0 0.5em 0;
  }
}
.timeline__item__scroll-up a {
  color: #555;
}
.timeline__item__content-container {
  background-color: #f6efeb;
  color: #2a2a2a;
  border-radius: 0.5em;
  padding: 0.5em;
}
@media (min-width: 768px) {
  .timeline__item__content-container {
    padding: 2em;
  }
}
.timeline__item__title {
  text-align: center;
  text-transform: capitalize;
}
.timeline__item__blockquote {
  font-style: italic;
  line-height: 1.5;
  margin: 0;
}
.timeline__item__blockquote:first-of-type {
  margin-bottom: 0.5em;
}
.timeline__item__image {
  display: block;
}
@media (min-width: 768px) {
  .timeline__item__image {
    width: 82%;
    margin: 0 auto;
  }
}
@media (min-width: 768px) {
  .timeline__credits {
    max-width: 55ch;
    margin: 0 auto 4em;
  }
}
.timeline__credits__title {
  text-align: center;
}

.info__title,
.info__content-text,
.info__contact {
  padding: 0 2em;
  max-width: 500px;
  margin: 0 auto;
}

.info__title {
  width: 100%;
  margin-top: 3em;
  line-height: 1.75;
  text-align: center;
}
.info__title h1 {
  font-size: 1.5rem;
  text-align: center;
  text-transform: uppercase;
}

.info__content-images {
  padding: 1em 0;
  text-align: center;
}
.info__content-images img {
  width: auto;
  height: 100px;
}

.info__content-text,
.info__contact {
  line-height: 1.75;
}

.info__content-text {
  margin-bottom: 4em;
}

.info__contact p {
  color: #f35000;
}
.info__contact hr {
  background-color: #7a2800;
  height: 3px;
  width: 200px;
  margin: 0;
}

@media screen and (min-width: 768px) {
  .info__content {
    display: flex;
    padding: 0 1em;
    justify-content: space-evenly;
    margin-bottom: 2em;
  }
  .info__content .info__content-text {
    order: 1;
    margin: unset;
  }
  .info__content .info__content-images {
    order: 2;
    margin: unset;
    display: flex;
    flex-direction: column;
  }
  .info__content .info__content-images img {
    width: 80%;
    height: auto;
    margin-bottom: 1em;
  }
}
@media screen and (min-width: 992px) {
  .info__contact {
    text-align: left;
    margin: 0 auto 0 0;
  }
}
.location {
  margin: 2em auto;
  width: 100%;
  padding: 1em 2em;
  text-align: center;
}
.location .location__title h1 {
  font-size: 1.5rem;
  text-transform: uppercase;
  margin-bottom: 1em;
}
.location .location__text {
  margin-bottom: 2em;
}
.location .location__text h2 {
  color: #f35000;
  text-transform: uppercase;
  font-size: 1rem;
  margin-top: 2em;
}
.location .location__text p {
  line-height: 1.75;
}
.location .location__text a.btn {
  display: inline-block;
  text-transform: uppercase;
  margin: 2em auto;
}
.location .location__map-container {
  width: 100%;
  min-width: 250px;
  height: 500px;
  margin: 0 auto 6em auto;
}
.location #map {
  width: 100%;
  height: 100%;
  border: 1px solid #f35000;
}
@media screen and (min-width: 768px) {
  .location {
    text-align: left;
    max-width: 650px;
    margin: 2em auto 0 auto;
  }
}

#map {
  color: #f35000;
}
#map h1 {
  font-size: 1rem;
}

.label-text {
  text-align: left;
  padding: 0 2em;
  margin-top: 3em;
}
.label-text h1 {
  font-size: 1.5rem;
}
.label-text a {
  color: #f35000;
}

form.contact {
  width: 100%;
  max-width: 650px;
  margin: 0 auto 4em auto;
  padding: 2em;
  color: #2a2a2a;
}
form.contact .input-container {
  display: flex;
  flex-direction: column;
  margin-bottom: 2em;
}
form.contact .input-container label {
  margin-bottom: 1em;
  color: #ffffc0;
  text-transform: uppercase;
  font-weight: 600;
}
form.contact .input-container label::after {
  content: "*";
  color: #f35000;
  padding-left: 0.5em;
  font-size: 0.75rem;
}
form.contact .input-container label[for=subject]::after {
  display: none;
}
form.contact .input-container input,
form.contact .input-container select,
form.contact .input-container textarea {
  padding: 1em;
  background-color: #f6efeb;
}
form.contact .input-container input:focus-within,
form.contact .input-container textarea:focus-within,
form.contact .input-container select:focus-within {
  outline: #feea00 3px solid;
}
form.contact .input-container select {
  text-transform: capitalize;
}
form.contact .form__consent {
  text-align: center;
}
form.contact .form__consent p {
  color: #ffffc0;
  line-height: 1.75;
  display: block;
  margin-bottom: 2em;
}
form.contact .form__consent button {
  text-transform: uppercase;
  color: #f6efeb;
  font-weight: 700;
  font-size: 1rem;
}
form.contact .form__consent button[disabled] {
  opacity: 0.5;
}
form.contact .form__consent button:focus {
  outline: #f35000 1px solid;
}
form.contact .form__consent .form__consent-container {
  margin-bottom: 2em;
}
form.contact .form__consent .form__consent-container .checkbox-container {
  position: relative;
}
form.contact .form__consent .form__consent-container .checkbox-container input {
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0;
  cursor: pointer;
}
form.contact .form__consent .form__consent-container .checkbox-container .checkbox-custom {
  display: block;
  position: absolute;
  left: -10px;
  top: -5px;
  transform: translateX(-50px);
  height: 30px;
  width: 30px;
  background-color: #fff9f6;
  border: 3px solid #feea00;
  margin: 0 auto;
}
form.contact .form__consent .form__consent-container .checkbox-container .checkbox-custom:hover {
  background-color: #555;
  cursor: pointer;
}
form.contact .form__consent .form__consent-container .checkbox-container input:checked ~ .checkbox-custom {
  background-color: #555;
}
form.contact .form__consent .form__consent-container .checkbox-container .checkbox-custom::after {
  display: none;
  content: "";
  position: absolute;
  left: 7px;
  top: 4px;
  width: 5px;
  height: 10px;
  border: solid #fff9f6;
  border-width: 0 4px 4px 0;
  /* border-radius: 8px; */
  transform: rotate(45deg);
}
form.contact .form__consent .form__consent-container .checkbox-container input:checked ~ .checkbox-custom::after {
  display: block;
}
form.contact .form__consent a {
  display: block;
  color: #f35000;
  font-size: 0.75rem;
}
@media screen and (min-width: 992px) {
  form.contact {
    display: flex;
    width: 100%;
    max-width: 1200px;
  }
  form.contact .form__inputs {
    width: 60%;
    margin-right: 4em;
  }
  form.contact .form__inputs input,
  form.contact .form__inputs select {
    width: 60%;
  }
  form.contact .form__inputs textarea {
    width: 100%;
  }
  form.contact .form__consent {
    width: 40%;
    align-self: flex-end;
    margin-bottom: 2em;
  }
}

.policy {
  padding: 4em 1em;
}
@media (min-width: 576px) {
  .policy {
    padding: 4em 2em;
  }
}
@media (min-width: 768px) {
  .policy {
    padding: 8em 2em;
  }
}
.policy__content-container {
  width: 100%;
}
@media (min-width: 576px) {
  .policy__content-container {
    max-width: 55ch;
    margin: 0 auto;
  }
}
.policy__title {
  font-size: 1.5em;
}
.policy__section-title {
  font-size: 1.25em;
}

.error-container {
  text-align: center;
  margin: 6em 0;
}
.error-container h2 {
  margin-bottom: 2em;
}
.error-container a {
  display: block;
  max-width: 30%;
  margin: 0 auto;
  background-color: #f35000;
  color: #fff9f6;
  padding: 1em 2em;
}

@media screen and (min-width: 1200px) {
  .wrapper {
    max-width: 1200px;
    margin: 0 auto;
  }
}

.modal {
  display: none;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 4;
  background-color: #7a2800;
  opacity: 0.99;
  overflow-y: auto;
}
.modal--show {
  display: block;
}
.modal__content-container {
  width: 100%;
  height: 100%;
  font-size: 20px;
  padding: 2em;
}
.modal__heading {
  text-align: center;
}
.modal__heading__img-container {
  margin-bottom: 2em;
}
@media (min-width: 425px) {
  .modal__heading__img {
    max-width: 66%;
  }
}
@media (min-width: 768px) {
  .modal__heading__img {
    max-width: 33%;
  }
}
.modal__heading__text-container {
  max-width: 55ch;
  margin: 0 auto 2em;
}
.modal__heading__text {
  line-height: 1.5;
}
.modal__form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.modal__form__instruction {
  font-size: 18px;
  color: #feea00;
}
.modal__form__input-group {
  display: flex;
  flex-direction: column;
}
@media (min-width: 768px) {
  .modal__form__input-group {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin-bottom: 2em;
  }
}
.modal__form__input-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 18px;
  margin-bottom: 0.5em;
}
@media (min-width: 768px) {
  .modal__form__input-container {
    margin-right: 0.5em;
  }
}
.modal__form__input-container:last-of-type {
  margin-bottom: 1.5em;
}
@media (min-width: 768px) {
  .modal__form__input-container:last-of-type {
    margin-bottom: 0.5em;
    margin-right: 0;
  }
}
.modal__form__input-container input {
  width: 3em;
  text-align: center;
  color: #feea00;
  background-color: unset;
  border-bottom: 1px #feea00 solid;
}
.modal__form__btn {
  width: 100%;
  margin-bottom: 2em;
}
@media (min-width: 425px) {
  .modal__form__btn {
    max-width: 66%;
  }
}
@media (min-width: 768px) {
  .modal__form__btn {
    max-width: 33%;
  }
}
@media (min-width: 1920px) {
  .modal__form__btn {
    max-width: 18%;
  }
}

.cookie-consent {
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 6;
  width: 100%;
  padding: 2em 1em;
  background-color: #010101;
  border-radius: 5px 5px 0 0;
}
.cookie-consent--show {
  display: flex;
}
.cookie-consent--hide {
  display: none;
}
.cookie-consent__btn-container {
  display: flex;
  flex-direction: column;
}
@media (min-width: 768px) {
  .cookie-consent__btn-container {
    flex-direction: row;
    flex-flow: row-reverse;
  }
}
.cookie-consent__btn {
  width: 12em;
  margin-bottom: 1em;
}
@media (min-width: 768px) {
  .cookie-consent__btn {
    margin: 0 1em 0 0;
  }
}

.btn {
  text-align: center;
  letter-spacing: 1px;
  background-color: #7a2800;
  border-radius: 5px;
  box-shadow: 2px 2px 2px 0 rgba(0, 0, 0, 0.25);
  transition: transform ease-in 0.3s;
  padding: 0.5em 1em;
}
.btn--outline {
  background-color: unset;
  border: 1px #ffffc0 solid;
}
.btn--light {
  background-color: #ffffc0;
  color: #7a2800;
}
.btn:hover {
  transform: scale(1.0125);
  cursor: pointer;
}

.heading {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  margin-bottom: 2em;
}
.heading i {
  color: #feea00;
}
.heading h2,
.heading h3 {
  color: #2a2a2a;
}
.heading h3 {
  font-size: 1.1rem;
  font-weight: 300;
  margin: 0 0 0.5em 0;
}
.heading hr {
  width: 50%;
  height: 2px;
  background: #f35000;
}

.flash {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 7;
  width: 100%;
  animation: fadeOut 5s 2s forwards;
}
.flash__content-container {
  width: 95%;
  text-align: center;
  color: #2a2a2a;
  font-weight: 700;
  font-size: 18px;
  background-color: #fff9f6;
  border-radius: 5px;
  padding: 1em 2em;
  margin: 0.5em auto 0;
}
@media (min-width: 1024px) {
  .flash__content-container {
    max-width: 66%;
  }
}
@media (min-width: 1920px) {
  .flash__content-container {
    max-width: 33%;
  }
}
.flash__content-container--alert {
  background-color: rgba(255, 0, 0, 0.95);
  color: #fff;
}
.flash--hide {
  display: none;
}
.flash--alert {
  display: none;
}
.flash--alert--show {
  display: block;
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
/* 
  ### NOTE ###
  This is the base menu
*/
.menu {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  font-size: 0.75em;
}
@media (min-width: 768px) {
  .menu {
    justify-content: flex-end;
    font-size: 1em;
  }
}
.menu__item {
  min-width: 33px;
  margin-right: 1em;
  transition: transform 0.3s ease-in;
}
@media (min-width: 768px) {
  .menu__item {
    margin-right: 2em;
  }
}
.menu__item:last-child {
  margin-right: 0;
}
.menu__item--icon-only {
  align-self: center;
}
.menu__item__link-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
@media (min-width: 768px) {
  .menu__item__link-container {
    flex-direction: row-reverse;
    justify-content: flex-start;
  }
  .menu__item__link-container:hover {
    color: #feea00;
  }
}
.menu__item__text {
  text-align: center;
  text-transform: capitalize;
  margin: 0.5em auto 0;
}
@media (min-width: 768px) {
  .menu__item__text {
    margin: 0.5em 0.5em 0 0;
  }
}
.menu__item__btn {
  background-color: unset;
  color: #ffffc0;
}

/* 
  ### NOTE ###
  This is the menu that pops-up when toggling the dotted menu link in the base menu. It is positioned relative to the navbar element in the header section
*/
.menu-pop-up {
  display: none;
  position: absolute;
  top: 0;
  right: 0;
  transform: translate(-15%, -93%);
  background-color: #555;
  border-radius: 5px;
  padding: 1em 0.5em;
}
@media (min-width: 768px) {
  .menu-pop-up {
    top: unset;
    bottom: 0;
    transform: translate(-33%, 96%);
  }
}
.menu-pop-up--active {
  display: block;
  animation: fade-in 500ms forwards;
}
.menu-pop-up--closing {
  animation: fade-out 500ms forwards;
}
.menu-pop-up__item {
  padding: 1em;
}
.menu-pop-up__item:hover {
  background-color: #202020;
  border-radius: 5px;
}
.menu-pop-up__item--disabled {
  pointer-events: none;
}
.menu-pop-up__item--disabled a {
  color: grey;
}
.menu-pop-up__item__link-container {
  display: flex;
  flex-direction: row-reverse;
  justify-content: flex-start;
  align-items: center;
}
.menu-pop-up__item__text {
  text-align: right;
  text-transform: capitalize;
  margin: 0 1em 0 0;
}

.scroll-down-icon {
  display: none;
  position: absolute;
  bottom: 25%;
  left: 50%;
  opacity: 0;
  animation: moveArrow 3s ease-out infinite;
}
.scroll-down-icon--active {
  display: block;
}

.testimonial {
  background-color: #f6efeb;
  color: #2a2a2a;
  padding: 4em 1em;
}
@media (min-width: 576px) {
  .testimonial {
    padding: 4em 2em;
  }
}
.testimonial__heading {
  margin-bottom: 4em !important;
}
.testimonial__heading hr {
  width: 50%;
}
.testimonial__content-container {
  text-align: center;
  transition: opacity ease-in-out 0.3s;
}
@media (min-width: 768px) {
  .testimonial__content-container {
    display: flex;
  }
}
.testimonial__quote {
  margin-bottom: 4em;
}
@media (min-width: 768px) {
  .testimonial__quote {
    flex: 0 0 50%;
  }
}
.testimonial__quote__text {
  text-align: left;
  line-height: 1.75;
  padding: 1em 0;
}
@media (min-width: 768px) {
  .testimonial__quote__text {
    padding: 1em 1.5em;
    max-width: 55ch;
    margin: 0 auto;
  }
}
.testimonial__quote__author {
  display: flex;
  justify-content: flex-start;
  text-align: left;
  color: #f35000;
}
@media (min-width: 768px) {
  .testimonial__quote__author {
    justify-content: center;
  }
}
.testimonial__quote__author i.fa-angle-right {
  color: #feea00;
  margin-right: 0.5em;
}

@media screen and (min-width: 768px) {
  .testimonial__content {
    display: flex;
    padding-right: 0;
    padding-left: 4em;
  }
  .testimonial__container {
    flex: 1;
  }
  .testimonial__container + .testimonial__container {
    margin-left: 1em;
  }
  .testimonial__container {
    display: flex;
    flex-wrap: wrap;
  }
  .testimonial__container i {
    margin-right: 0.5em;
  }
  .testimonial__container p.quote {
    width: 70%;
    padding-top: 0;
    margin: 0;
    font-size: 1rem;
  }
  .testimonial__container p.author {
    display: flex;
    margin-left: 4em;
    margin-top: 0;
    text-align: left;
  }
}
/*
    #########
    DEV NOTES
    #########

- mobile first approach
- landing class gets added through js on homepage only
- the navbar has two menu components: see _menu.scss & menu-pop-up.scss
*/
.header {
  position: fixed;
  bottom: 0;
  z-index: 3;
  width: 100%;
  background-color: #7a2800;
  border-top: 2px solid #feea00;
}
@media (min-width: 768px) {
  .header {
    bottom: unset;
    top: 0;
    background-color: rgba(0, 0, 0, 0.66);
    border-top: unset;
  }
}
@media (min-width: 768px) {
  .header__content-container {
    display: flex;
  }
}
.header__logo-container {
  display: none;
}
@media (min-width: 768px) {
  .header__logo-container {
    display: block;
    flex: 0 0 20%;
    text-align: center;
    padding: 0.5 2em;
  }
}
.header__logo {
  width: 66%;
}
.header__logo--hide {
  display: none;
}
.header__navbar {
  position: relative;
  width: 100%;
  padding: 1em 2em 0.5em 2em;
}
@media (min-width: 768px) {
  .header__navbar {
    width: unset;
    flex: 1;
    padding: 1em 2em 1em 2em;
  }
}
.header__navbar--js-small {
  padding: 0.25em 1em;
}

.hero {
  height: calc(var(--vh, 1vh) * 100);
  overflow: hidden;
}
.hero__content-container {
  position: relative;
  height: calc(var(--innerHeight) - var(--menuHeight));
}
@media (min-width: 576px) {
  .hero__content-container {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    flex-direction: row;
    padding: 2em;
  }
}
.hero__cta {
  width: 100%;
  text-align: center;
  color: #ffffc0;
  padding: 2em 2em 0 2em;
}
@media (min-width: 576px) {
  .hero__cta {
    width: 50%;
  }
}
.hero__cta__logo {
  max-width: 45%;
  margin-bottom: 1em;
}
.hero__cta__heading {
  display: block;
}
.hero__cta__heading--hide {
  display: none;
}
@media (min-width: 576px) {
  .hero__cta__heading {
    margin-bottom: 2em;
  }
}
.hero__cta__heading__title {
  font-size: 1.5em;
  color: #feea00;
}
@media (min-width: 1024px) {
  .hero__cta__heading__title {
    font-size: 2em;
  }
}
.hero__cta__heading__subtitle {
  font-size: 1em;
  color: #d8d8d8;
  font-style: italic;
}
@media (min-width: 1024px) {
  .hero__cta__heading__subtitle {
    font-size: 1.5em;
  }
}
.hero__cta__btn {
  display: none;
}
@media (min-width: 576px) {
  .hero__cta__btn {
    display: block;
    max-width: 12em;
    margin: 0 auto;
  }
}
.hero__brand-image-container {
  text-align: center;
}
@media (min-width: 576px) {
  .hero__brand-image-container {
    width: 50%;
  }
}
.hero__brand-image {
  display: block;
  margin: 0 auto;
  width: 66%;
}
@media (min-width: 576px) {
  .hero__brand-image {
    width: 100%;
  }
}
@media (min-width: 1024px) {
  .hero__brand-image {
    width: 66%;
  }
}

.link-section {
  background-color: #fff9f6;
  padding: 4em 1em;
}
@media (min-width: 425px) {
  .link-section {
    padding: 4em 2em;
  }
}
.link-section__content-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
@media (min-width: 1024px) {
  .link-section__content-container {
    flex-direction: row;
    justify-content: space-around;
  }
}
.link-section__link {
  flex: 1;
  opacity: 1;
  box-shadow: 2px 2px 2px 0 rgba(0, 0, 0, 0.25);
  border-radius: 9px;
  transition: all 0.3s ease-in;
}
@media (min-width: 1024px) {
  .link-section__link {
    max-width: 40%;
  }
}
.link-section__link--reveal {
  opacity: 1;
}
.link-section__link:first-of-type {
  margin-bottom: 4em;
}
@media (min-width: 1024px) {
  .link-section__link:first-of-type {
    margin-bottom: 0;
  }
}
.link-section__link:hover {
  cursor: pointer;
  box-shadow: 2px 2px 2px 0 #f35000;
}
.link-section__link__content {
  padding: 0 1em;
}
@media (min-width: 576px) {
  .link-section__link__content {
    padding: 0 2em;
  }
}

.history {
  background-color: #f6efeb;
}
.history__content-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 4em 1em;
  margin: 0 auto;
}
@media (min-width: 425px) {
  .history__content-container {
    padding: 4em 2em;
  }
}
@media (min-width: 1024px) {
  .history__content-container {
    flex-direction: row;
    justify-content: space-evenly;
    align-items: flex-start;
  }
}
.history__heading {
  padding: 0 1em;
}
@media (min-width: 576px) {
  .history__heading {
    padding: 0 2em;
  }
}
.history__image-container {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  text-align: center;
}
.history__image-container figure {
  margin: 0;
}
.history__image-container figure:first-of-type {
  margin-bottom: 2em;
}
.history__image-container figure img {
  border-radius: 9px;
}
@media (min-width: 1024px) {
  .history__image-container figure img {
    width: 63%;
  }
}
@media (min-width: 1920px) {
  .history__image-container figure img {
    width: 57%;
  }
}

.newsletter {
  background-color: #fff9f6;
  padding: 4em 1em;
}
.newsletter__content-container {
  padding: 4em 1em;
}
@media (min-width: 425px) {
  .newsletter__content-container {
    padding: 4em 2em;
  }
}
@media (min-width: 768px) {
  .newsletter__content-container {
    max-width: 66%;
    margin: 0 auto;
  }
}
.newsletter__input-container {
  width: 100%;
}
@media (min-width: 768px) {
  .newsletter__input-container {
    max-width: 54%;
    margin: 0 auto;
  }
}
.newsletter__form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.newsletter__form__input-email {
  width: 80%;
  font-size: 1rem;
  color: #2a2a2a;
  background-color: #f6efeb;
  border: #f35000 1px solid;
  padding: 1em;
  margin-bottom: 0.5em;
}
.newsletter__form__input-email::-moz-placeholder {
  color: #2a2a2a;
}
.newsletter__form__input-email::placeholder {
  color: #2a2a2a;
}
.newsletter__form__input-email:focus-within {
  outline: #f35000 1px solid;
}
.newsletter__form__consent-container {
  width: 80%;
  color: #2a2a2a;
  font-size: 1rem;
  line-height: 1.75;
  text-align: center;
}
.newsletter__form__consent-text {
  text-align: center;
  margin-bottom: 2em;
}
.newsletter__form__consent-text a {
  color: #f35000;
  text-decoration: underline;
}
.newsletter__form__btn {
  text-transform: uppercase;
  color: #f6efeb;
}
.newsletter__form__btn:disabled {
  opacity: 0.5;
}

.footer {
  position: relative;
  background: #202020;
  border-top: 4px #feea00 solid;
}
.footer__content-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: 8em 2em 8em 2em;
  /* 
      extra padding on bottom to create space for fixed header 
      bottom menu on mobile devices
  */
}
@media (min-width: 576px) {
  .footer__content-container {
    flex-direction: row;
    flex-wrap: wrap;
  }
}
@media (min-width: 768px) {
  .footer__content-container {
    padding: 8em 2em 1em 2em;
  }
}
.footer h3 {
  font-size: 1.25rem;
  font-weight: 300;
  margin: 0 0 0.5em 0;
}
.footer hr {
  width: 70%;
  height: 2px;
  background-color: #f35000;
  margin-bottom: 2em;
}
.footer__social-media {
  margin-bottom: 4em;
}
.footer__social-media a + a {
  margin-left: 2em;
}
@media (min-width: 576px) {
  .footer__social-media {
    width: 50%;
  }
}
.footer__contact {
  margin-bottom: 4em;
}
@media (min-width: 576px) {
  .footer__contact {
    width: 50%;
    margin-bottom: 0.5em;
  }
}
.footer__legal-links {
  margin-bottom: 4em;
}
.footer__legal-links ul li {
  text-align: center;
  margin-bottom: 1em;
}
.footer__legal-links ul li a {
  text-decoration: underline;
}
@media (min-width: 576px) {
  .footer__legal-links {
    width: 100%;
    margin-top: 2em;
  }
}
.footer__address {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-bottom: 4em;
}
.footer__address img {
  width: 55%;
}
@media (min-width: 576px) {
  .footer__address img {
    width: 40%;
  }
}
@media (min-width: 1024px) {
  .footer__address img {
    width: 33%;
  }
}
.footer__address address {
  width: 200px;
  margin: 0;
}
.footer__copyright {
  font-size: 0.75rem;
}
.footer__copyright hr {
  background-color: #ffffc0;
}
@media (min-width: 576px) {
  .footer__copyright hr {
    width: 95%;
  }
}
@media (min-width: 576px) {
  .footer__copyright {
    width: 100%;
  }
}
.footer__credits {
  font-size: 0.75rem;
  color: #f35000;
}
.footer__credits p {
  margin-bottom: 0;
}
@media (min-width: 576px) {
  .footer__credits {
    width: 100%;
  }
}
.footer__nav-up {
  display: none;
  position: absolute;
  left: 50%;
  top: 15%;
  transform: translateX(-50%);
}
@media (min-width: 1024px) {
  .footer__nav-up {
    display: block;
  }
}
.footer__nav-up__container {
  position: relative;
  width: 50px;
  height: 50px;
  opacity: 0.7;
  background-color: #feea00;
  border-radius: 50%;
  transition: all 0.5s ease-in-out;
}
.footer__nav-up__container:hover {
  opacity: 0.8;
  transform: scale(1.0125);
  background-color: #f35000;
}
.footer__nav-up__figure {
  position: absolute;
  left: 20%;
  top: -10%;
  border-top: 15px solid transparent;
  border-right: 15px solid transparent;
  border-bottom: 25px solid #030303;
  border-left: 15px solid transparent;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */