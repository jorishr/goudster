/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
  margin: 0; /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type=button],
input[type=reset],
input[type=submit] {
  -webkit-appearance: button; /* 2 */
  cursor: pointer; /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type=checkbox],
input[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type=search] {
  -webkit-appearance: textfield; /* 1 */ /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* MEDIA QUERY MIXINS - START*/
/* MEDIA QUERY MIXINS - END*/
* {
  padding: 0;
  border: 0;
  box-sizing: border-box;
}

html {
  height: 100%;
  scroll-behavior: smooth;
}

body {
  width: 100%;
  height: 100%;
  font-family: "Montserrat", sans-serif;
  font-weight: 400;
  background-color: #010101;
  color: #ffffc0;
  display: flex;
  flex-direction: column;
}
body .page-content {
  flex-grow: 1;
}

a {
  text-decoration: none;
  color: #ffffc0;
}

img {
  width: 100%;
  max-width: 100%;
  height: auto;
}

ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

h3 {
  line-height: 1.75;
}

p {
  line-height: 1.5;
}

.text-emphasis {
  font-style: italic;
}

.antispm {
  display: none;
}

noscript::before {
  content: "Om deze website te bezoeken moet je webbrowser JavaScript ondersteunen en toestaan.";
  font-style: italic;
  font-weight: bolder;
  font-size: 1.25rem;
  text-align: center;
  color: #f35000;
  background-color: #010101;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  padding: 1em 0;
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
@keyframes moveArrow {
  25% {
    opacity: 0.85;
  }
  33.3% {
    opacity: 1;
    transform: translateY(2.28rem);
  }
  66.6% {
    opacity: 1;
    transform: translateY(3.12rem);
  }
  100% {
    opacity: 0;
    transform: translateY(4.8rem) scale(0.5);
  }
}
.timeline {
  padding: 4em 1em;
}
@media (min-width: 425px) {
  .timeline {
    padding: 4em 2em;
  }
}
@media (min-width: 768px) {
  .timeline {
    padding: 8em 2em;
  }
}
.timeline__intro {
  margin: 0 0 4em 0;
}
@media (min-width: 768px) {
  .timeline__intro {
    max-width: 55ch;
    margin: 0 auto 4em;
  }
}
.timeline__intro__title {
  color: #f35000;
  text-transform: capitalize;
  text-align: center;
  margin-bottom: 1em;
}
.timeline__menu-container {
  margin-bottom: 4em;
}
@media (min-width: 576px) {
  .timeline__menu-container {
    max-width: 21em;
    margin: 0 auto 4em;
  }
}
.timeline__menu {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: #555;
  border-radius: 5px;
  padding: 1em;
  margin: 0;
}
.timeline__menu__item {
  width: 100%;
  background-color: #202020;
  margin-bottom: 0.5em;
}
.timeline__menu__item__link {
  display: block;
  text-align: center;
  transition: all 0.5s ease-in-out;
  padding: 1em 1.5em;
}
.timeline__menu__item__link:hover {
  background-color: #ffffc0;
  color: #202020;
}
.timeline__content-container {
  position: relative;
}
.timeline__content-container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 10px;
  width: 0.375em;
  height: 99.6%;
  background-color: #f35000;
  border-radius: 1em;
}
@media (min-width: 1024px) {
  .timeline__content-container::before {
    left: 50%;
    transform: translateX(-50%);
  }
}
.timeline__item {
  position: relative;
  opacity: 0;
  transition: opacity 0.35s ease-in;
  padding: 1.5em 0 0 1.5em;
  margin: 0 auto 4em;
}
.timeline__item--reveal {
  opacity: 1;
}
.timeline__item::before {
  content: "";
  position: absolute;
  left: 2.5px;
  top: 1.5em;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: #feea00;
}
@media (min-width: 1024px) {
  .timeline__item--left {
    right: 50%;
    transform: translateX(50%);
    width: 50%;
    padding: 1.5em 1.5em 0 0;
  }
  .timeline__item--left::before {
    width: 27px;
    height: 27px;
    left: unset;
    right: -0.825em;
  }
}
@media (min-width: 1024px) {
  .timeline__item--right {
    left: 50%;
    transform: translateX(-50%);
    width: 50%;
  }
  .timeline__item--right::before {
    width: 27px;
    height: 27px;
    left: -0.825em;
  }
}
.timeline__item__scroll-up {
  position: absolute;
  bottom: 0;
  right: 0;
  margin: 0 0.25em 0.25em 0;
}
@media (min-width: 768px) {
  .timeline__item__scroll-up {
    right: 50%;
    transform: translateX(50%);
    margin: 0 0 0.5em 0;
  }
}
.timeline__item__scroll-up a {
  color: #555;
}
.timeline__item__content-container {
  background-color: #f6efeb;
  color: #2a2a2a;
  border-radius: 0.5em;
  padding: 0.5em;
}
@media (min-width: 768px) {
  .timeline__item__content-container {
    padding: 2em;
  }
}
.timeline__item__title {
  text-align: center;
  text-transform: capitalize;
}
.timeline__item__blockquote {
  font-style: italic;
  line-height: 1.5;
  margin: 0;
}
.timeline__item__blockquote:first-of-type {
  margin-bottom: 0.5em;
}
.timeline__item__image {
  display: block;
}
@media (min-width: 768px) {
  .timeline__item__image {
    width: 82%;
    margin: 0 auto;
  }
}
@media (min-width: 768px) {
  .timeline__credits {
    max-width: 55ch;
    margin: 0 auto 4em;
  }
}
.timeline__credits__title {
  text-align: center;
}

.info__title,
.info__content-text,
.info__contact {
  padding: 0 2em;
  max-width: 500px;
  margin: 0 auto;
}

.info__title {
  width: 100%;
  margin-top: 3em;
  line-height: 1.75;
  text-align: center;
}
.info__title h1 {
  font-size: 1.5rem;
  text-align: center;
  text-transform: uppercase;
}

.info__content-images {
  padding: 1em 0;
  text-align: center;
}
.info__content-images img {
  width: auto;
  height: 100px;
}

.info__content-text,
.info__contact {
  line-height: 1.75;
}

.info__content-text {
  margin-bottom: 4em;
}

.info__contact p {
  color: #f35000;
}
.info__contact hr {
  background-color: #7a2800;
  height: 3px;
  width: 200px;
  margin: 0;
}

@media screen and (min-width: 768px) {
  .info__content {
    display: flex;
    padding: 0 1em;
    justify-content: space-evenly;
    margin-bottom: 2em;
  }
  .info__content .info__content-text {
    order: 1;
    margin: unset;
  }
  .info__content .info__content-images {
    order: 2;
    margin: unset;
    display: flex;
    flex-direction: column;
  }
  .info__content .info__content-images img {
    width: 80%;
    height: auto;
    margin-bottom: 1em;
  }
}
@media screen and (min-width: 992px) {
  .info__contact {
    text-align: left;
    margin: 0 auto 0 0;
  }
}
.location {
  padding: 4em 1em;
}
@media (min-width: 576px) {
  .location {
    padding: 4em 2em;
  }
}
@media (min-width: 768px) {
  .location {
    padding: 8em 2em;
  }
}
.location__content-container {
  margin-bottom: 4em;
}
@media (min-width: 768px) {
  .location__intro {
    max-width: 55ch;
    margin: 0 auto;
  }
}
.location__intro__socials-insert {
  margin: 0 auto 4em;
}
.location__title {
  font-size: 1.5em;
  text-transform: capitalize;
  text-align: center;
  margin-bottom: 1em;
}
.location__section-title {
  text-transform: capitalize;
  text-align: center;
  font-size: 1.25em;
  margin-bottom: 1em;
}
.location__btn {
  display: block;
  width: 12em;
  margin: 0 auto;
  text-transform: capitalize;
}
.location__map-container {
  text-align: center;
  margin: 0 auto 6em auto;
}
.location__map {
  width: 100%;
  min-width: 250px;
  height: 100%;
  min-height: 500px;
  border: 2px solid #f35000;
  color: #f35000;
}

.contact__content-container {
  padding: 4em 1em;
}
@media (min-width: 425px) {
  .contact__content-container {
    padding: 4em 2em;
  }
}
@media (min-width: 768px) {
  .contact__content-container {
    padding: 8em 2em;
  }
}
.contact__intro {
  margin-bottom: 4em;
}
@media (min-width: 768px) {
  .contact__intro {
    max-width: 75ch;
    margin: 0 auto 4em;
  }
}
.contact__intro__title {
  font-size: 1.5em;
  text-align: center;
  margin-bottom: 2em;
}
.contact__intro__text__link > a {
  color: #f35000;
}
.contact__form {
  width: 100%;
  margin: 0 auto 4em;
}
.contact__form__anti-spam {
  display: none;
}
.contact__form__content-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  color: #2a2a2a;
}
.contact__form__input-container {
  display: flex;
  flex-direction: column;
  margin-bottom: 2em;
  width: 100%;
}
@media (min-width: 768px) {
  .contact__form__input-container {
    max-width: 55ch;
    margin: 0 auto 2em;
  }
}
.contact__form__label {
  text-transform: uppercase;
  font-weight: 600;
  color: #ffffc0;
  margin-bottom: 1em;
}
.contact__form__label::after {
  content: "*";
  color: #f35000;
  padding-left: 0.5em;
  font-size: 0.75rem;
}
.contact__form__label[for=subject]::after {
  display: none;
}
.contact__form__input, .contact__form__select, .contact__form__textarea {
  background-color: #f6efeb;
  padding: 1em;
}
.contact__form__input:focus-within, .contact__form__select:focus-within, .contact__form__textarea:focus-within {
  outline: #feea00 0.1875em solid;
}
.contact__form__select {
  text-transform: capitalize;
}
.contact__form__select:hover {
  cursor: pointer;
}
@media (min-width: 768px) {
  .contact__form__consent-container {
    max-width: 55ch;
    margin: 0 auto 2em;
  }
}
.contact__form__consent-text > a {
  color: #f35000;
}
.contact__form__submit-container {
  padding: 1em;
}
.contact__form__btn {
  position: relative;
  top: -0.1875em;
  font-weight: 700;
  font-size: 1em;
  text-transform: uppercase;
  color: #f6efeb;
  margin-left: 4em;
}
.contact__form__btn[disabled] {
  opacity: 0.7;
}

.policy {
  padding: 4em 1em;
}
@media (min-width: 576px) {
  .policy {
    padding: 4em 2em;
  }
}
@media (min-width: 768px) {
  .policy {
    padding: 8em 2em;
  }
}
.policy__content-container {
  width: 100%;
}
@media (min-width: 576px) {
  .policy__content-container {
    max-width: 55ch;
    margin: 0 auto;
  }
}
.policy__title {
  font-size: 1.5em;
}
.policy__section-title {
  font-size: 1.25em;
}

.error {
  padding: 8em 1em;
}
@media (min-width: 576px) {
  .error {
    padding: 8em 2em;
  }
}
@media (min-width: 768px) {
  .error {
    padding: 16em 2em;
  }
}
.error__content-container {
  min-height: 66vh;
  text-align: center;
}
@media (min-width: 768px) {
  .error__content-container {
    max-width: 55ch;
    margin: 0 auto;
  }
}
.error__msg {
  font-size: 1.5em;
  text-align: center;
  margin-bottom: 2em;
}
.error__status {
  font-size: 1.25em;
  text-align: center;
  margin-bottom: 2em;
}
.error__btn {
  display: block;
  width: 12em;
  padding: 1em 1.5em !important;
  margin: 0 auto;
}

@media screen and (min-width: 1200px) {
  .wrapper {
    max-width: 1200px;
    margin: 0 auto;
  }
}

.modal {
  display: none;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 4;
  background-color: #7a2800;
  opacity: 0.99;
  overflow-y: auto;
}
.modal--show {
  display: block;
}
.modal__content-container {
  width: 100%;
  height: 100%;
  font-size: 20px;
  padding: 2em;
}
.modal__heading {
  text-align: center;
}
.modal__heading__img-container {
  margin-bottom: 2em;
}
@media (min-width: 425px) {
  .modal__heading__img {
    max-width: 66%;
  }
}
@media (min-width: 768px) {
  .modal__heading__img {
    max-width: 33%;
  }
}
.modal__heading__text-container {
  max-width: 55ch;
  margin: 0 auto 2em;
}
.modal__heading__text {
  line-height: 1.5;
}
.modal__form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.modal__form__instruction {
  font-size: 18px;
  color: #feea00;
}
.modal__form__input-group {
  display: flex;
  flex-direction: column;
}
@media (min-width: 768px) {
  .modal__form__input-group {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin-bottom: 2em;
  }
}
.modal__form__input-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 18px;
  margin-bottom: 0.5em;
}
@media (min-width: 768px) {
  .modal__form__input-container {
    margin-right: 0.5em;
  }
}
.modal__form__input-container:last-of-type {
  margin-bottom: 1.5em;
}
@media (min-width: 768px) {
  .modal__form__input-container:last-of-type {
    margin-bottom: 0.5em;
    margin-right: 0;
  }
}
.modal__form__input-container input {
  width: 3em;
  text-align: center;
  color: #feea00;
  background-color: unset;
  border-bottom: 1px #feea00 solid;
}
.modal__form__btn {
  width: 100%;
  margin-bottom: 2em;
}
@media (min-width: 425px) {
  .modal__form__btn {
    max-width: 66%;
  }
}
@media (min-width: 768px) {
  .modal__form__btn {
    max-width: 33%;
  }
}
@media (min-width: 1920px) {
  .modal__form__btn {
    max-width: 18%;
  }
}

.cookie-consent {
  display: none;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 6;
  width: 100%;
  padding: 2em 1em;
  background-color: #010101;
  border-radius: 5px 5px 0 0;
}
.cookie-consent--show {
  display: flex;
}
.cookie-consent__btn-container {
  display: flex;
  flex-direction: column;
}
@media (min-width: 768px) {
  .cookie-consent__btn-container {
    flex-direction: row;
    flex-flow: row-reverse;
  }
}
.cookie-consent__btn {
  width: 12em;
  margin-bottom: 1em;
}
@media (min-width: 768px) {
  .cookie-consent__btn {
    margin: 0 1em 0 0;
  }
}

.btn {
  text-align: center;
  letter-spacing: 1px;
  background-color: #7a2800;
  border-radius: 5px;
  box-shadow: 2px 2px 2px 0 rgba(0, 0, 0, 0.25);
  transition: transform ease-in 0.3s;
  padding: 0.5em 1em;
}
.btn--outline {
  background-color: unset;
  border: 1px #ffffc0 solid;
}
.btn--light {
  background-color: #ffffc0;
  color: #7a2800;
}
.btn:hover {
  transform: scale(1.0125);
  cursor: pointer;
}

.heading {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  margin-bottom: 2em;
}
.heading i {
  color: #feea00;
}
.heading h2,
.heading h3 {
  color: #2a2a2a;
}
.heading h3 {
  font-size: 1.1rem;
  font-weight: 300;
  margin: 0 0 0.5em 0;
}
.heading hr {
  width: 50%;
  height: 2px;
  background: #f35000;
}

.flash {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 7;
  width: 100%;
  animation: fadeOut 5s 2s forwards;
}
.flash__content-container {
  width: 95%;
  text-align: center;
  color: #2a2a2a;
  font-weight: 700;
  font-size: 18px;
  background-color: #fff9f6;
  border-radius: 5px;
  padding: 1em 2em;
  margin: 0.5em auto 0;
}
@media (min-width: 1024px) {
  .flash__content-container {
    max-width: 66%;
  }
}
@media (min-width: 1920px) {
  .flash__content-container {
    max-width: 33%;
  }
}
.flash__content-container--alert {
  background-color: rgba(255, 0, 0, 0.95);
  color: #fff;
}
.flash--hide {
  display: none;
}
.flash--alert {
  display: none;
}
.flash--alert--show {
  display: block;
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
/* 
  ### NOTE ###
  This is the base menu
*/
.menu {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  font-size: 0.75em;
}
@media (min-width: 768px) {
  .menu {
    justify-content: flex-end;
    font-size: 1em;
  }
}
.menu__item {
  min-width: 33px;
  margin-right: 1em;
  transition: transform 0.3s ease-in;
}
@media (min-width: 768px) {
  .menu__item {
    margin-right: 2em;
  }
}
.menu__item:last-child {
  margin-right: 0;
}
.menu__item--icon-only {
  align-self: center;
}
.menu__item__link-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
@media (min-width: 768px) {
  .menu__item__link-container {
    flex-direction: row-reverse;
    justify-content: flex-start;
  }
  .menu__item__link-container:hover {
    color: #feea00;
  }
}
.menu__item__text {
  text-align: center;
  text-transform: capitalize;
  margin: 0.5em auto 0;
}
@media (min-width: 768px) {
  .menu__item__text {
    margin: 0.5em 0.5em 0 0;
  }
}
.menu__item__btn {
  background-color: unset;
  color: #ffffc0;
}

/* 
  ### NOTE ###
  This is the menu that pops-up when toggling the dotted menu link in the base menu. It is positioned relative to the navbar element in the header section
*/
.menu-pop-up {
  display: none;
  position: absolute;
  top: 0;
  right: 0;
  transform: translate(-15%, -93%);
  background-color: #555;
  border-radius: 5px;
  padding: 1em 0.5em;
}
@media (min-width: 768px) {
  .menu-pop-up {
    top: unset;
    bottom: 0;
    transform: translate(-33%, 96%);
  }
}
.menu-pop-up--active {
  display: block;
  animation: fade-in 500ms forwards;
}
.menu-pop-up--closing {
  animation: fade-out 500ms forwards;
}
.menu-pop-up__item {
  padding: 1em;
}
.menu-pop-up__item:hover {
  background-color: #202020;
  border-radius: 5px;
}
.menu-pop-up__item--disabled {
  pointer-events: none;
}
.menu-pop-up__item--disabled a {
  color: grey;
}
.menu-pop-up__item__link-container {
  display: flex;
  flex-direction: row-reverse;
  justify-content: flex-start;
  align-items: center;
}
.menu-pop-up__item__text {
  text-align: right;
  text-transform: capitalize;
  margin: 0 1em 0 0;
}

.scroll-down-icon {
  display: none;
  position: absolute;
  bottom: 25%;
  left: 50%;
  opacity: 0;
  animation: moveArrow 3s ease-out infinite;
}
.scroll-down-icon--active {
  display: block;
}

.socials-insert {
  width: 15em;
}
.socials-insert__divider {
  width: 50%;
  height: 0.125em;
  background-color: #f35000;
  margin-bottom: 1em;
}
.socials-insert__link-container {
  width: 50%;
  display: flex;
  justify-content: space-evenly;
  margin: 0 auto;
}
.custom-checkbox {
  position: relative;
}
.custom-checkbox__input {
  /* 
      we use the functionality of the input element but the styling is entirely done with the span element below 
  */
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0;
  cursor: pointer;
}
.custom-checkbox__input:checked ~ span {
  background-color: #555;
}
.custom-checkbox__input:checked ~ span::after {
  display: block;
}
.custom-checkbox__span {
  display: block;
  position: absolute;
  height: 1.875em;
  width: 1.875em;
  background-color: #fff9f6;
  border: 0.1875em solid #feea00;
  margin: 0 auto;
}
.custom-checkbox__span:hover {
  background-color: #555;
  cursor: pointer;
}
.custom-checkbox__span::after {
  display: none;
  content: "";
  position: absolute;
  top: 0.25em;
  left: 0.4375em;
  width: 0.3125em;
  height: 0.625em;
  border: solid #fff9f6;
  border-width: 0 0.25em 0.25em 0;
  /* border-radius: 8px; */
  transform: rotate(45deg);
}

.testimonial {
  background-color: #f6efeb;
  color: #2a2a2a;
  padding: 4em 1em;
}
@media (min-width: 576px) {
  .testimonial {
    padding: 4em 2em;
  }
}
.testimonial__heading {
  margin-bottom: 4em !important;
}
.testimonial__heading hr {
  width: 50%;
}
.testimonial__content-container {
  text-align: center;
  transition: opacity ease-in-out 0.3s;
}
@media (min-width: 768px) {
  .testimonial__content-container {
    display: flex;
  }
}
.testimonial__quote {
  margin-bottom: 4em;
}
@media (min-width: 768px) {
  .testimonial__quote {
    flex: 0 0 50%;
  }
}
.testimonial__quote__text {
  text-align: left;
  line-height: 1.75;
  padding: 1em 0;
}
@media (min-width: 768px) {
  .testimonial__quote__text {
    padding: 1em 1.5em;
    max-width: 55ch;
    margin: 0 auto;
  }
}
.testimonial__quote__author {
  display: flex;
  justify-content: flex-start;
  text-align: left;
  color: #f35000;
}
@media (min-width: 768px) {
  .testimonial__quote__author {
    justify-content: center;
  }
}
.testimonial__quote__author i.fa-angle-right {
  color: #feea00;
  margin-right: 0.5em;
}

@media screen and (min-width: 768px) {
  .testimonial__content {
    display: flex;
    padding-right: 0;
    padding-left: 4em;
  }
  .testimonial__container {
    flex: 1;
  }
  .testimonial__container + .testimonial__container {
    margin-left: 1em;
  }
  .testimonial__container {
    display: flex;
    flex-wrap: wrap;
  }
  .testimonial__container i {
    margin-right: 0.5em;
  }
  .testimonial__container p.quote {
    width: 70%;
    padding-top: 0;
    margin: 0;
    font-size: 1rem;
  }
  .testimonial__container p.author {
    display: flex;
    margin-left: 4em;
    margin-top: 0;
    text-align: left;
  }
}
/*
    #########
    DEV NOTES
    #########

- mobile first approach
- landing class gets added through js on homepage only
- the navbar has two menu components: see _menu.scss & menu-pop-up.scss
*/
.header {
  position: fixed;
  bottom: 0;
  z-index: 3;
  width: 100%;
  background-color: #7a2800;
  border-top: 2px solid #feea00;
}
@media (min-width: 768px) {
  .header {
    bottom: unset;
    top: 0;
    background-color: rgba(0, 0, 0, 0.66);
    border-top: unset;
  }
}
@media (min-width: 768px) {
  .header__content-container {
    display: flex;
  }
}
.header__logo-container {
  display: none;
}
@media (min-width: 768px) {
  .header__logo-container {
    display: block;
    flex: 0 0 20%;
    text-align: center;
    padding: 0.5 2em;
  }
}
.header__logo {
  width: 66%;
}
.header__logo--hide {
  display: none;
}
.header__navbar {
  position: relative;
  width: 100%;
  padding: 1em 2em 0.5em 2em;
}
@media (min-width: 768px) {
  .header__navbar {
    width: unset;
    flex: 1;
    padding: 1em 2em 1em 2em;
  }
}
.header__navbar--js-small {
  padding: 0.25em 1em;
}

.hero {
  height: calc(var(--vh, 1vh) * 100);
  overflow: hidden;
}
.hero__content-container {
  position: relative;
  height: calc(var(--innerHeight) - var(--menuHeight));
}
@media (min-width: 576px) {
  .hero__content-container {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    flex-direction: row;
    padding: 2em;
  }
}
.hero__cta {
  width: 100%;
  text-align: center;
  color: #ffffc0;
  padding: 2em 2em 0 2em;
}
@media (min-width: 576px) {
  .hero__cta {
    width: 50%;
  }
}
.hero__cta__logo {
  max-width: 45%;
  margin-bottom: 1em;
}
.hero__cta__heading {
  display: block;
}
.hero__cta__heading--hide {
  display: none;
}
@media (min-width: 576px) {
  .hero__cta__heading {
    margin-bottom: 2em;
  }
}
.hero__cta__heading__title {
  font-size: 1.5em;
  color: #feea00;
}
@media (min-width: 1024px) {
  .hero__cta__heading__title {
    font-size: 2em;
  }
}
.hero__cta__heading__subtitle {
  font-size: 1em;
  color: #d8d8d8;
  font-style: italic;
}
@media (min-width: 1024px) {
  .hero__cta__heading__subtitle {
    font-size: 1.5em;
  }
}
.hero__cta__btn {
  display: none;
}
@media (min-width: 576px) {
  .hero__cta__btn {
    display: block;
    max-width: 12em;
    margin: 0 auto;
  }
}
.hero__brand-image-container {
  text-align: center;
}
@media (min-width: 576px) {
  .hero__brand-image-container {
    width: 50%;
  }
}
.hero__brand-image {
  display: block;
  margin: 0 auto;
  width: 66%;
}
@media (min-width: 576px) {
  .hero__brand-image {
    width: 100%;
  }
}
@media (min-width: 1024px) {
  .hero__brand-image {
    width: 66%;
  }
}

.link-section {
  background-color: #fff9f6;
  padding: 4em 1em;
}
@media (min-width: 425px) {
  .link-section {
    padding: 4em 2em;
  }
}
.link-section__content-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
@media (min-width: 1024px) {
  .link-section__content-container {
    flex-direction: row;
    justify-content: space-around;
  }
}
.link-section__link {
  flex: 1;
  opacity: 1;
  box-shadow: 2px 2px 2px 0 rgba(0, 0, 0, 0.25);
  border-radius: 9px;
  transition: all 0.3s ease-in;
}
@media (min-width: 1024px) {
  .link-section__link {
    max-width: 40%;
  }
}
.link-section__link:first-of-type {
  margin-bottom: 4em;
}
@media (min-width: 1024px) {
  .link-section__link:first-of-type {
    margin-bottom: 0;
  }
}
.link-section__link:hover {
  cursor: pointer;
  box-shadow: 2px 2px 2px 0 #f35000;
}
.link-section__link__content {
  padding: 0 1em;
}
@media (min-width: 576px) {
  .link-section__link__content {
    padding: 0 2em;
  }
}

.history {
  background-color: #f6efeb;
}
.history__content-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 4em 1em;
  margin: 0 auto;
}
@media (min-width: 425px) {
  .history__content-container {
    padding: 4em 2em;
  }
}
@media (min-width: 1024px) {
  .history__content-container {
    flex-direction: row;
    justify-content: space-evenly;
    align-items: flex-start;
  }
}
.history__heading {
  padding: 0 1em;
}
@media (min-width: 576px) {
  .history__heading {
    padding: 0 2em;
  }
}
.history__image-container {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  text-align: center;
}
.history__image-container figure {
  margin: 0;
}
.history__image-container figure:first-of-type {
  margin-bottom: 2em;
}
.history__image-container figure img {
  border-radius: 9px;
}
@media (min-width: 1024px) {
  .history__image-container figure img {
    width: 63%;
  }
}
@media (min-width: 1920px) {
  .history__image-container figure img {
    width: 57%;
  }
}

.newsletter {
  background-color: #fff9f6;
  padding: 4em 1em;
}
.newsletter__content-container {
  padding: 4em 1em;
}
@media (min-width: 425px) {
  .newsletter__content-container {
    padding: 4em 2em;
  }
}
@media (min-width: 768px) {
  .newsletter__content-container {
    max-width: 66%;
    margin: 0 auto;
  }
}
.newsletter__input-container {
  width: 100%;
}
@media (min-width: 768px) {
  .newsletter__input-container {
    max-width: 54%;
    margin: 0 auto;
  }
}
.newsletter__form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.newsletter__form__input-email {
  width: 80%;
  font-size: 1rem;
  color: #2a2a2a;
  background-color: #f6efeb;
  border: #f35000 1px solid;
  padding: 1em;
  margin-bottom: 0.5em;
}
.newsletter__form__input-email::-moz-placeholder {
  color: #2a2a2a;
}
.newsletter__form__input-email::placeholder {
  color: #2a2a2a;
}
.newsletter__form__input-email:focus-within {
  outline: #f35000 1px solid;
}
.newsletter__form__consent-container {
  width: 80%;
  color: #2a2a2a;
  font-size: 1rem;
  line-height: 1.75;
  text-align: center;
}
.newsletter__form__consent-text {
  text-align: center;
  margin-bottom: 2em;
}
.newsletter__form__consent-text a {
  color: #f35000;
  text-decoration: underline;
}
.newsletter__form__btn {
  text-transform: uppercase;
  color: #f6efeb;
}
.newsletter__form__btn:disabled {
  opacity: 0.5;
}

.footer {
  position: relative;
  background: #202020;
  border-top: 4px #feea00 solid;
}
.footer__content-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: 8em 2em 8em 2em;
  /* 
      extra padding on bottom to create space for fixed header 
      bottom menu on mobile devices
  */
}
@media (min-width: 576px) {
  .footer__content-container {
    flex-direction: row;
    flex-wrap: wrap;
  }
}
@media (min-width: 768px) {
  .footer__content-container {
    padding: 8em 2em 1em 2em;
  }
}
.footer h3 {
  font-size: 1.25rem;
  font-weight: 300;
  margin: 0 0 0.5em 0;
}
.footer hr {
  width: 70%;
  height: 2px;
  background-color: #f35000;
  margin-bottom: 2em;
}
.footer__social-media {
  margin-bottom: 4em;
}
.footer__social-media a + a {
  margin-left: 2em;
}
@media (min-width: 576px) {
  .footer__social-media {
    width: 50%;
  }
}
.footer__contact {
  margin-bottom: 4em;
}
@media (min-width: 576px) {
  .footer__contact {
    width: 50%;
    margin-bottom: 0.5em;
  }
}
.footer__legal-links {
  margin-bottom: 4em;
}
.footer__legal-links ul li {
  text-align: center;
  margin-bottom: 1em;
}
.footer__legal-links ul li a {
  text-decoration: underline;
}
@media (min-width: 576px) {
  .footer__legal-links {
    width: 100%;
    margin-top: 2em;
  }
}
.footer__address {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-bottom: 4em;
}
.footer__address img {
  width: 55%;
}
@media (min-width: 576px) {
  .footer__address img {
    width: 40%;
  }
}
@media (min-width: 1024px) {
  .footer__address img {
    width: 33%;
  }
}
.footer__address address {
  width: 200px;
  margin: 0;
}
.footer__copyright {
  font-size: 0.75rem;
}
.footer__copyright hr {
  background-color: #ffffc0;
}
@media (min-width: 576px) {
  .footer__copyright hr {
    width: 95%;
  }
}
@media (min-width: 576px) {
  .footer__copyright {
    width: 100%;
  }
}
.footer__credits {
  font-size: 0.75rem;
  color: #f35000;
}
.footer__credits p {
  margin-bottom: 0;
}
@media (min-width: 576px) {
  .footer__credits {
    width: 100%;
  }
}
.footer__nav-up {
  display: none;
  position: absolute;
  left: 50%;
  top: 15%;
  transform: translateX(-50%);
}
@media (min-width: 1024px) {
  .footer__nav-up {
    display: block;
  }
}
.footer__nav-up__container {
  position: relative;
  width: 50px;
  height: 50px;
  opacity: 0.7;
  background-color: #feea00;
  border-radius: 50%;
  transition: all 0.5s ease-in-out;
}
.footer__nav-up__container:hover {
  opacity: 0.8;
  transform: scale(1.0125);
  background-color: #f35000;
}
.footer__nav-up__figure {
  position: absolute;
  left: 20%;
  top: -10%;
  border-top: 15px solid transparent;
  border-right: 15px solid transparent;
  border-bottom: 25px solid #030303;
  border-left: 15px solid transparent;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuc2Nzcy9ub3JtYWxpemUuc2NzcyIsIm1haW4uY3NzIiwibW9kdWxlcy9fbWl4aW5zLnNjc3MiLCJtb2R1bGVzL19nbG9iYWwuc2NzcyIsIm1vZHVsZXMvX3ZhcmlhYmxlcy5zY3NzIiwibW9kdWxlcy9fYW5pbWF0aW9ucy5zY3NzIiwibW9kdWxlcy9fcGFnZS1oaXN0b3J5LnNjc3MiLCJtb2R1bGVzL19wYWdlLWluZm8uc2NzcyIsIm1vZHVsZXMvX3BhZ2UtbG9jYXRpb24uc2NzcyIsIm1vZHVsZXMvX3BhZ2UtY29udGFjdC5zY3NzIiwibW9kdWxlcy9fcGFnZS1wb2xpY3kuc2NzcyIsIm1vZHVsZXMvX3BhZ2UtZXJyb3Iuc2NzcyIsIm1vZHVsZXMvX3dyYXBwZXIuc2NzcyIsIm1vZHVsZXMvY29tcG9uZW50cy9fbW9kYWwuc2NzcyIsIm1vZHVsZXMvY29tcG9uZW50cy9fY29va2llLWNvbnNlbnQuc2NzcyIsIm1vZHVsZXMvY29tcG9uZW50cy9fYnRucy5zY3NzIiwibW9kdWxlcy9jb21wb25lbnRzL19oZWFkaW5nLnNjc3MiLCJtb2R1bGVzL2NvbXBvbmVudHMvX2FsZXJ0LW1zZy5zY3NzIiwibW9kdWxlcy9jb21wb25lbnRzL19tZW51LnNjc3MiLCJtb2R1bGVzL2NvbXBvbmVudHMvX21lbnUtcG9wLXVwLnNjc3MiLCJtb2R1bGVzL2NvbXBvbmVudHMvX3Njcm9sbC1kb3duLWljb24uc2NzcyIsIm1vZHVsZXMvY29tcG9uZW50cy9fc29jaWFscy1pbnNlcnQuc2NzcyIsIm1vZHVsZXMvY29tcG9uZW50cy9fY3VzdG9tLWNoZWNrYm94LnNjc3MiLCJtb2R1bGVzL3NlY3Rpb25zL19zZWN0aW9uLXRlc3RpbW9uaWFsLnNjc3MiLCJtb2R1bGVzL3NlY3Rpb25zL19oZWFkZXIuc2NzcyIsIm1vZHVsZXMvc2VjdGlvbnMvX2hlcm8uc2NzcyIsIm1vZHVsZXMvc2VjdGlvbnMvX2xpbmstc2VjdGlvbi5zY3NzIiwibW9kdWxlcy9zZWN0aW9ucy9faGlzdG9yeS5zY3NzIiwibW9kdWxlcy9zZWN0aW9ucy9fbmV3c2xldHRlci5zY3NzIiwibW9kdWxlcy9zZWN0aW9ucy9fZm9vdGVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUVBQUE7QUFFQTs7OztFQUFBO0FBTUE7RUFDRSx1QkFBQSxFQUFBLE1BQUE7RUFDQSwwQkFBQSxFQUFBLE1BQUE7RUFDQSw4QkFBQSxFQUFBLE1BQUE7QUNERjs7QURJQTs7RUFBQTtBQUlBO0VBQ0UsU0FBQTtBQ0ZGOztBREtBOytFQUFBO0FBR0E7Ozs7O0VBQUE7QUFPQTs7Ozs7Ozs7Ozs7OztFQWFFLGNBQUE7QUNKRjs7QURPQTs7O0VBQUE7QUFLQTs7OztFQUlFLHFCQUFBLEVBQUEsTUFBQTtFQUNBLHdCQUFBLEVBQUEsTUFBQTtBQ0xGOztBRFFBOzs7RUFBQTtBQUtBO0VBQ0UsYUFBQTtFQUNBLFNBQUE7QUNORjs7QURTQTs7O0VBQUE7QUFLQTs7RUFFRSxhQUFBO0FDUEY7O0FEVUE7K0VBQUE7QUFHQTs7RUFBQTtBQUlBO0VBQ0UsNkJBQUE7QUNURjs7QURZQTs7RUFBQTtBQUlBOztFQUVFLFVBQUE7QUNWRjs7QURhQTsrRUFBQTtBQUdBOztFQUFBO0FBSUE7RUFDRSx5QkFBQTtBQ1pGOztBRGVBOztFQUFBO0FBSUE7O0VBRUUsaUJBQUE7QUNiRjs7QURnQkE7O0VBQUE7QUFJQTtFQUNFLGtCQUFBO0FDZEY7O0FEaUJBOzs7RUFBQTtBQUtBO0VBQ0UsY0FBQTtFQUNBLGdCQUFBO0FDZkY7O0FEa0JBOztFQUFBO0FBSUE7RUFDRSxnQkFBQTtFQUNBLFdBQUE7QUNoQkY7O0FEbUJBOztFQUFBO0FBSUE7RUFDRSxjQUFBO0FDakJGOztBRG9CQTs7RUFBQTtBQUlBOztFQUVFLGNBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSx3QkFBQTtBQ2xCRjs7QURxQkE7RUFDRSxXQUFBO0FDbEJGOztBRHFCQTtFQUNFLGVBQUE7QUNsQkY7O0FEcUJBOytF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QUNGO0FDLzRERTtFMkJtRUU7SUFRSSxVQUFBO0U1QncwRE47QUFDRjtBNEJyMERJO0VBQ0UsWUFBQTtFQUNBLFNBQUE7QTVCdTBETjtBNEJuMERFO0VBQ0Usa0JBQUE7QTVCcTBESjtBNEJuMERJO0VBQ0UseUJ6QnRHUTtBSDI2RGQ7QUN6NkRFO0UyQm1HRTtJQUlJLFVBQUE7RTVCczBETjtBQUNGO0FDOTZERTtFMkJnR0E7SUFZSSxXQUFBO0U1QnMwREo7QUFDRjtBNEJuMERFO0VBQ0Usa0JBQUE7RUFDQSxjekJsSFM7QUh1N0RiO0E0Qm4wREk7RUFDRSxnQkFBQTtBNUJxMEROO0FDMTdERTtFMkJnSEE7SUFTSSxXQUFBO0U1QnEwREo7QUFDRjtBNEJsMERFO0VBQ0UsYUFBQTtFQUVBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFFBQUE7RUFDQSwyQkFBQTtBNUJtMERKO0FDMzdERTtFMkJrSEE7SUFTSSxjQUFBO0U1Qm8wREo7QUFDRjtBNEJsMERJO0VBQ0Usa0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUVBLFlBQUE7RUFDQSx5QnpCbEpPO0V5Qm1KUCxrQkFBQTtFQUVBLGdDQUFBO0E1QmswRE47QTRCaDBETTtFQUNFLFlBQUE7RUFDQSx3QkFBQTtFQUNBLHlCekJ2Sks7QUh5OURiO0E0Qjl6REk7RUFDRSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxTQUFBO0VBRUEsa0NBQUE7RUFDQSxvQ0FBQTtFQUNBLGlDQUFBO0VBQ0EsbUNBQUE7QTVCK3pETiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuc2NzcyB2MC4xLjAgfCBNSVQgTGljZW5zZSB8IGJhc2VkIG9uIGdpdC5pby9ub3JtYWxpemUgKi9cblxuLyoqXG4gKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuICogMi4gUHJldmVudCBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nXG4gKiAgICB1c2VyIHpvb20uXG4gKi9cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IG1hcmdpbi5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICogYW5kIEZpcmVmb3guXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG4gKiAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gKi9cblxuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgXG4gKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlcjogMDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gKi9cblxuaHIge1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gIG1hcmdpbjogMDsgLyogMyAqL1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyOyAvKiAzICovXG59XG5cbi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXG4gKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICovXG5cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICogMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgYW5kIENocm9tZVxuICogICAgKGluY2x1ZGUgYC1tb3pgIHRvIGZ1dHVyZS1wcm9vZikuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDIgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMS5cbiAqIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3JkZXI6IDA7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKiBUYWJsZXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICovXG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwO1xufVxuIiwiLyohIG5vcm1hbGl6ZS5zY3NzIHYwLjEuMCB8IE1JVCBMaWNlbnNlIHwgYmFzZWQgb24gZ2l0LmlvL25vcm1hbGl6ZSAqL1xuLyoqXG4gKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuICogMi4gUHJldmVudCBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nXG4gKiAgICB1c2VyIHpvb20uXG4gKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICogYW5kIEZpcmVmb3guXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gKi9cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuaHIge1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbiAgbWFyZ2luOiAwOyAvKiAzICovXG59XG5cbi8qKlxuICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9YnV0dG9uXSxcbmlucHV0W3R5cGU9cmVzZXRdLFxuaW5wdXRbdHlwZT1zdWJtaXRdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyOyAvKiAzICovXG59XG5cbi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5pbnB1dFt0eXBlPWNoZWNrYm94XSxcbmlucHV0W3R5cGU9cmFkaW9dIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWVcbiAqICAgIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxuICovXG5pbnB1dFt0eXBlPXNlYXJjaF0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAyICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5pbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKiBNRURJQSBRVUVSWSBNSVhJTlMgLSBTVEFSVCovXG4vKiBNRURJQSBRVUVSWSBNSVhJTlMgLSBFTkQqL1xuKiB7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaHRtbCB7XG4gIGhlaWdodDogMTAwJTtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG59XG5cbmJvZHkge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMTAxMDE7XG4gIGNvbG9yOiAjZmZmZmMwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuYm9keSAucGFnZS1jb250ZW50IHtcbiAgZmxleC1ncm93OiAxO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogI2ZmZmZjMDtcbn1cblxuaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG51bCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxuXG5oMyB7XG4gIGxpbmUtaGVpZ2h0OiAxLjc1O1xufVxuXG5wIHtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cblxuLnRleHQtZW1waGFzaXMge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi5hbnRpc3BtIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxubm9zY3JpcHQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiT20gZGV6ZSB3ZWJzaXRlIHRlIGJlem9la2VuIG1vZXQgamUgd2ViYnJvd3NlciBKYXZhU2NyaXB0IG9uZGVyc3RldW5lbiBlbiB0b2VzdGFhbi5cIjtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXdlaWdodDogYm9sZGVyO1xuICBmb250LXNpemU6IDEuMjVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNmMzUwMDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMTAxMDE7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDFlbSAwO1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGUtaW4ge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGZhZGUtb3V0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuQGtleWZyYW1lcyBtb3ZlQXJyb3cge1xuICAyNSUge1xuICAgIG9wYWNpdHk6IDAuODU7XG4gIH1cbiAgMzMuMyUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIuMjhyZW0pO1xuICB9XG4gIDY2LjYlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgzLjEycmVtKTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg0LjhyZW0pIHNjYWxlKDAuNSk7XG4gIH1cbn1cbi50aW1lbGluZSB7XG4gIHBhZGRpbmc6IDRlbSAxZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDI1cHgpIHtcbiAgLnRpbWVsaW5lIHtcbiAgICBwYWRkaW5nOiA0ZW0gMmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRpbWVsaW5lIHtcbiAgICBwYWRkaW5nOiA4ZW0gMmVtO1xuICB9XG59XG4udGltZWxpbmVfX2ludHJvIHtcbiAgbWFyZ2luOiAwIDAgNGVtIDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRpbWVsaW5lX19pbnRybyB7XG4gICAgbWF4LXdpZHRoOiA1NWNoO1xuICAgIG1hcmdpbjogMCBhdXRvIDRlbTtcbiAgfVxufVxuLnRpbWVsaW5lX19pbnRyb19fdGl0bGUge1xuICBjb2xvcjogI2YzNTAwMDtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuLnRpbWVsaW5lX19tZW51LWNvbnRhaW5lciB7XG4gIG1hcmdpbi1ib3R0b206IDRlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAudGltZWxpbmVfX21lbnUtY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDIxZW07XG4gICAgbWFyZ2luOiAwIGF1dG8gNGVtO1xuICB9XG59XG4udGltZWxpbmVfX21lbnUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzU1NTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBwYWRkaW5nOiAxZW07XG4gIG1hcmdpbjogMDtcbn1cbi50aW1lbGluZV9fbWVudV9faXRlbSB7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMDIwO1xuICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbn1cbi50aW1lbGluZV9fbWVudV9faXRlbV9fbGluayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UtaW4tb3V0O1xuICBwYWRkaW5nOiAxZW0gMS41ZW07XG59XG4udGltZWxpbmVfX21lbnVfX2l0ZW1fX2xpbms6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmMwO1xuICBjb2xvcjogIzIwMjAyMDtcbn1cbi50aW1lbGluZV9fY29udGVudC1jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4udGltZWxpbmVfX2NvbnRlbnQtY29udGFpbmVyOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMTBweDtcbiAgd2lkdGg6IDAuMzc1ZW07XG4gIGhlaWdodDogOTkuNiU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMzUwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDFlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnRpbWVsaW5lX19jb250ZW50LWNvbnRhaW5lcjo6YmVmb3JlIHtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICB9XG59XG4udGltZWxpbmVfX2l0ZW0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zNXMgZWFzZS1pbjtcbiAgcGFkZGluZzogMS41ZW0gMCAwIDEuNWVtO1xuICBtYXJnaW46IDAgYXV0byA0ZW07XG59XG4udGltZWxpbmVfX2l0ZW0tLXJldmVhbCB7XG4gIG9wYWNpdHk6IDE7XG59XG4udGltZWxpbmVfX2l0ZW06OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMi41cHg7XG4gIHRvcDogMS41ZW07XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZWEwMDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnRpbWVsaW5lX19pdGVtLS1sZWZ0IHtcbiAgICByaWdodDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1MCUpO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcGFkZGluZzogMS41ZW0gMS41ZW0gMCAwO1xuICB9XG4gIC50aW1lbGluZV9faXRlbS0tbGVmdDo6YmVmb3JlIHtcbiAgICB3aWR0aDogMjdweDtcbiAgICBoZWlnaHQ6IDI3cHg7XG4gICAgbGVmdDogdW5zZXQ7XG4gICAgcmlnaHQ6IC0wLjgyNWVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC50aW1lbGluZV9faXRlbS0tcmlnaHQge1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxuICAudGltZWxpbmVfX2l0ZW0tLXJpZ2h0OjpiZWZvcmUge1xuICAgIHdpZHRoOiAyN3B4O1xuICAgIGhlaWdodDogMjdweDtcbiAgICBsZWZ0OiAtMC44MjVlbTtcbiAgfVxufVxuLnRpbWVsaW5lX19pdGVtX19zY3JvbGwtdXAge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7XG4gIG1hcmdpbjogMCAwLjI1ZW0gMC4yNWVtIDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRpbWVsaW5lX19pdGVtX19zY3JvbGwtdXAge1xuICAgIHJpZ2h0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwJSk7XG4gICAgbWFyZ2luOiAwIDAgMC41ZW0gMDtcbiAgfVxufVxuLnRpbWVsaW5lX19pdGVtX19zY3JvbGwtdXAgYSB7XG4gIGNvbG9yOiAjNTU1O1xufVxuLnRpbWVsaW5lX19pdGVtX19jb250ZW50LWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNmVmZWI7XG4gIGNvbG9yOiAjMmEyYTJhO1xuICBib3JkZXItcmFkaXVzOiAwLjVlbTtcbiAgcGFkZGluZzogMC41ZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRpbWVsaW5lX19pdGVtX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMmVtO1xuICB9XG59XG4udGltZWxpbmVfX2l0ZW1fX3RpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cbi50aW1lbGluZV9faXRlbV9fYmxvY2txdW90ZSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgbWFyZ2luOiAwO1xufVxuLnRpbWVsaW5lX19pdGVtX19ibG9ja3F1b3RlOmZpcnN0LW9mLXR5cGUge1xuICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbn1cbi50aW1lbGluZV9faXRlbV9faW1hZ2Uge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAudGltZWxpbmVfX2l0ZW1fX2ltYWdlIHtcbiAgICB3aWR0aDogODIlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRpbWVsaW5lX19jcmVkaXRzIHtcbiAgICBtYXgtd2lkdGg6IDU1Y2g7XG4gICAgbWFyZ2luOiAwIGF1dG8gNGVtO1xuICB9XG59XG4udGltZWxpbmVfX2NyZWRpdHNfX3RpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uaW5mb19fdGl0bGUsXG4uaW5mb19fY29udGVudC10ZXh0LFxuLmluZm9fX2NvbnRhY3Qge1xuICBwYWRkaW5nOiAwIDJlbTtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5pbmZvX190aXRsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tdG9wOiAzZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjc1O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uaW5mb19fdGl0bGUgaDEge1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uaW5mb19fY29udGVudC1pbWFnZXMge1xuICBwYWRkaW5nOiAxZW0gMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmluZm9fX2NvbnRlbnQtaW1hZ2VzIGltZyB7XG4gIHdpZHRoOiBhdXRvO1xuICBoZWlnaHQ6IDEwMHB4O1xufVxuXG4uaW5mb19fY29udGVudC10ZXh0LFxuLmluZm9fX2NvbnRhY3Qge1xuICBsaW5lLWhlaWdodDogMS43NTtcbn1cblxuLmluZm9fX2NvbnRlbnQtdGV4dCB7XG4gIG1hcmdpbi1ib3R0b206IDRlbTtcbn1cblxuLmluZm9fX2NvbnRhY3QgcCB7XG4gIGNvbG9yOiAjZjM1MDAwO1xufVxuLmluZm9fX2NvbnRhY3QgaHIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjN2EyODAwO1xuICBoZWlnaHQ6IDNweDtcbiAgd2lkdGg6IDIwMHB4O1xuICBtYXJnaW46IDA7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5pbmZvX19jb250ZW50IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBhZGRpbmc6IDAgMWVtO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgfVxuICAuaW5mb19fY29udGVudCAuaW5mb19fY29udGVudC10ZXh0IHtcbiAgICBvcmRlcjogMTtcbiAgICBtYXJnaW46IHVuc2V0O1xuICB9XG4gIC5pbmZvX19jb250ZW50IC5pbmZvX19jb250ZW50LWltYWdlcyB7XG4gICAgb3JkZXI6IDI7XG4gICAgbWFyZ2luOiB1bnNldDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLmluZm9fX2NvbnRlbnQgLmluZm9fX2NvbnRlbnQtaW1hZ2VzIGltZyB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTJweCkge1xuICAuaW5mb19fY29udGFjdCB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBtYXJnaW46IDAgYXV0byAwIDA7XG4gIH1cbn1cbi5sb2NhdGlvbiB7XG4gIHBhZGRpbmc6IDRlbSAxZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmxvY2F0aW9uIHtcbiAgICBwYWRkaW5nOiA0ZW0gMmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmxvY2F0aW9uIHtcbiAgICBwYWRkaW5nOiA4ZW0gMmVtO1xuICB9XG59XG4ubG9jYXRpb25fX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgbWFyZ2luLWJvdHRvbTogNGVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5sb2NhdGlvbl9faW50cm8ge1xuICAgIG1heC13aWR0aDogNTVjaDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxufVxuLmxvY2F0aW9uX19pbnRyb19fc29jaWFscy1pbnNlcnQge1xuICBtYXJnaW46IDAgYXV0byA0ZW07XG59XG4ubG9jYXRpb25fX3RpdGxlIHtcbiAgZm9udC1zaXplOiAxLjVlbTtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuLmxvY2F0aW9uX19zZWN0aW9uLXRpdGxlIHtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxLjI1ZW07XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cbi5sb2NhdGlvbl9fYnRuIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMmVtO1xuICBtYXJnaW46IDAgYXV0bztcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59XG4ubG9jYXRpb25fX21hcC1jb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMCBhdXRvIDZlbSBhdXRvO1xufVxuLmxvY2F0aW9uX19tYXAge1xuICB3aWR0aDogMTAwJTtcbiAgbWluLXdpZHRoOiAyNTBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtaW4taGVpZ2h0OiA1MDBweDtcbiAgYm9yZGVyOiAycHggc29saWQgI2YzNTAwMDtcbiAgY29sb3I6ICNmMzUwMDA7XG59XG5cbi5jb250YWN0X19jb250ZW50LWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDRlbSAxZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDI1cHgpIHtcbiAgLmNvbnRhY3RfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiA0ZW0gMmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmNvbnRhY3RfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiA4ZW0gMmVtO1xuICB9XG59XG4uY29udGFjdF9faW50cm8ge1xuICBtYXJnaW4tYm90dG9tOiA0ZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmNvbnRhY3RfX2ludHJvIHtcbiAgICBtYXgtd2lkdGg6IDc1Y2g7XG4gICAgbWFyZ2luOiAwIGF1dG8gNGVtO1xuICB9XG59XG4uY29udGFjdF9faW50cm9fX3RpdGxlIHtcbiAgZm9udC1zaXplOiAxLjVlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG4uY29udGFjdF9faW50cm9fX3RleHRfX2xpbmsgPiBhIHtcbiAgY29sb3I6ICNmMzUwMDA7XG59XG4uY29udGFjdF9fZm9ybSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDAgYXV0byA0ZW07XG59XG4uY29udGFjdF9fZm9ybV9fYW50aS1zcGFtIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5jb250YWN0X19mb3JtX19jb250ZW50LWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgY29sb3I6ICMyYTJhMmE7XG59XG4uY29udGFjdF9fZm9ybV9faW5wdXQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICB3aWR0aDogMTAwJTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuY29udGFjdF9fZm9ybV9faW5wdXQtY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDU1Y2g7XG4gICAgbWFyZ2luOiAwIGF1dG8gMmVtO1xuICB9XG59XG4uY29udGFjdF9fZm9ybV9fbGFiZWwge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXdlaWdodDogNjAwO1xuICBjb2xvcjogI2ZmZmZjMDtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuLmNvbnRhY3RfX2Zvcm1fX2xhYmVsOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiKlwiO1xuICBjb2xvcjogI2YzNTAwMDtcbiAgcGFkZGluZy1sZWZ0OiAwLjVlbTtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xufVxuLmNvbnRhY3RfX2Zvcm1fX2xhYmVsW2Zvcj1zdWJqZWN0XTo6YWZ0ZXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmNvbnRhY3RfX2Zvcm1fX2lucHV0LCAuY29udGFjdF9fZm9ybV9fc2VsZWN0LCAuY29udGFjdF9fZm9ybV9fdGV4dGFyZWEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZlZmViO1xuICBwYWRkaW5nOiAxZW07XG59XG4uY29udGFjdF9fZm9ybV9faW5wdXQ6Zm9jdXMtd2l0aGluLCAuY29udGFjdF9fZm9ybV9fc2VsZWN0OmZvY3VzLXdpdGhpbiwgLmNvbnRhY3RfX2Zvcm1fX3RleHRhcmVhOmZvY3VzLXdpdGhpbiB7XG4gIG91dGxpbmU6ICNmZWVhMDAgMC4xODc1ZW0gc29saWQ7XG59XG4uY29udGFjdF9fZm9ybV9fc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59XG4uY29udGFjdF9fZm9ybV9fc2VsZWN0OmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5jb250YWN0X19mb3JtX19jb25zZW50LWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA1NWNoO1xuICAgIG1hcmdpbjogMCBhdXRvIDJlbTtcbiAgfVxufVxuLmNvbnRhY3RfX2Zvcm1fX2NvbnNlbnQtdGV4dCA+IGEge1xuICBjb2xvcjogI2YzNTAwMDtcbn1cbi5jb250YWN0X19mb3JtX19zdWJtaXQtY29udGFpbmVyIHtcbiAgcGFkZGluZzogMWVtO1xufVxuLmNvbnRhY3RfX2Zvcm1fX2J0biB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAtMC4xODc1ZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogI2Y2ZWZlYjtcbiAgbWFyZ2luLWxlZnQ6IDRlbTtcbn1cbi5jb250YWN0X19mb3JtX19idG5bZGlzYWJsZWRdIHtcbiAgb3BhY2l0eTogMC43O1xufVxuXG4ucG9saWN5IHtcbiAgcGFkZGluZzogNGVtIDFlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAucG9saWN5IHtcbiAgICBwYWRkaW5nOiA0ZW0gMmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnBvbGljeSB7XG4gICAgcGFkZGluZzogOGVtIDJlbTtcbiAgfVxufVxuLnBvbGljeV9fY29udGVudC1jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAucG9saWN5X19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA1NWNoO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG4ucG9saWN5X190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG59XG4ucG9saWN5X19zZWN0aW9uLXRpdGxlIHtcbiAgZm9udC1zaXplOiAxLjI1ZW07XG59XG5cbi5lcnJvciB7XG4gIHBhZGRpbmc6IDhlbSAxZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmVycm9yIHtcbiAgICBwYWRkaW5nOiA4ZW0gMmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmVycm9yIHtcbiAgICBwYWRkaW5nOiAxNmVtIDJlbTtcbiAgfVxufVxuLmVycm9yX19jb250ZW50LWNvbnRhaW5lciB7XG4gIG1pbi1oZWlnaHQ6IDY2dmg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuZXJyb3JfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDU1Y2g7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cbi5lcnJvcl9fbXNnIHtcbiAgZm9udC1zaXplOiAxLjVlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG4uZXJyb3JfX3N0YXR1cyB7XG4gIGZvbnQtc2l6ZTogMS4yNWVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cbi5lcnJvcl9fYnRuIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMmVtO1xuICBwYWRkaW5nOiAxZW0gMS41ZW0gIWltcG9ydGFudDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAud3JhcHBlciB7XG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cblxuLm1vZGFsIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3YTI4MDA7XG4gIG9wYWNpdHk6IDAuOTk7XG4gIG92ZXJmbG93LXk6IGF1dG87XG59XG4ubW9kYWwtLXNob3cge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5tb2RhbF9fY29udGVudC1jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBmb250LXNpemU6IDIwcHg7XG4gIHBhZGRpbmc6IDJlbTtcbn1cbi5tb2RhbF9faGVhZGluZyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5tb2RhbF9faGVhZGluZ19faW1nLWNvbnRhaW5lciB7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MjVweCkge1xuICAubW9kYWxfX2hlYWRpbmdfX2ltZyB7XG4gICAgbWF4LXdpZHRoOiA2NiU7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubW9kYWxfX2hlYWRpbmdfX2ltZyB7XG4gICAgbWF4LXdpZHRoOiAzMyU7XG4gIH1cbn1cbi5tb2RhbF9faGVhZGluZ19fdGV4dC1jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDU1Y2g7XG4gIG1hcmdpbjogMCBhdXRvIDJlbTtcbn1cbi5tb2RhbF9faGVhZGluZ19fdGV4dCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG4ubW9kYWxfX2Zvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5tb2RhbF9fZm9ybV9faW5zdHJ1Y3Rpb24ge1xuICBmb250LXNpemU6IDE4cHg7XG4gIGNvbG9yOiAjZmVlYTAwO1xufVxuLm1vZGFsX19mb3JtX19pbnB1dC1ncm91cCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm1vZGFsX19mb3JtX19pbnB1dC1ncm91cCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gIH1cbn1cbi5tb2RhbF9fZm9ybV9faW5wdXQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm1vZGFsX19mb3JtX19pbnB1dC1jb250YWluZXIge1xuICAgIG1hcmdpbi1yaWdodDogMC41ZW07XG4gIH1cbn1cbi5tb2RhbF9fZm9ybV9faW5wdXQtY29udGFpbmVyOmxhc3Qtb2YtdHlwZSB7XG4gIG1hcmdpbi1ib3R0b206IDEuNWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5tb2RhbF9fZm9ybV9faW5wdXQtY29udGFpbmVyOmxhc3Qtb2YtdHlwZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG59XG4ubW9kYWxfX2Zvcm1fX2lucHV0LWNvbnRhaW5lciBpbnB1dCB7XG4gIHdpZHRoOiAzZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNmZWVhMDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHVuc2V0O1xuICBib3JkZXItYm90dG9tOiAxcHggI2ZlZWEwMCBzb2xpZDtcbn1cbi5tb2RhbF9fZm9ybV9fYnRuIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MjVweCkge1xuICAubW9kYWxfX2Zvcm1fX2J0biB7XG4gICAgbWF4LXdpZHRoOiA2NiU7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubW9kYWxfX2Zvcm1fX2J0biB7XG4gICAgbWF4LXdpZHRoOiAzMyU7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxOTIwcHgpIHtcbiAgLm1vZGFsX19mb3JtX19idG4ge1xuICAgIG1heC13aWR0aDogMTglO1xuICB9XG59XG5cbi5jb29raWUtY29uc2VudCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiA2O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMmVtIDFlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAxMDEwMTtcbiAgYm9yZGVyLXJhZGl1czogNXB4IDVweCAwIDA7XG59XG4uY29va2llLWNvbnNlbnQtLXNob3cge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuLmNvb2tpZS1jb25zZW50X19idG4tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuY29va2llLWNvbnNlbnRfX2J0bi1jb250YWluZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZmxleC1mbG93OiByb3ctcmV2ZXJzZTtcbiAgfVxufVxuLmNvb2tpZS1jb25zZW50X19idG4ge1xuICB3aWR0aDogMTJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5jb29raWUtY29uc2VudF9fYnRuIHtcbiAgICBtYXJnaW46IDAgMWVtIDAgMDtcbiAgfVxufVxuXG4uYnRuIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjN2EyODAwO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJveC1zaGFkb3c6IDJweCAycHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIGVhc2UtaW4gMC4zcztcbiAgcGFkZGluZzogMC41ZW0gMWVtO1xufVxuLmJ0bi0tb3V0bGluZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHVuc2V0O1xuICBib3JkZXI6IDFweCAjZmZmZmMwIHNvbGlkO1xufVxuLmJ0bi0tbGlnaHQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmMwO1xuICBjb2xvcjogIzdhMjgwMDtcbn1cbi5idG46aG92ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMDEyNSk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmhlYWRpbmcge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG4uaGVhZGluZyBpIHtcbiAgY29sb3I6ICNmZWVhMDA7XG59XG4uaGVhZGluZyBoMixcbi5oZWFkaW5nIGgzIHtcbiAgY29sb3I6ICMyYTJhMmE7XG59XG4uaGVhZGluZyBoMyB7XG4gIGZvbnQtc2l6ZTogMS4xcmVtO1xuICBmb250LXdlaWdodDogMzAwO1xuICBtYXJnaW46IDAgMCAwLjVlbSAwO1xufVxuLmhlYWRpbmcgaHIge1xuICB3aWR0aDogNTAlO1xuICBoZWlnaHQ6IDJweDtcbiAgYmFja2dyb3VuZDogI2YzNTAwMDtcbn1cblxuLmZsYXNoIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDc7XG4gIHdpZHRoOiAxMDAlO1xuICBhbmltYXRpb246IGZhZGVPdXQgNXMgMnMgZm9yd2FyZHM7XG59XG4uZmxhc2hfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgd2lkdGg6IDk1JTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogIzJhMmEyYTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOWY2O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHBhZGRpbmc6IDFlbSAyZW07XG4gIG1hcmdpbjogMC41ZW0gYXV0byAwO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuZmxhc2hfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDY2JTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDE5MjBweCkge1xuICAuZmxhc2hfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDMzJTtcbiAgfVxufVxuLmZsYXNoX19jb250ZW50LWNvbnRhaW5lci0tYWxlcnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMCwgMCwgMC45NSk7XG4gIGNvbG9yOiAjZmZmO1xufVxuLmZsYXNoLS1oaWRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5mbGFzaC0tYWxlcnQge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmZsYXNoLS1hbGVydC0tc2hvdyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVPdXQge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG4vKiBcbiAgIyMjIE5PVEUgIyMjXG4gIFRoaXMgaXMgdGhlIGJhc2UgbWVudVxuKi9cbi5tZW51IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBmb250LXNpemU6IDAuNzVlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubWVudSB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgfVxufVxuLm1lbnVfX2l0ZW0ge1xuICBtaW4td2lkdGg6IDMzcHg7XG4gIG1hcmdpbi1yaWdodDogMWVtO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLWluO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5tZW51X19pdGVtIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDJlbTtcbiAgfVxufVxuLm1lbnVfX2l0ZW06bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cbi5tZW51X19pdGVtLS1pY29uLW9ubHkge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG59XG4ubWVudV9faXRlbV9fbGluay1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubWVudV9faXRlbV9fbGluay1jb250YWluZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIH1cbiAgLm1lbnVfX2l0ZW1fX2xpbmstY29udGFpbmVyOmhvdmVyIHtcbiAgICBjb2xvcjogI2ZlZWEwMDtcbiAgfVxufVxuLm1lbnVfX2l0ZW1fX3RleHQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICBtYXJnaW46IDAuNWVtIGF1dG8gMDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubWVudV9faXRlbV9fdGV4dCB7XG4gICAgbWFyZ2luOiAwLjVlbSAwLjVlbSAwIDA7XG4gIH1cbn1cbi5tZW51X19pdGVtX19idG4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB1bnNldDtcbiAgY29sb3I6ICNmZmZmYzA7XG59XG5cbi8qIFxuICAjIyMgTk9URSAjIyNcbiAgVGhpcyBpcyB0aGUgbWVudSB0aGF0IHBvcHMtdXAgd2hlbiB0b2dnbGluZyB0aGUgZG90dGVkIG1lbnUgbGluayBpbiB0aGUgYmFzZSBtZW51LiBJdCBpcyBwb3NpdGlvbmVkIHJlbGF0aXZlIHRvIHRoZSBuYXZiYXIgZWxlbWVudCBpbiB0aGUgaGVhZGVyIHNlY3Rpb25cbiovXG4ubWVudS1wb3AtdXAge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xNSUsIC05MyUpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU1O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHBhZGRpbmc6IDFlbSAwLjVlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubWVudS1wb3AtdXAge1xuICAgIHRvcDogdW5zZXQ7XG4gICAgYm90dG9tOiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0zMyUsIDk2JSk7XG4gIH1cbn1cbi5tZW51LXBvcC11cC0tYWN0aXZlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGFuaW1hdGlvbjogZmFkZS1pbiA1MDBtcyBmb3J3YXJkcztcbn1cbi5tZW51LXBvcC11cC0tY2xvc2luZyB7XG4gIGFuaW1hdGlvbjogZmFkZS1vdXQgNTAwbXMgZm9yd2FyZHM7XG59XG4ubWVudS1wb3AtdXBfX2l0ZW0ge1xuICBwYWRkaW5nOiAxZW07XG59XG4ubWVudS1wb3AtdXBfX2l0ZW06aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMDIwO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG4ubWVudS1wb3AtdXBfX2l0ZW0tLWRpc2FibGVkIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG4ubWVudS1wb3AtdXBfX2l0ZW0tLWRpc2FibGVkIGEge1xuICBjb2xvcjogZ3JleTtcbn1cbi5tZW51LXBvcC11cF9faXRlbV9fbGluay1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5tZW51LXBvcC11cF9faXRlbV9fdGV4dCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgbWFyZ2luOiAwIDFlbSAwIDA7XG59XG5cbi5zY3JvbGwtZG93bi1pY29uIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDI1JTtcbiAgbGVmdDogNTAlO1xuICBvcGFjaXR5OiAwO1xuICBhbmltYXRpb246IG1vdmVBcnJvdyAzcyBlYXNlLW91dCBpbmZpbml0ZTtcbn1cbi5zY3JvbGwtZG93bi1pY29uLS1hY3RpdmUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnNvY2lhbHMtaW5zZXJ0IHtcbiAgd2lkdGg6IDE1ZW07XG59XG4uc29jaWFscy1pbnNlcnRfX2RpdmlkZXIge1xuICB3aWR0aDogNTAlO1xuICBoZWlnaHQ6IDAuMTI1ZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMzUwMDA7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cbi5zb2NpYWxzLWluc2VydF9fbGluay1jb250YWluZXIge1xuICB3aWR0aDogNTAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4uY3VzdG9tLWNoZWNrYm94IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmN1c3RvbS1jaGVja2JveF9faW5wdXQge1xuICAvKiBcbiAgICAgIHdlIHVzZSB0aGUgZnVuY3Rpb25hbGl0eSBvZiB0aGUgaW5wdXQgZWxlbWVudCBidXQgdGhlIHN0eWxpbmcgaXMgZW50aXJlbHkgZG9uZSB3aXRoIHRoZSBzcGFuIGVsZW1lbnQgYmVsb3cgXG4gICovXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMDtcbiAgb3BhY2l0eTogMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmN1c3RvbS1jaGVja2JveF9faW5wdXQ6Y2hlY2tlZCB+IHNwYW4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU1O1xufVxuLmN1c3RvbS1jaGVja2JveF9faW5wdXQ6Y2hlY2tlZCB+IHNwYW46OmFmdGVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4uY3VzdG9tLWNoZWNrYm94X19zcGFuIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAxLjg3NWVtO1xuICB3aWR0aDogMS44NzVlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjlmNjtcbiAgYm9yZGVyOiAwLjE4NzVlbSBzb2xpZCAjZmVlYTAwO1xuICBtYXJnaW46IDAgYXV0bztcbn1cbi5jdXN0b20tY2hlY2tib3hfX3NwYW46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU1O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uY3VzdG9tLWNoZWNrYm94X19zcGFuOjphZnRlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwLjI1ZW07XG4gIGxlZnQ6IDAuNDM3NWVtO1xuICB3aWR0aDogMC4zMTI1ZW07XG4gIGhlaWdodDogMC42MjVlbTtcbiAgYm9yZGVyOiBzb2xpZCAjZmZmOWY2O1xuICBib3JkZXItd2lkdGg6IDAgMC4yNWVtIDAuMjVlbSAwO1xuICAvKiBib3JkZXItcmFkaXVzOiA4cHg7ICovXG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbn1cblxuLnRlc3RpbW9uaWFsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZWZlYjtcbiAgY29sb3I6ICMyYTJhMmE7XG4gIHBhZGRpbmc6IDRlbSAxZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLnRlc3RpbW9uaWFsIHtcbiAgICBwYWRkaW5nOiA0ZW0gMmVtO1xuICB9XG59XG4udGVzdGltb25pYWxfX2hlYWRpbmcge1xuICBtYXJnaW4tYm90dG9tOiA0ZW0gIWltcG9ydGFudDtcbn1cbi50ZXN0aW1vbmlhbF9faGVhZGluZyBociB7XG4gIHdpZHRoOiA1MCU7XG59XG4udGVzdGltb25pYWxfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IGVhc2UtaW4tb3V0IDAuM3M7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRlc3RpbW9uaWFsX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxufVxuLnRlc3RpbW9uaWFsX19xdW90ZSB7XG4gIG1hcmdpbi1ib3R0b206IDRlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAudGVzdGltb25pYWxfX3F1b3RlIHtcbiAgICBmbGV4OiAwIDAgNTAlO1xuICB9XG59XG4udGVzdGltb25pYWxfX3F1b3RlX190ZXh0IHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgbGluZS1oZWlnaHQ6IDEuNzU7XG4gIHBhZGRpbmc6IDFlbSAwO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50ZXN0aW1vbmlhbF9fcXVvdGVfX3RleHQge1xuICAgIHBhZGRpbmc6IDFlbSAxLjVlbTtcbiAgICBtYXgtd2lkdGg6IDU1Y2g7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cbi50ZXN0aW1vbmlhbF9fcXVvdGVfX2F1dGhvciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgY29sb3I6ICNmMzUwMDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRlc3RpbW9uaWFsX19xdW90ZV9fYXV0aG9yIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxufVxuLnRlc3RpbW9uaWFsX19xdW90ZV9fYXV0aG9yIGkuZmEtYW5nbGUtcmlnaHQge1xuICBjb2xvcjogI2ZlZWEwMDtcbiAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnRlc3RpbW9uaWFsX19jb250ZW50IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiA0ZW07XG4gIH1cbiAgLnRlc3RpbW9uaWFsX19jb250YWluZXIge1xuICAgIGZsZXg6IDE7XG4gIH1cbiAgLnRlc3RpbW9uaWFsX19jb250YWluZXIgKyAudGVzdGltb25pYWxfX2NvbnRhaW5lciB7XG4gICAgbWFyZ2luLWxlZnQ6IDFlbTtcbiAgfVxuICAudGVzdGltb25pYWxfX2NvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIH1cbiAgLnRlc3RpbW9uaWFsX19jb250YWluZXIgaSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcbiAgfVxuICAudGVzdGltb25pYWxfX2NvbnRhaW5lciBwLnF1b3RlIHtcbiAgICB3aWR0aDogNzAlO1xuICAgIHBhZGRpbmctdG9wOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICBmb250LXNpemU6IDFyZW07XG4gIH1cbiAgLnRlc3RpbW9uaWFsX19jb250YWluZXIgcC5hdXRob3Ige1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luLWxlZnQ6IDRlbTtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cbn1cbi8qXG4gICAgIyMjIyMjIyMjXG4gICAgREVWIE5PVEVTXG4gICAgIyMjIyMjIyMjXG5cbi0gbW9iaWxlIGZpcnN0IGFwcHJvYWNoXG4tIGxhbmRpbmcgY2xhc3MgZ2V0cyBhZGRlZCB0aHJvdWdoIGpzIG9uIGhvbWVwYWdlIG9ubHlcbi0gdGhlIG5hdmJhciBoYXMgdHdvIG1lbnUgY29tcG9uZW50czogc2VlIF9tZW51LnNjc3MgJiBtZW51LXBvcC11cC5zY3NzXG4qL1xuLmhlYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAwO1xuICB6LWluZGV4OiAzO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdhMjgwMDtcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICNmZWVhMDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmhlYWRlciB7XG4gICAgYm90dG9tOiB1bnNldDtcbiAgICB0b3A6IDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjY2KTtcbiAgICBib3JkZXItdG9wOiB1bnNldDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5oZWFkZXJfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG59XG4uaGVhZGVyX19sb2dvLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmhlYWRlcl9fbG9nby1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZsZXg6IDAgMCAyMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDAuNSAyZW07XG4gIH1cbn1cbi5oZWFkZXJfX2xvZ28ge1xuICB3aWR0aDogNjYlO1xufVxuLmhlYWRlcl9fbG9nby0taGlkZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uaGVhZGVyX19uYXZiYXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxZW0gMmVtIDAuNWVtIDJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuaGVhZGVyX19uYXZiYXIge1xuICAgIHdpZHRoOiB1bnNldDtcbiAgICBmbGV4OiAxO1xuICAgIHBhZGRpbmc6IDFlbSAyZW0gMWVtIDJlbTtcbiAgfVxufVxuLmhlYWRlcl9fbmF2YmFyLS1qcy1zbWFsbCB7XG4gIHBhZGRpbmc6IDAuMjVlbSAxZW07XG59XG5cbi5oZXJvIHtcbiAgaGVpZ2h0OiBjYWxjKHZhcigtLXZoLCAxdmgpICogMTAwKTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5oZXJvX19jb250ZW50LWNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiBjYWxjKHZhcigtLWlubmVySGVpZ2h0KSAtIHZhcigtLW1lbnVIZWlnaHQpKTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuaGVyb19fY29udGVudC1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgcGFkZGluZzogMmVtO1xuICB9XG59XG4uaGVyb19fY3RhIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNmZmZmYzA7XG4gIHBhZGRpbmc6IDJlbSAyZW0gMCAyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmhlcm9fX2N0YSB7XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxufVxuLmhlcm9fX2N0YV9fbG9nbyB7XG4gIG1heC13aWR0aDogNDUlO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG4uaGVyb19fY3RhX19oZWFkaW5nIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4uaGVyb19fY3RhX19oZWFkaW5nLS1oaWRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuaGVyb19fY3RhX19oZWFkaW5nIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gIH1cbn1cbi5oZXJvX19jdGFfX2hlYWRpbmdfX3RpdGxlIHtcbiAgZm9udC1zaXplOiAxLjVlbTtcbiAgY29sb3I6ICNmZWVhMDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oZXJvX19jdGFfX2hlYWRpbmdfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDJlbTtcbiAgfVxufVxuLmhlcm9fX2N0YV9faGVhZGluZ19fc3VidGl0bGUge1xuICBmb250LXNpemU6IDFlbTtcbiAgY29sb3I6ICNkOGQ4ZDg7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhlcm9fX2N0YV9faGVhZGluZ19fc3VidGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gIH1cbn1cbi5oZXJvX19jdGFfX2J0biB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmhlcm9fX2N0YV9fYnRuIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXgtd2lkdGg6IDEyZW07XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cbi5oZXJvX19icmFuZC1pbWFnZS1jb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmhlcm9fX2JyYW5kLWltYWdlLWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxufVxuLmhlcm9fX2JyYW5kLWltYWdlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogNjYlO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5oZXJvX19icmFuZC1pbWFnZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhlcm9fX2JyYW5kLWltYWdlIHtcbiAgICB3aWR0aDogNjYlO1xuICB9XG59XG5cbi5saW5rLXNlY3Rpb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOWY2O1xuICBwYWRkaW5nOiA0ZW0gMWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDQyNXB4KSB7XG4gIC5saW5rLXNlY3Rpb24ge1xuICAgIHBhZGRpbmc6IDRlbSAyZW07XG4gIH1cbn1cbi5saW5rLXNlY3Rpb25fX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5saW5rLXNlY3Rpb25fX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICB9XG59XG4ubGluay1zZWN0aW9uX19saW5rIHtcbiAgZmxleDogMTtcbiAgb3BhY2l0eTogMTtcbiAgYm94LXNoYWRvdzogMnB4IDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xuICBib3JkZXItcmFkaXVzOiA5cHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW47XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5saW5rLXNlY3Rpb25fX2xpbmsge1xuICAgIG1heC13aWR0aDogNDAlO1xuICB9XG59XG4ubGluay1zZWN0aW9uX19saW5rOmZpcnN0LW9mLXR5cGUge1xuICBtYXJnaW4tYm90dG9tOiA0ZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5saW5rLXNlY3Rpb25fX2xpbms6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxufVxuLmxpbmstc2VjdGlvbl9fbGluazpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm94LXNoYWRvdzogMnB4IDJweCAycHggMCAjZjM1MDAwO1xufVxuLmxpbmstc2VjdGlvbl9fbGlua19fY29udGVudCB7XG4gIHBhZGRpbmc6IDAgMWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5saW5rLXNlY3Rpb25fX2xpbmtfX2NvbnRlbnQge1xuICAgIHBhZGRpbmc6IDAgMmVtO1xuICB9XG59XG5cbi5oaXN0b3J5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZWZlYjtcbn1cbi5oaXN0b3J5X19jb250ZW50LWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiA0ZW0gMWVtO1xuICBtYXJnaW46IDAgYXV0bztcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MjVweCkge1xuICAuaGlzdG9yeV9fY29udGVudC1jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDRlbSAyZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhpc3RvcnlfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICB9XG59XG4uaGlzdG9yeV9faGVhZGluZyB7XG4gIHBhZGRpbmc6IDAgMWVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5oaXN0b3J5X19oZWFkaW5nIHtcbiAgICBwYWRkaW5nOiAwIDJlbTtcbiAgfVxufVxuLmhpc3RvcnlfX2ltYWdlLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmhpc3RvcnlfX2ltYWdlLWNvbnRhaW5lciBmaWd1cmUge1xuICBtYXJnaW46IDA7XG59XG4uaGlzdG9yeV9faW1hZ2UtY29udGFpbmVyIGZpZ3VyZTpmaXJzdC1vZi10eXBlIHtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuLmhpc3RvcnlfX2ltYWdlLWNvbnRhaW5lciBmaWd1cmUgaW1nIHtcbiAgYm9yZGVyLXJhZGl1czogOXB4O1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuaGlzdG9yeV9faW1hZ2UtY29udGFpbmVyIGZpZ3VyZSBpbWcge1xuICAgIHdpZHRoOiA2MyU7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxOTIwcHgpIHtcbiAgLmhpc3RvcnlfX2ltYWdlLWNvbnRhaW5lciBmaWd1cmUgaW1nIHtcbiAgICB3aWR0aDogNTclO1xuICB9XG59XG5cbi5uZXdzbGV0dGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjlmNjtcbiAgcGFkZGluZzogNGVtIDFlbTtcbn1cbi5uZXdzbGV0dGVyX19jb250ZW50LWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDRlbSAxZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDI1cHgpIHtcbiAgLm5ld3NsZXR0ZXJfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiA0ZW0gMmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm5ld3NsZXR0ZXJfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDY2JTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxufVxuLm5ld3NsZXR0ZXJfX2lucHV0LWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5uZXdzbGV0dGVyX19pbnB1dC1jb250YWluZXIge1xuICAgIG1heC13aWR0aDogNTQlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG4ubmV3c2xldHRlcl9fZm9ybSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLm5ld3NsZXR0ZXJfX2Zvcm1fX2lucHV0LWVtYWlsIHtcbiAgd2lkdGg6IDgwJTtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjb2xvcjogIzJhMmEyYTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZWZlYjtcbiAgYm9yZGVyOiAjZjM1MDAwIDFweCBzb2xpZDtcbiAgcGFkZGluZzogMWVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbn1cbi5uZXdzbGV0dGVyX19mb3JtX19pbnB1dC1lbWFpbDo6cGxhY2Vob2xkZXIge1xuICBjb2xvcjogIzJhMmEyYTtcbn1cbi5uZXdzbGV0dGVyX19mb3JtX19pbnB1dC1lbWFpbDpmb2N1cy13aXRoaW4ge1xuICBvdXRsaW5lOiAjZjM1MDAwIDFweCBzb2xpZDtcbn1cbi5uZXdzbGV0dGVyX19mb3JtX19jb25zZW50LWNvbnRhaW5lciB7XG4gIHdpZHRoOiA4MCU7XG4gIGNvbG9yOiAjMmEyYTJhO1xuICBmb250LXNpemU6IDFyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjc1O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4ubmV3c2xldHRlcl9fZm9ybV9fY29uc2VudC10ZXh0IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG4ubmV3c2xldHRlcl9fZm9ybV9fY29uc2VudC10ZXh0IGEge1xuICBjb2xvcjogI2YzNTAwMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG4ubmV3c2xldHRlcl9fZm9ybV9fYnRuIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICNmNmVmZWI7XG59XG4ubmV3c2xldHRlcl9fZm9ybV9fYnRuOmRpc2FibGVkIHtcbiAgb3BhY2l0eTogMC41O1xufVxuXG4uZm9vdGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kOiAjMjAyMDIwO1xuICBib3JkZXItdG9wOiA0cHggI2ZlZWEwMCBzb2xpZDtcbn1cbi5mb290ZXJfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiA4ZW0gMmVtIDhlbSAyZW07XG4gIC8qIFxuICAgICAgZXh0cmEgcGFkZGluZyBvbiBib3R0b20gdG8gY3JlYXRlIHNwYWNlIGZvciBmaXhlZCBoZWFkZXIgXG4gICAgICBib3R0b20gbWVudSBvbiBtb2JpbGUgZGV2aWNlc1xuICAqL1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5mb290ZXJfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5mb290ZXJfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiA4ZW0gMmVtIDFlbSAyZW07XG4gIH1cbn1cbi5mb290ZXIgaDMge1xuICBmb250LXNpemU6IDEuMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIG1hcmdpbjogMCAwIDAuNWVtIDA7XG59XG4uZm9vdGVyIGhyIHtcbiAgd2lkdGg6IDcwJTtcbiAgaGVpZ2h0OiAycHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMzUwMDA7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cbi5mb290ZXJfX3NvY2lhbC1tZWRpYSB7XG4gIG1hcmdpbi1ib3R0b206IDRlbTtcbn1cbi5mb290ZXJfX3NvY2lhbC1tZWRpYSBhICsgYSB7XG4gIG1hcmdpbi1sZWZ0OiAyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmZvb3Rlcl9fc29jaWFsLW1lZGlhIHtcbiAgICB3aWR0aDogNTAlO1xuICB9XG59XG4uZm9vdGVyX19jb250YWN0IHtcbiAgbWFyZ2luLWJvdHRvbTogNGVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5mb290ZXJfX2NvbnRhY3Qge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gIH1cbn1cbi5mb290ZXJfX2xlZ2FsLWxpbmtzIHtcbiAgbWFyZ2luLWJvdHRvbTogNGVtO1xufVxuLmZvb3Rlcl9fbGVnYWwtbGlua3MgdWwgbGkge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cbi5mb290ZXJfX2xlZ2FsLWxpbmtzIHVsIGxpIGEge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuZm9vdGVyX19sZWdhbC1saW5rcyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLXRvcDogMmVtO1xuICB9XG59XG4uZm9vdGVyX19hZGRyZXNzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDRlbTtcbn1cbi5mb290ZXJfX2FkZHJlc3MgaW1nIHtcbiAgd2lkdGg6IDU1JTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuZm9vdGVyX19hZGRyZXNzIGltZyB7XG4gICAgd2lkdGg6IDQwJTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuZm9vdGVyX19hZGRyZXNzIGltZyB7XG4gICAgd2lkdGg6IDMzJTtcbiAgfVxufVxuLmZvb3Rlcl9fYWRkcmVzcyBhZGRyZXNzIHtcbiAgd2lkdGg6IDIwMHB4O1xuICBtYXJnaW46IDA7XG59XG4uZm9vdGVyX19jb3B5cmlnaHQge1xuICBmb250LXNpemU6IDAuNzVyZW07XG59XG4uZm9vdGVyX19jb3B5cmlnaHQgaHIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmMwO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5mb290ZXJfX2NvcHlyaWdodCBociB7XG4gICAgd2lkdGg6IDk1JTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5mb290ZXJfX2NvcHlyaWdodCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cbi5mb290ZXJfX2NyZWRpdHMge1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGNvbG9yOiAjZjM1MDAwO1xufVxuLmZvb3Rlcl9fY3JlZGl0cyBwIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuZm9vdGVyX19jcmVkaXRzIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuLmZvb3Rlcl9fbmF2LXVwIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogMTUlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5mb290ZXJfX25hdi11cCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cbi5mb290ZXJfX25hdi11cF9fY29udGFpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBvcGFjaXR5OiAwLjc7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZWVhMDA7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1pbi1vdXQ7XG59XG4uZm9vdGVyX19uYXYtdXBfX2NvbnRhaW5lcjpob3ZlciB7XG4gIG9wYWNpdHk6IDAuODtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjAxMjUpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjM1MDAwO1xufVxuLmZvb3Rlcl9fbmF2LXVwX19maWd1cmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDIwJTtcbiAgdG9wOiAtMTAlO1xuICBib3JkZXItdG9wOiAxNXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItcmlnaHQ6IDE1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1ib3R0b206IDI1cHggc29saWQgIzAzMDMwMztcbiAgYm9yZGVyLWxlZnQ6IDE1cHggc29saWQgdHJhbnNwYXJlbnQ7XG59IiwiLyogTUVESUEgUVVFUlkgTUlYSU5TIC0gU1RBUlQqL1xuQG1peGluIG1vYmlsZV9tZCB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAzNzVweCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5AbWl4aW4gbW9iaWxlX2xnIHtcbiAgQG1lZGlhIChtaW4td2lkdGg6IDQyNXB4KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIHRhYmxldF9zbSB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5AbWl4aW4gdGFibGV0X21kIHtcbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIHBjX3NtIHtcbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBwY19tZCB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMzY2cHgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gcGNfbGcge1xuICBAbWVkaWEgKG1pbi13aWR0aDogMTkyMHB4KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbkBtaXhpbiBwY194bCB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAyNTYwcHgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuQG1peGluIHBjXzJ4bCB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1MTIxcHgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuLyogTUVESUEgUVVFUlkgTUlYSU5TIC0gRU5EKi9cbiIsIioge1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmh0bWwge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xufVxuXG5ib2R5IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcblxuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG5cbiAgYmFja2dyb3VuZC1jb2xvcjogJG1haW5CbGFjaztcbiAgY29sb3I6ICRsaWdodFllbGxvdztcblxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gIC8vYWxsIHBhZ2UtY29udGVudCBpcyB3cmFwcGVkIGluIHRoaXMgd3JhcHBlciB0byBnZXQgc3RpY2t5IGZvb3RlclxuICAucGFnZS1jb250ZW50IHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gIH1cbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICRsaWdodFllbGxvdztcbn1cblxuaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG51bCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxuXG5oMyB7XG4gIGxpbmUtaGVpZ2h0OiAxLjc1O1xufVxuXG5wIHtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cblxuLnRleHQtZW1waGFzaXMge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi5hbnRpc3BtIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxubm9zY3JpcHQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiT20gZGV6ZSB3ZWJzaXRlIHRlIGJlem9la2VuIG1vZXQgamUgd2ViYnJvd3NlciBKYXZhU2NyaXB0IG9uZGVyc3RldW5lbiBlbiB0b2VzdGFhbi5cIjtcblxuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gIGNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJG1haW5CbGFjaztcblxuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG5cbiAgd2lkdGg6IDEwMCU7XG5cbiAgcGFkZGluZzogMWVtIDA7XG59XG4iLCIkYmFja2dyb3VuZFdoaXRlOiAjZmZmOWY2O1xuJGJhY2tncm91bmRPdGhlcldoaXRlOiAjZjZlZmViO1xuXG4kbWFpbkJsYWNrOiAjMDEwMTAxO1xuJG1haW5HcmV5OiAjNTU1O1xuJGxpZ2h0R3JleTogI2Q4ZDhkODtcbiRvdGhlckJsYWNrOiAjMjAyMDIwO1xuXG4kdGV4dENvbG9yLWRhcms6ICMyYTJhMmE7XG5cbiRtYWluWWVsbG93OiAjZmVlYTAwO1xuJGxpZ2h0WWVsbG93OiAjZmZmZmMwO1xuXG4kbWFpbk9yYW5nZTogI2YzNTAwMDtcbiRkYXJrT3JhbmdlOiAjN2EyODAwO1xuIiwiQGtleWZyYW1lcyBmYWRlLWluIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIGZhZGUtb3V0IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIG1vdmVBcnJvdyB7XG4gIDI1JSB7XG4gICAgb3BhY2l0eTogMC44NTtcbiAgfVxuICAzMy4zJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMC42cmVtICogMy44KTtcbiAgfVxuICA2Ni42JSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMC42cmVtICogNS4yKTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwLjZyZW0gKiA4KSBzY2FsZSgwLjUpO1xuICB9XG59XG4iLCIudGltZWxpbmUge1xuICBwYWRkaW5nOiA0ZW0gMWVtO1xuXG4gIEBpbmNsdWRlIG1vYmlsZV9sZyB7XG4gICAgcGFkZGluZzogNGVtIDJlbTtcbiAgfVxuXG4gIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgcGFkZGluZzogOGVtIDJlbTtcbiAgfVxuXG4gICZfX2ludHJvIHtcbiAgICBtYXJnaW46IDAgMCA0ZW0gMDtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICBtYXgtd2lkdGg6IDU1Y2g7XG4gICAgICBtYXJnaW46IDAgYXV0byA0ZW07XG4gICAgfVxuXG4gICAgJl9fdGl0bGUge1xuICAgICAgY29sb3I6ICRtYWluT3JhbmdlO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgfVxuICB9XG5cbiAgJl9fbWVudS1jb250YWluZXIge1xuICAgIG1hcmdpbi1ib3R0b206IDRlbTtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9zbSB7XG4gICAgICBtYXgtd2lkdGg6IDIxZW07XG4gICAgICBtYXJnaW46IDAgYXV0byA0ZW07XG4gICAgfVxuICB9XG5cbiAgJl9fbWVudSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbkdyZXk7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuXG4gICAgcGFkZGluZzogMWVtO1xuICAgIG1hcmdpbjogMDtcblxuICAgICZfX2l0ZW0ge1xuICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRvdGhlckJsYWNrO1xuXG4gICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcblxuICAgICAgJl9fbGluayB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1pbi1vdXQ7XG5cbiAgICAgICAgcGFkZGluZzogMWVtIDEuNWVtO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRsaWdodFllbGxvdztcbiAgICAgICAgICBjb2xvcjogJG90aGVyQmxhY2s7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgLy9oZXJlIHlvdSBzZXQgdGhlIHBvc2l0aW9uIG9mIHRoZSBlbnRpcmUgdGltZWxpbmUgYmxvY2tcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAvLyB2ZXJ0aWNhbCBsaW5lXG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAxMHB4O1xuXG4gICAgICB3aWR0aDogMC4zNzVlbTtcbiAgICAgIGhlaWdodDogOTkuNiU7XG5cbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluT3JhbmdlO1xuICAgICAgYm9yZGVyLXJhZGl1czogMWVtO1xuXG4gICAgICBAaW5jbHVkZSBwY19zbSB7XG4gICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICZfX2l0ZW0ge1xuICAgIC8vaGVyZSB5b3Ugc2V0IHRoZSBwb3NpdGlvbiBvZiB0aGUgaXRlbSBvbiBpbnNpZGUgdGhlIHRpbWVsaW5lIGJsb2NrXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMzVzIGVhc2UtaW47XG5cbiAgICBwYWRkaW5nOiAxLjVlbSAwIDAgMS41ZW07IC8vcHVzaCBmcmVlIGZyb20gdmVydGljYWwgbGluZVxuXG4gICAgbWFyZ2luOiAwIGF1dG8gNGVtO1xuXG4gICAgJi0tcmV2ZWFsIHtcbiAgICAgIG9wYWNpdHk6IDE7IC8vaW50ZXJzZWN0aW9uIG9ic2VydmVyIGFwaSBmYWRlLWluXG4gICAgfVxuXG4gICAgLy8gdGhlIGRvdCBvbiB0aGUgdGltZWxpbmVcbiAgICAmOjpiZWZvcmUge1xuICAgICAgY29udGVudDogXCJcIjtcblxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogMi41cHg7XG4gICAgICB0b3A6IDEuNWVtO1xuXG4gICAgICB3aWR0aDogMjBweDtcbiAgICAgIGhlaWdodDogMjBweDtcblxuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW5ZZWxsb3c7XG4gICAgfVxuXG4gICAgJi0tbGVmdCB7XG4gICAgICBAaW5jbHVkZSBwY19zbSB7XG4gICAgICAgIHJpZ2h0OiA1MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1MCUpO1xuXG4gICAgICAgIHdpZHRoOiA1MCU7XG5cbiAgICAgICAgcGFkZGluZzogMS41ZW0gMS41ZW0gMCAwOyAvL3B1c2ggZnJlZSBmcm9tIHZlcnRpY2FsIGxpbmVcblxuICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgIHdpZHRoOiAyN3B4O1xuICAgICAgICAgIGhlaWdodDogMjdweDtcblxuICAgICAgICAgIGxlZnQ6IHVuc2V0O1xuICAgICAgICAgIHJpZ2h0OiAtMC44MjVlbTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgICYtLXJpZ2h0IHtcbiAgICAgIEBpbmNsdWRlIHBjX3NtIHtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG5cbiAgICAgICAgd2lkdGg6IDUwJTtcblxuICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgIHdpZHRoOiAyN3B4O1xuICAgICAgICAgIGhlaWdodDogMjdweDtcblxuICAgICAgICAgIGxlZnQ6IC0wLjgyNWVtO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fc2Nyb2xsLXVwIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIHJpZ2h0OiAwO1xuXG4gICAgICBtYXJnaW46IDAgMC4yNWVtIDAuMjVlbSAwO1xuXG4gICAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgICByaWdodDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNTAlKTtcbiAgICAgICAgbWFyZ2luOiAwIDAgMC41ZW0gMDtcbiAgICAgIH1cblxuICAgICAgYSB7XG4gICAgICAgIGNvbG9yOiAkbWFpbkdyZXk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fY29udGVudC1jb250YWluZXIge1xuICAgICAgLy9oZXJlIHlvdSBzZXQgdGhlIHN0eWxpbmcgb2YgdGhlIHRpbWVsaW5lIGl0ZW0gYW5kIGl0cyBjb250ZW50XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZE90aGVyV2hpdGU7XG4gICAgICBjb2xvcjogJHRleHRDb2xvci1kYXJrO1xuICAgICAgYm9yZGVyLXJhZGl1czogMC41ZW07XG5cbiAgICAgIHBhZGRpbmc6IDAuNWVtO1xuXG4gICAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgICBwYWRkaW5nOiAyZW07XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fdGl0bGUge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gICAgfVxuXG4gICAgJl9fYmxvY2txdW90ZSB7XG4gICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgbWFyZ2luOiAwO1xuXG4gICAgICAmOmZpcnN0LW9mLXR5cGUge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19pbWFnZSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcblxuICAgICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgICAgd2lkdGg6IDgyJTtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJl9fY3JlZGl0cyB7XG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIG1heC13aWR0aDogNTVjaDtcbiAgICAgIG1hcmdpbjogMCBhdXRvIDRlbTtcbiAgICB9XG5cbiAgICAmX190aXRsZSB7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICB9XG59XG4iLCIuaW5mb19fdGl0bGUsXG4uaW5mb19fY29udGVudC10ZXh0LFxuLmluZm9fX2NvbnRhY3Qge1xuICAgIHBhZGRpbmc6IDAgMmVtO1xuICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5pbmZvX190aXRsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLXRvcDogM2VtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjc1O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIGgxIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICB9XG59XG5cbi5pbmZvX19jb250ZW50LWltYWdlcyB7XG4gICAgcGFkZGluZzogMWVtIDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgaW1nIHtcbiAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIGhlaWdodDogMTAwcHg7XG4gICAgfVxufVxuXG4uaW5mb19fY29udGVudC10ZXh0LFxuLmluZm9fX2NvbnRhY3Qge1xuICAgIGxpbmUtaGVpZ2h0OiAxLjc1O1xufVxuXG4uaW5mb19fY29udGVudC10ZXh0IHtcbiAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG59XG5cbi5pbmZvX19jb250YWN0IHtcblxuICAgIHAge1xuICAgICAgICBjb2xvcjogJG1haW5PcmFuZ2U7XG4gICAgfVxuXG4gICAgaHIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGFya09yYW5nZTtcbiAgICAgICAgaGVpZ2h0OiAzcHg7XG4gICAgICAgIHdpZHRoOiAyMDBweDtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpe1xuICAgIC5pbmZvX19jb250ZW50IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgcGFkZGluZzogMCAxZW07XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07XG5cbiAgICAgICAgLmluZm9fX2NvbnRlbnQtdGV4dCB7XG4gICAgICAgICAgICBvcmRlcjogMTtcbiAgICAgICAgICAgIG1hcmdpbjogdW5zZXQ7XG4gICAgICAgIH1cblxuICAgICAgICAuaW5mb19fY29udGVudC1pbWFnZXMge1xuICAgICAgICAgICAgb3JkZXI6IDI7XG4gICAgICAgICAgICBtYXJnaW46IHVuc2V0O1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmluZm9fX2NvbnRhY3Qge1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBtYXJnaW46IDAgYXV0byAwIDA7XG4gICAgfVxufSAgICIsIi5sb2NhdGlvbiB7XG4gIHBhZGRpbmc6IDRlbSAxZW07XG5cbiAgQGluY2x1ZGUgdGFibGV0X3NtIHtcbiAgICBwYWRkaW5nOiA0ZW0gMmVtO1xuICB9XG5cbiAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICBwYWRkaW5nOiA4ZW0gMmVtO1xuICB9XG5cbiAgJl9fY29udGVudC1jb250YWluZXIge1xuICAgIG1hcmdpbi1ib3R0b206IDRlbTtcbiAgfVxuXG4gICZfX2ludHJvIHtcbiAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgbWF4LXdpZHRoOiA1NWNoO1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgfVxuXG4gICAgJl9fc29jaWFscy1pbnNlcnQge1xuICAgICAgbWFyZ2luOiAwIGF1dG8gNGVtO1xuICAgIH1cbiAgfVxuXG4gICZfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDEuNWVtO1xuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgfVxuXG4gICZfX3NlY3Rpb24tdGl0bGUge1xuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDEuMjVlbTtcblxuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgfVxuXG4gICZfX2J0biB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEyZW07XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gIH1cblxuICAmX19tYXAtY29udGFpbmVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBtYXJnaW46IDAgYXV0byA2ZW0gYXV0bztcbiAgfVxuXG4gICZfX21hcCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLXdpZHRoOiAyNTBweDtcblxuICAgIGhlaWdodDogMTAwJTtcbiAgICBtaW4taGVpZ2h0OiA1MDBweDtcblxuICAgIGJvcmRlcjogMnB4IHNvbGlkICRtYWluT3JhbmdlO1xuXG4gICAgY29sb3I6ICRtYWluT3JhbmdlO1xuICB9XG59XG4iLCIuY29udGFjdCB7XG4gICZfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiA0ZW0gMWVtO1xuXG4gICAgQGluY2x1ZGUgbW9iaWxlX2xnIHtcbiAgICAgIHBhZGRpbmc6IDRlbSAyZW07XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIHBhZGRpbmc6IDhlbSAyZW07XG4gICAgfVxuICB9XG5cbiAgJl9faW50cm8ge1xuICAgIG1hcmdpbi1ib3R0b206IDRlbTtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICBtYXgtd2lkdGg6IDc1Y2g7XG4gICAgICBtYXJnaW46IDAgYXV0byA0ZW07XG4gICAgfVxuXG4gICAgJl9fdGl0bGUge1xuICAgICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICAgIH1cblxuICAgICZfX3RleHQge1xuICAgICAgJl9fbGluayA+IGEge1xuICAgICAgICBjb2xvcjogJG1haW5PcmFuZ2U7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJl9fZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAwIGF1dG8gNGVtO1xuXG4gICAgJl9fYW50aS1zcGFtIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgJl9fY29udGVudC1jb250YWluZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgY29sb3I6ICR0ZXh0Q29sb3ItZGFyaztcbiAgICB9XG5cbiAgICAmX19pbnB1dC1jb250YWluZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBtYXJnaW4tYm90dG9tOiAyZW07XG5cbiAgICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgICBtYXgtd2lkdGg6IDU1Y2g7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvIDJlbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19sYWJlbCB7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcblxuICAgICAgY29sb3I6ICRsaWdodFllbGxvdztcbiAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcblxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIipcIjtcbiAgICAgICAgY29sb3I6ICRtYWluT3JhbmdlO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDAuNWVtO1xuICAgICAgICBmb250LXNpemU6IDAuNzVyZW07XG4gICAgICB9XG5cbiAgICAgICZbZm9yPVwic3ViamVjdFwiXTo6YWZ0ZXIge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2lucHV0LFxuICAgICZfX3NlbGVjdCxcbiAgICAmX190ZXh0YXJlYSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZE90aGVyV2hpdGU7XG4gICAgICBwYWRkaW5nOiAxZW07XG5cbiAgICAgICY6Zm9jdXMtd2l0aGluIHtcbiAgICAgICAgb3V0bGluZTogJG1haW5ZZWxsb3cgMC4xODc1ZW0gc29saWQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fc2VsZWN0IHtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2NvbnNlbnQtY29udGFpbmVyIHtcbiAgICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICAgIG1heC13aWR0aDogNTVjaDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG8gMmVtO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2NvbnNlbnQtdGV4dCB7XG4gICAgICAmID4gYSB7XG4gICAgICAgIGNvbG9yOiAkbWFpbk9yYW5nZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19zdWJtaXQtY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmc6IDFlbTtcbiAgICB9XG5cbiAgICAmX19idG4ge1xuICAgICAgLy8gcG9zaXRpb25pbmcgaW4gbGluZSB3aXRoIGN1c3RvbS1jaGVja2JveFxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgdG9wOiAtMC4xODc1ZW07XG4gICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgY29sb3I6ICRiYWNrZ3JvdW5kT3RoZXJXaGl0ZTtcblxuICAgICAgbWFyZ2luLWxlZnQ6IDRlbTtcblxuICAgICAgJltkaXNhYmxlZF0ge1xuICAgICAgICBvcGFjaXR5OiAwLjc7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIucG9saWN5IHtcbiAgcGFkZGluZzogNGVtIDFlbTtcblxuICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgIHBhZGRpbmc6IDRlbSAyZW07XG4gIH1cblxuICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgIHBhZGRpbmc6IDhlbSAyZW07XG4gIH1cblxuICAmX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgICAgbWF4LXdpZHRoOiA1NWNoO1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgfVxuICB9XG5cbiAgJl9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gIH1cblxuICAmX19zZWN0aW9uLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDEuMjVlbTtcbiAgfVxufVxuIiwiLmVycm9yIHtcbiAgcGFkZGluZzogOGVtIDFlbTtcblxuICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgIHBhZGRpbmc6IDhlbSAyZW07XG4gIH1cblxuICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgIHBhZGRpbmc6IDE2ZW0gMmVtO1xuICB9XG5cbiAgJl9fY29udGVudC1jb250YWluZXIge1xuICAgIG1pbi1oZWlnaHQ6IDY2dmg7XG5cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgbWF4LXdpZHRoOiA1NWNoO1xuXG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICB9XG4gIH1cblxuICAmX19tc2cge1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICB9XG5cbiAgJl9fc3RhdHVzIHtcbiAgICBmb250LXNpemU6IDEuMjVlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gIH1cblxuICAmX19idG4ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMmVtO1xuXG4gICAgcGFkZGluZzogMWVtIDEuNWVtICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cbiIsIi53cmFwcGVyIHtcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cbiIsIi5tb2RhbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuXG4gIHotaW5kZXg6IDQ7XG5cbiAgYmFja2dyb3VuZC1jb2xvcjogJGRhcmtPcmFuZ2U7XG4gIG9wYWNpdHk6IDAuOTk7XG5cbiAgb3ZlcmZsb3cteTogYXV0bztcblxuICAmLS1zaG93IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gICZfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICBmb250LXNpemU6IDIwcHg7XG5cbiAgICBwYWRkaW5nOiAyZW07XG4gIH1cblxuICAmX19oZWFkaW5nIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAmX19pbWctY29udGFpbmVyIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgICB9XG5cbiAgICAmX19pbWcge1xuICAgICAgQGluY2x1ZGUgbW9iaWxlX2xnIHtcbiAgICAgICAgbWF4LXdpZHRoOiA2NiU7XG4gICAgICB9XG5cbiAgICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICAgIG1heC13aWR0aDogMzMlO1xuICAgICAgfVxuICAgIH1cbiAgICAmX190ZXh0LWNvbnRhaW5lciB7XG4gICAgICBtYXgtd2lkdGg6IDU1Y2g7XG4gICAgICBtYXJnaW46IDAgYXV0byAyZW07XG4gICAgfVxuXG4gICAgJl9fdGV4dCB7XG4gICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIH1cbiAgfVxuXG4gICZfX2Zvcm0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgJl9faW5zdHJ1Y3Rpb24ge1xuICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgY29sb3I6ICRtYWluWWVsbG93O1xuICAgIH1cblxuICAgICZfX2lucHV0LWdyb3VwIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19pbnB1dC1jb250YWluZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICAgIGZvbnQtc2l6ZTogMThweDtcblxuICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG5cbiAgICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMC41ZW07XG4gICAgICB9XG5cbiAgICAgICY6bGFzdC1vZi10eXBlIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMS41ZW07XG5cbiAgICAgICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaW5wdXQge1xuICAgICAgICB3aWR0aDogM2VtO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgICAgY29sb3I6ICRtYWluWWVsbG93O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB1bnNldDtcblxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggJG1haW5ZZWxsb3cgc29saWQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fYnRuIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuXG4gICAgICBAaW5jbHVkZSBtb2JpbGVfbGcge1xuICAgICAgICBtYXgtd2lkdGg6IDY2JTtcbiAgICAgIH1cblxuICAgICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgICAgbWF4LXdpZHRoOiAzMyU7XG4gICAgICB9XG5cbiAgICAgIEBpbmNsdWRlIHBjX2xnIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxOCU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuY29va2llLWNvbnNlbnQge1xuICBkaXNwbGF5OiBub25lO1xuXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogNjtcblxuICB3aWR0aDogMTAwJTtcblxuICBwYWRkaW5nOiAyZW0gMWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbkJsYWNrO1xuICBib3JkZXItcmFkaXVzOiA1cHggNXB4IDAgMDtcblxuICAmLS1zaG93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5cbiAgJl9fYnRuLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBmbGV4LWZsb3c6IHJvdy1yZXZlcnNlO1xuICAgIH1cbiAgfVxuXG4gICZfX2J0biB7XG4gICAgd2lkdGg6IDEyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIG1hcmdpbjogMCAxZW0gMCAwO1xuICAgIH1cbiAgfVxufVxuIiwiLmJ0biB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcblxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGFya09yYW5nZTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3gtc2hhZG93OiAycHggMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7XG5cbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIGVhc2UtaW4gMC4zcztcblxuICBwYWRkaW5nOiAwLjVlbSAxZW07XG5cbiAgJi0tb3V0bGluZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdW5zZXQ7XG4gICAgYm9yZGVyOiAxcHggJGxpZ2h0WWVsbG93IHNvbGlkO1xuICB9XG5cbiAgJi0tbGlnaHQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRsaWdodFllbGxvdztcbiAgICBjb2xvcjogJGRhcmtPcmFuZ2U7XG4gIH1cblxuICAmOmhvdmVyIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDEyNSk7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG59XG4iLCIuaGVhZGluZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDJlbTtcblxuICAgIGkge1xuICAgICAgICBjb2xvcjogJG1haW5ZZWxsb3c7XG4gICAgfVxuXG4gICAgaDIsXG4gICAgaDMge1xuICAgICAgICBjb2xvcjogJHRleHRDb2xvci1kYXJrXG4gICAgfVxuICAgIGgzIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjFyZW07XG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgICAgIG1hcmdpbjogMCAwIC41ZW0gMDtcbiAgICB9XG5cbiAgICBociB7XG4gICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgIGhlaWdodDogMnB4O1xuICAgICAgICBiYWNrZ3JvdW5kOiAkbWFpbk9yYW5nZTtcbiAgICB9XG59IiwiLy9mbGFzaCBjYXJkcyBzZXQgYW5kIHJlbmRlcmVkIGJ5IGJhY2tlbmQgY29kZVxuLy9mbGFzaC0tYWxlcnQgaXMgdHJpZ2dlcmVkIGJ5IGZyb250IGVuZCBKYXZhU2NyaXB0XG4uZmxhc2gge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcblxuICB6LWluZGV4OiA3O1xuXG4gIHdpZHRoOiAxMDAlO1xuXG4gIGFuaW1hdGlvbjogZmFkZU91dCA1cyAycyBmb3J3YXJkcztcblxuICAmX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDk1JTtcblxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjb2xvcjogJHRleHRDb2xvci1kYXJrO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmRXaGl0ZTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG5cbiAgICBwYWRkaW5nOiAxZW0gMmVtO1xuICAgIG1hcmdpbjogMC41ZW0gYXV0byAwO1xuXG4gICAgQGluY2x1ZGUgcGNfc20ge1xuICAgICAgbWF4LXdpZHRoOiA2NiU7XG4gICAgfVxuICAgIEBpbmNsdWRlIHBjX2xnIHtcbiAgICAgIG1heC13aWR0aDogMzMlO1xuICAgIH1cblxuICAgICYtLWFsZXJ0IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAwLCAwLCAwLjk1KTtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cbiAgfVxuXG4gICYtLWhpZGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAmLS1hbGVydCB7XG4gICAgZGlzcGxheTogbm9uZTtcblxuICAgICYtLXNob3cge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICB9XG59XG5cbkBrZXlmcmFtZXMgZmFkZU91dCB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cbiIsIi8qIFxuICAjIyMgTk9URSAjIyNcbiAgVGhpcyBpcyB0aGUgYmFzZSBtZW51XG4qL1xuLm1lbnUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cbiAgZm9udC1zaXplOiAwLjc1ZW07XG5cbiAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICB9XG5cbiAgJl9faXRlbSB7XG4gICAgbWluLXdpZHRoOiAzM3B4OyAvL3JlcXVpcmVkIGZvciBkb3R0ZWQgdG9nZ2xlXG5cbiAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcblxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UtaW47XG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAyZW07XG4gICAgfVxuXG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICB9XG5cbiAgICAmLS1pY29uLW9ubHkge1xuICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgIH1cblxuICAgICZfX2xpbmstY29udGFpbmVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjogJG1haW5ZZWxsb3c7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX190ZXh0IHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuXG4gICAgICBtYXJnaW46IDAuNWVtIGF1dG8gMDtcblxuICAgICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgICAgbWFyZ2luOiAwLjVlbSAwLjVlbSAwIDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fYnRuIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHVuc2V0O1xuICAgICAgY29sb3I6ICRsaWdodFllbGxvdztcbiAgICB9XG4gIH1cbn1cbiIsIi8qIFxuICAjIyMgTk9URSAjIyNcbiAgVGhpcyBpcyB0aGUgbWVudSB0aGF0IHBvcHMtdXAgd2hlbiB0b2dnbGluZyB0aGUgZG90dGVkIG1lbnUgbGluayBpbiB0aGUgYmFzZSBtZW51LiBJdCBpcyBwb3NpdGlvbmVkIHJlbGF0aXZlIHRvIHRoZSBuYXZiYXIgZWxlbWVudCBpbiB0aGUgaGVhZGVyIHNlY3Rpb25cbiovXG4ubWVudS1wb3AtdXAge1xuICBkaXNwbGF5OiBub25lO1xuXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTE1JSwgLTkzJSk7XG5cbiAgYmFja2dyb3VuZC1jb2xvcjogJG1haW5HcmV5O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG5cbiAgcGFkZGluZzogMWVtIDAuNWVtO1xuXG4gIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgdG9wOiB1bnNldDtcbiAgICBib3R0b206IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTMzJSwgOTYlKTtcbiAgfVxuXG4gICYtLWFjdGl2ZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYW5pbWF0aW9uOiBmYWRlLWluIDUwMG1zIGZvcndhcmRzO1xuICB9XG5cbiAgJi0tY2xvc2luZyB7XG4gICAgYW5pbWF0aW9uOiBmYWRlLW91dCA1MDBtcyBmb3J3YXJkcztcbiAgfVxuXG4gICZfX2l0ZW0ge1xuICAgIHBhZGRpbmc6IDFlbTtcblxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG90aGVyQmxhY2s7XG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgfVxuXG4gICAgJi0tZGlzYWJsZWQge1xuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICBhIHtcbiAgICAgICAgY29sb3I6IGdyZXk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fbGluay1jb250YWluZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuXG4gICAgJl9fdGV4dCB7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICAgICAgbWFyZ2luOiAwIDFlbSAwIDA7XG4gICAgfVxuICB9XG59XG4iLCIuc2Nyb2xsLWRvd24taWNvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG5cbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDI1JTtcbiAgbGVmdDogNTAlO1xuXG4gIG9wYWNpdHk6IDA7XG5cbiAgYW5pbWF0aW9uOiBtb3ZlQXJyb3cgM3MgZWFzZS1vdXQgaW5maW5pdGU7XG5cbiAgJi0tYWN0aXZlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuIiwiLnNvY2lhbHMtaW5zZXJ0IHtcbiAgd2lkdGg6IDE1ZW07XG5cbiAgJl9fZGl2aWRlciB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBoZWlnaHQ6IDAuMTI1ZW07XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbk9yYW5nZTtcblxuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgfVxuXG4gICZfX2xpbmstY29udGFpbmVyIHtcbiAgICB3aWR0aDogNTAlO1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcblxuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG5cbiAgJl9fbGluayB7XG4gIH1cbn1cbiIsIi5jdXN0b20tY2hlY2tib3gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJl9faW5wdXQge1xuICAgIC8qIFxuICAgICAgICB3ZSB1c2UgdGhlIGZ1bmN0aW9uYWxpdHkgb2YgdGhlIGlucHV0IGVsZW1lbnQgYnV0IHRoZSBzdHlsaW5nIGlzIGVudGlyZWx5IGRvbmUgd2l0aCB0aGUgc3BhbiBlbGVtZW50IGJlbG93IFxuICAgICovXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgICBvcGFjaXR5OiAwO1xuXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgJjpjaGVja2VkIH4gc3BhbiB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbkdyZXk7XG4gICAgfVxuXG4gICAgJjpjaGVja2VkIH4gc3Bhbjo6YWZ0ZXIge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICB9XG5cbiAgJl9fc3BhbiB7XG4gICAgLy8gY3VzdG9tIGNoZWNrYm94XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuXG4gICAgaGVpZ2h0OiAxLjg3NWVtO1xuICAgIHdpZHRoOiAxLjg3NWVtO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmRXaGl0ZTtcbiAgICBib3JkZXI6IDAuMTg3NWVtIHNvbGlkICRtYWluWWVsbG93O1xuXG4gICAgbWFyZ2luOiAwIGF1dG87XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluR3JleTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG4gICAgLy8gY2hlY2stbWFya1xuICAgICY6OmFmdGVyIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBjb250ZW50OiBcIlwiO1xuXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDAuMjVlbTtcbiAgICAgIGxlZnQ6IDAuNDM3NWVtO1xuXG4gICAgICB3aWR0aDogMC4zMTI1ZW07XG4gICAgICBoZWlnaHQ6IDAuNjI1ZW07XG5cbiAgICAgIGJvcmRlcjogc29saWQgJGJhY2tncm91bmRXaGl0ZTtcbiAgICAgIGJvcmRlci13aWR0aDogMCAwLjI1ZW0gMC4yNWVtIDA7XG4gICAgICAvKiBib3JkZXItcmFkaXVzOiA4cHg7ICovXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgfVxuICB9XG59XG4iLCIudGVzdGltb25pYWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZE90aGVyV2hpdGU7XG4gIGNvbG9yOiAkdGV4dENvbG9yLWRhcms7XG5cbiAgcGFkZGluZzogNGVtIDFlbTtcblxuICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgIHBhZGRpbmc6IDRlbSAyZW07XG4gIH1cblxuICAmX19oZWFkaW5nIHtcbiAgICAvL292ZXJyaWRlIHRoZSBkZWZhdWx0IHN0eWxlIGRlZmluZWQgaW4gX3NlY3Rpb24taGVhZGluZ1xuICAgIG1hcmdpbi1ib3R0b206IDRlbSAhaW1wb3J0YW50O1xuXG4gICAgaHIge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICB9XG4gIH1cblxuICAmX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSBlYXNlLWluLW91dCAwLjNzO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuICB9XG5cbiAgJl9fcXVvdGUge1xuICAgIG1hcmdpbi1ib3R0b206IDRlbTtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICBmbGV4OiAwIDAgNTAlO1xuICAgIH1cblxuICAgICZfX3RleHQge1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjc1O1xuXG4gICAgICBwYWRkaW5nOiAxZW0gMDtcblxuICAgICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgICAgcGFkZGluZzogMWVtIDEuNWVtO1xuICAgICAgICBtYXgtd2lkdGg6IDU1Y2g7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2F1dGhvciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuXG4gICAgICBjb2xvcjogJG1haW5PcmFuZ2U7XG5cbiAgICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgfVxuXG4gICAgICAvL2FkZGl0aW9uYWwgY2xhc3NlcyB0byBmb250LWF3ZXNvbWUgaWNvbnMgZ2V0IGxvc3QgZHVyaW5nIGNvbXBpbGF0aW9uXG4gICAgICBpLmZhLWFuZ2xlLXJpZ2h0IHtcbiAgICAgICAgY29sb3I6ICRtYWluWWVsbG93O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDAuNWVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudGVzdGltb25pYWxfX2NvbnRlbnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZy1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDRlbTtcbiAgfVxuXG4gIC50ZXN0aW1vbmlhbF9fY29udGFpbmVyIHtcbiAgICBmbGV4OiAxO1xuICB9XG5cbiAgLnRlc3RpbW9uaWFsX19jb250YWluZXIgKyAudGVzdGltb25pYWxfX2NvbnRhaW5lciB7XG4gICAgbWFyZ2luLWxlZnQ6IDFlbTtcbiAgfVxuXG4gIC50ZXN0aW1vbmlhbF9fY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcblxuICAgIGkge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcbiAgICB9XG4gICAgcC5xdW90ZSB7XG4gICAgICB3aWR0aDogNzAlO1xuICAgICAgcGFkZGluZy10b3A6IDA7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBmb250LXNpemU6IDFyZW07XG4gICAgfVxuICAgIHAuYXV0aG9yIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBtYXJnaW4tbGVmdDogNGVtO1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgfVxuICB9XG59XG4iLCIvKlxuICAgICMjIyMjIyMjI1xuICAgIERFViBOT1RFU1xuICAgICMjIyMjIyMjI1xuXG4tIG1vYmlsZSBmaXJzdCBhcHByb2FjaFxuLSBsYW5kaW5nIGNsYXNzIGdldHMgYWRkZWQgdGhyb3VnaCBqcyBvbiBob21lcGFnZSBvbmx5XG4tIHRoZSBuYXZiYXIgaGFzIHR3byBtZW51IGNvbXBvbmVudHM6IHNlZSBfbWVudS5zY3NzICYgbWVudS1wb3AtdXAuc2Nzc1xuKi9cblxuLmhlYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAwO1xuXG4gIHotaW5kZXg6IDM7XG5cbiAgd2lkdGg6IDEwMCU7XG5cbiAgYmFja2dyb3VuZC1jb2xvcjogJGRhcmtPcmFuZ2U7XG4gIGJvcmRlci10b3A6IDJweCBzb2xpZCAkbWFpblllbGxvdztcblxuICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgIGJvdHRvbTogdW5zZXQ7XG4gICAgdG9wOiAwO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjY2KTtcbiAgICBib3JkZXItdG9wOiB1bnNldDtcbiAgfVxuXG4gICZfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICAvLyBrZWVwIHRoaXMgY29udGFpbmVyIGFzIGxvbmcgYXMgd3JhcHBlciBjbGFzcyBhcHBsaWVkXG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfbWQge1xuICAgICAgZGlzcGxheTogZmxleDsgLy8gdHVybnMgbG9nby1jb250YWluZXIgYW5kIG5hdmJhciBpbnRvIGZsZXggaXRlbXNcbiAgICB9XG4gIH1cblxuICAmX19sb2dvLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogbm9uZTtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGZsZXg6IDAgMCAyMCU7XG5cbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgICAgcGFkZGluZzogMC41IDJlbTtcbiAgICB9XG4gIH1cblxuICAmX19sb2dvIHtcbiAgICB3aWR0aDogNjYlO1xuXG4gICAgJi0taGlkZSB7XG4gICAgICAvL2hpZGRlbiBvbiBsYW5kaW5nIHBhZ2UgdmlhIEpTIHRvIGF2b2lkIGR1cGxpY2F0aW9uIHdpdGggaGVybyBzZWN0aW9uIGxvZ29cbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG5cbiAgJl9fbmF2YmFyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICBwYWRkaW5nOiAxZW0gMmVtIDAuNWVtIDJlbTtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9tZCB7XG4gICAgICB3aWR0aDogdW5zZXQ7XG4gICAgICBmbGV4OiAxO1xuXG4gICAgICBwYWRkaW5nOiAxZW0gMmVtIDFlbSAyZW07XG4gICAgfVxuXG4gICAgJi0tanMtc21hbGwge1xuICAgICAgcGFkZGluZzogMC4yNWVtIDFlbTtcbiAgICB9XG4gIH1cbn1cbiIsIi5oZXJvIHtcbiAgLy9zZWUgYXBwLmpzIGZvciBjYWxjdWxhdGlvbiBvZiBjdXN0b20gdmFyaWFibGVzIGxpa2UgaGVpZ2h0IGFuZCBzb21lIG1vZGZpY2F0aW9ucyBmb3Igc21hbGwgc2NyZWVuc1xuXG4gIGhlaWdodDogY2FsYyh2YXIoLS12aCwgMXZoKSAqIDEwMCk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgJl9fY29udGVudC1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgLy9zZWUgc2Nyb2xsLWRvd24taWNvbi5zY3NzXG5cbiAgICAvL21pbmQgdGhlIGJyb3dzZXIgbWVudSdzIGFuZCBvd24gc2l0ZSBtZW51XG4gICAgaGVpZ2h0OiBjYWxjKHZhcigtLWlubmVySGVpZ2h0KSAtIHZhcigtLW1lbnVIZWlnaHQpKTtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9zbSB7XG4gICAgICAvL3R3byBjb2x1bW4gdmlldyBmcm9tIGhlcmUgb25cbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgcGFkZGluZzogMmVtO1xuICAgIH1cbiAgfVxuXG4gICZfX2N0YSB7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6ICRsaWdodFllbGxvdztcblxuICAgIHBhZGRpbmc6IDJlbSAyZW0gMCAyZW07XG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICB9XG5cbiAgICAmX19sb2dvIHtcbiAgICAgIG1heC13aWR0aDogNDUlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIH1cblxuICAgICZfX2hlYWRpbmcge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAmLS1oaWRlIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cbiAgICAgIEBpbmNsdWRlIHRhYmxldF9zbSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgICAgIH1cblxuICAgICAgJl9fdGl0bGUge1xuICAgICAgICBmb250LXNpemU6IDEuNWVtO1xuICAgICAgICBjb2xvcjogJG1haW5ZZWxsb3c7XG5cbiAgICAgICAgQGluY2x1ZGUgcGNfc20ge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICZfX3N1YnRpdGxlIHtcbiAgICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICAgIGNvbG9yOiAkbGlnaHRHcmV5O1xuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG5cbiAgICAgICAgQGluY2x1ZGUgcGNfc20ge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19idG4ge1xuICAgICAgZGlzcGxheTogbm9uZTtcblxuICAgICAgQGluY2x1ZGUgdGFibGV0X3NtIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1heC13aWR0aDogMTJlbTtcblxuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmX19icmFuZC1pbWFnZS1jb250YWluZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIEBpbmNsdWRlIHRhYmxldF9zbSB7XG4gICAgICB3aWR0aDogNTAlO1xuICAgIH1cbiAgfVxuXG4gICZfX2JyYW5kLWltYWdlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDAgYXV0bztcblxuICAgIHdpZHRoOiA2NiU7XG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgcGNfc20ge1xuICAgICAgd2lkdGg6IDY2JTtcbiAgICB9XG4gIH1cbn1cbiIsIi5saW5rLXNlY3Rpb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZFdoaXRlO1xuICBwYWRkaW5nOiA0ZW0gMWVtO1xuXG4gIEBpbmNsdWRlIG1vYmlsZV9sZyB7XG4gICAgcGFkZGluZzogNGVtIDJlbTtcbiAgfVxuXG4gICZfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgIEBpbmNsdWRlIHBjX3NtIHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgICB9XG4gIH1cblxuICAmX19saW5rIHtcbiAgICBmbGV4OiAxO1xuICAgIG9wYWNpdHk6IDE7XG5cbiAgICBib3gtc2hhZG93OiAycHggMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gICAgYm9yZGVyLXJhZGl1czogOXB4O1xuXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbjtcblxuICAgIEBpbmNsdWRlIHBjX3NtIHtcbiAgICAgIG1heC13aWR0aDogNDAlO1xuICAgIH1cblxuICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG5cbiAgICAgIEBpbmNsdWRlIHBjX3NtIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGJveC1zaGFkb3c6IDJweCAycHggMnB4IDAgJG1haW5PcmFuZ2U7XG4gICAgfVxuXG4gICAgJl9fY29udGVudCB7XG4gICAgICBwYWRkaW5nOiAwIDFlbTtcblxuICAgICAgQGluY2x1ZGUgdGFibGV0X3NtIHtcbiAgICAgICAgcGFkZGluZzogMCAyZW07XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuaGlzdG9yeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRiYWNrZ3JvdW5kT3RoZXJXaGl0ZTtcblxuICAmX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICBwYWRkaW5nOiA0ZW0gMWVtO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuXG4gICAgQGluY2x1ZGUgbW9iaWxlX2xnIHtcbiAgICAgIHBhZGRpbmc6IDRlbSAyZW07XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgcGNfc20ge1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgfVxuICB9XG5cbiAgLy90aGUgY29udGVudCBpcyB3cmFwcGVkIGluIGFuIGEtdGFnLiBUaGF0IGEtdGFnIHJlLXVzZXMgdGhlIHN0eWxpbmcgZnJvbSBfbGluay1zZWN0aW9uX19saW5rXG5cbiAgJl9faGVhZGluZyB7XG4gICAgcGFkZGluZzogMCAxZW07XG5cbiAgICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgICAgcGFkZGluZzogMCAyZW07XG4gICAgfVxuICB9XG5cbiAgJl9faW1hZ2UtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgZmlndXJlIHtcbiAgICAgIG1hcmdpbjogMDtcblxuICAgICAgJjpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICAgICAgfVxuXG4gICAgICBpbWcge1xuICAgICAgICBib3JkZXItcmFkaXVzOiA5cHg7XG5cbiAgICAgICAgQGluY2x1ZGUgcGNfc20ge1xuICAgICAgICAgIHdpZHRoOiA2MyU7XG4gICAgICAgIH1cblxuICAgICAgICBAaW5jbHVkZSBwY19sZyB7XG4gICAgICAgICAgd2lkdGg6IDU3JTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLm5ld3NsZXR0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZFdoaXRlO1xuICBwYWRkaW5nOiA0ZW0gMWVtO1xuXG4gICZfX2NvbnRlbnQtY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiA0ZW0gMWVtO1xuXG4gICAgQGluY2x1ZGUgbW9iaWxlX2xnIHtcbiAgICAgIHBhZGRpbmc6IDRlbSAyZW07XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIG1heC13aWR0aDogNjYlO1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgfVxuICB9XG5cbiAgJl9faGVhZGluZyB7XG4gIH1cblxuICAmX19pbnB1dC1jb250YWluZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIG1heC13aWR0aDogNTQlO1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgfVxuICB9XG5cbiAgJl9fZm9ybSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICAmX19pbnB1dC1lbWFpbCB7XG4gICAgICB3aWR0aDogODAlO1xuXG4gICAgICBmb250LXNpemU6IDFyZW07XG5cbiAgICAgIGNvbG9yOiAkdGV4dENvbG9yLWRhcms7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZE90aGVyV2hpdGU7XG4gICAgICBib3JkZXI6ICRtYWluT3JhbmdlIDFweCBzb2xpZDtcblxuICAgICAgcGFkZGluZzogMWVtO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG5cbiAgICAgICY6OnBsYWNlaG9sZGVyIHtcbiAgICAgICAgY29sb3I6ICR0ZXh0Q29sb3ItZGFyaztcbiAgICAgIH1cbiAgICAgICY6Zm9jdXMtd2l0aGluIHtcbiAgICAgICAgb3V0bGluZTogJG1haW5PcmFuZ2UgMXB4IHNvbGlkO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2NvbnNlbnQtY29udGFpbmVyIHtcbiAgICAgIHdpZHRoOiA4MCU7XG5cbiAgICAgIGNvbG9yOiAkdGV4dENvbG9yLWRhcms7XG5cbiAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjc1O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cblxuICAgICZfX2NvbnNlbnQtdGV4dCB7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBtYXJnaW4tYm90dG9tOiAyZW07XG5cbiAgICAgIGEge1xuICAgICAgICBjb2xvcjogJG1haW5PcmFuZ2U7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2J0biB7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgY29sb3I6ICRiYWNrZ3JvdW5kT3RoZXJXaGl0ZTtcblxuICAgICAgJjpkaXNhYmxlZCB7XG4gICAgICAgIG9wYWNpdHk6IDAuNTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi5mb290ZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQ6ICRvdGhlckJsYWNrO1xuXG4gIGJvcmRlci10b3A6IDRweCAkbWFpblllbGxvdyBzb2xpZDtcblxuICAmX19jb250ZW50LWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBwYWRkaW5nOiA4ZW0gMmVtIDhlbSAyZW07XG4gICAgLyogXG4gICAgICAgIGV4dHJhIHBhZGRpbmcgb24gYm90dG9tIHRvIGNyZWF0ZSBzcGFjZSBmb3IgZml4ZWQgaGVhZGVyIFxuICAgICAgICBib3R0b20gbWVudSBvbiBtb2JpbGUgZGV2aWNlc1xuICAgICovXG4gICAgQGluY2x1ZGUgdGFibGV0X3NtIHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgdGFibGV0X21kIHtcbiAgICAgIHBhZGRpbmc6IDhlbSAyZW0gMWVtIDJlbTtcbiAgICB9XG4gIH1cblxuICBoMyB7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgbWFyZ2luOiAwIDAgMC41ZW0gMDtcbiAgfVxuXG4gIGhyIHtcbiAgICB3aWR0aDogNzAlO1xuICAgIGhlaWdodDogMnB4O1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW5PcmFuZ2U7XG5cbiAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gIH1cblxuICAmX19zb2NpYWwtbWVkaWEge1xuICAgIG1hcmdpbi1ib3R0b206IDRlbTtcblxuICAgIGEgKyBhIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyZW07XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgdGFibGV0X3NtIHtcbiAgICAgIHdpZHRoOiA1MCU7XG4gICAgfVxuICB9XG5cbiAgJl9fY29udGFjdCB7XG4gICAgbWFyZ2luLWJvdHRvbTogNGVtO1xuXG4gICAgQGluY2x1ZGUgdGFibGV0X3NtIHtcbiAgICAgIHdpZHRoOiA1MCU7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbiAgICB9XG4gIH1cblxuICAmX19sZWdhbC1saW5rcyB7XG4gICAgbWFyZ2luLWJvdHRvbTogNGVtO1xuXG4gICAgdWwgbGkge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuXG4gICAgICBhIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgdGFibGV0X3NtIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICBtYXJnaW4tdG9wOiAyZW07XG4gICAgfVxuICB9XG5cbiAgJl9fYWRkcmVzcyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG5cbiAgICBpbWcge1xuICAgICAgd2lkdGg6IDU1JTtcblxuICAgICAgQGluY2x1ZGUgdGFibGV0X3NtIHtcbiAgICAgICAgd2lkdGg6IDQwJTtcbiAgICAgIH1cblxuICAgICAgQGluY2x1ZGUgcGNfc20ge1xuICAgICAgICB3aWR0aDogMzMlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGFkZHJlc3Mge1xuICAgICAgd2lkdGg6IDIwMHB4O1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgfVxuXG4gICZfX2NvcHlyaWdodCB7XG4gICAgZm9udC1zaXplOiAwLjc1cmVtO1xuXG4gICAgaHIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGxpZ2h0WWVsbG93O1xuXG4gICAgICBAaW5jbHVkZSB0YWJsZXRfc20ge1xuICAgICAgICB3aWR0aDogOTUlO1xuICAgICAgfVxuICAgIH1cblxuICAgIEBpbmNsdWRlIHRhYmxldF9zbSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIH1cblxuICAmX19jcmVkaXRzIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW07XG4gICAgY29sb3I6ICRtYWluT3JhbmdlO1xuXG4gICAgcCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIHRhYmxldF9zbSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIH1cblxuICAmX19uYXYtdXAge1xuICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRvcDogMTUlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcblxuICAgIEBpbmNsdWRlIHBjX3NtIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgICZfX2NvbnRhaW5lciB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB3aWR0aDogNTBweDtcbiAgICAgIGhlaWdodDogNTBweDtcblxuICAgICAgb3BhY2l0eTogMC43O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW5ZZWxsb3c7XG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG5cbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2UtaW4tb3V0O1xuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogMC44O1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDEyNSk7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluT3JhbmdlO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2ZpZ3VyZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiAyMCU7XG4gICAgICB0b3A6IC0xMCU7XG5cbiAgICAgIGJvcmRlci10b3A6IDE1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItcmlnaHQ6IDE1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItYm90dG9tOiAyNXB4IHNvbGlkICMwMzAzMDM7XG4gICAgICBib3JkZXItbGVmdDogMTVweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICB9XG4gIH1cbn1cbiJdfQ== */