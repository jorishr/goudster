{"version":3,"file":"vendor-bundle.js","mappingsvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAFA;AAGA;AAEA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAQA;AACA;AACA;AAKA;AACA;AACA;AACA;AAKA;AACA;AAEA;AAAA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAuEA;AACA;AAAA;AAAA;AAAA;AAAA;AAkEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzJA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA6FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACnSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AAEA;AACA","sources":["webpack://goudster/./node_modules/@googlemaps/js-api-loader/dist/index.esm.js","webpack://goudster/./app/helpers/checkDateRange.js","webpack://goudster/./app/public/scripts/vendor/maps.js","webpack://goudster/./app/public/scripts/vendor/snowfall.js","webpack://goudster/webpack/bootstrap","webpack://goudster/webpack/runtime/define property getters","webpack://goudster/webpack/runtime/hasOwnProperty shorthand","webpack://goudster/webpack/runtime/make namespace object","webpack://goudster/./app/public/scripts/vendor/vendor.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n\n/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at.\n *\n *      Http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_ID = \"__googleMapsScriptId\";\n/**\n * The status of the [[Loader]].\n */\nvar LoaderStatus;\n(function (LoaderStatus) {\n    LoaderStatus[LoaderStatus[\"INITIALIZED\"] = 0] = \"INITIALIZED\";\n    LoaderStatus[LoaderStatus[\"LOADING\"] = 1] = \"LOADING\";\n    LoaderStatus[LoaderStatus[\"SUCCESS\"] = 2] = \"SUCCESS\";\n    LoaderStatus[LoaderStatus[\"FAILURE\"] = 3] = \"FAILURE\";\n})(LoaderStatus || (LoaderStatus = {}));\n/**\n * [[Loader]] makes it easier to add Google Maps JavaScript API to your application\n * dynamically using\n * [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n * It works by dynamically creating and appending a script node to the the\n * document head and wrapping the callback function so as to return a promise.\n *\n * ```\n * const loader = new Loader({\n *   apiKey: \"\",\n *   version: \"weekly\",\n *   libraries: [\"places\"]\n * });\n *\n * loader.load().then((google) => {\n *   const map = new google.maps.Map(...)\n * })\n * ```\n */\nclass Loader {\n    /**\n     * Creates an instance of Loader using [[LoaderOptions]]. No defaults are set\n     * using this library, instead the defaults are set by the Google Maps\n     * JavaScript API server.\n     *\n     * ```\n     * const loader = Loader({apiKey, version: 'weekly', libraries: ['places']});\n     * ```\n     */\n    constructor({ apiKey, authReferrerPolicy, channel, client, id = DEFAULT_ID, language, libraries = [], mapIds, nonce, region, retries = 3, url = \"https://maps.googleapis.com/maps/api/js\", version, }) {\n        this.callbacks = [];\n        this.done = false;\n        this.loading = false;\n        this.errors = [];\n        this.apiKey = apiKey;\n        this.authReferrerPolicy = authReferrerPolicy;\n        this.channel = channel;\n        this.client = client;\n        this.id = id || DEFAULT_ID; // Do not allow empty string\n        this.language = language;\n        this.libraries = libraries;\n        this.mapIds = mapIds;\n        this.nonce = nonce;\n        this.region = region;\n        this.retries = retries;\n        this.url = url;\n        this.version = version;\n        if (Loader.instance) {\n            if (!fastDeepEqual(this.options, Loader.instance.options)) {\n                throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(Loader.instance.options)}`);\n            }\n            return Loader.instance;\n        }\n        Loader.instance = this;\n    }\n    get options() {\n        return {\n            version: this.version,\n            apiKey: this.apiKey,\n            channel: this.channel,\n            client: this.client,\n            id: this.id,\n            libraries: this.libraries,\n            language: this.language,\n            region: this.region,\n            mapIds: this.mapIds,\n            nonce: this.nonce,\n            url: this.url,\n            authReferrerPolicy: this.authReferrerPolicy,\n        };\n    }\n    get status() {\n        if (this.errors.length) {\n            return LoaderStatus.FAILURE;\n        }\n        if (this.done) {\n            return LoaderStatus.SUCCESS;\n        }\n        if (this.loading) {\n            return LoaderStatus.LOADING;\n        }\n        return LoaderStatus.INITIALIZED;\n    }\n    get failed() {\n        return this.done && !this.loading && this.errors.length >= this.retries + 1;\n    }\n    /**\n     * CreateUrl returns the Google Maps JavaScript API script url given the [[LoaderOptions]].\n     *\n     * @ignore\n     * @deprecated\n     */\n    createUrl() {\n        let url = this.url;\n        url += `?callback=__googleMapsCallback`;\n        if (this.apiKey) {\n            url += `&key=${this.apiKey}`;\n        }\n        if (this.channel) {\n            url += `&channel=${this.channel}`;\n        }\n        if (this.client) {\n            url += `&client=${this.client}`;\n        }\n        if (this.libraries.length > 0) {\n            url += `&libraries=${this.libraries.join(\",\")}`;\n        }\n        if (this.language) {\n            url += `&language=${this.language}`;\n        }\n        if (this.region) {\n            url += `&region=${this.region}`;\n        }\n        if (this.version) {\n            url += `&v=${this.version}`;\n        }\n        if (this.mapIds) {\n            url += `&map_ids=${this.mapIds.join(\",\")}`;\n        }\n        if (this.authReferrerPolicy) {\n            url += `&auth_referrer_policy=${this.authReferrerPolicy}`;\n        }\n        return url;\n    }\n    deleteScript() {\n        const script = document.getElementById(this.id);\n        if (script) {\n            script.remove();\n        }\n    }\n    /**\n     * Load the Google Maps JavaScript API script and return a Promise.\n     * @deprecated, use importLibrary() instead.\n     */\n    load() {\n        return this.loadPromise();\n    }\n    /**\n     * Load the Google Maps JavaScript API script and return a Promise.\n     *\n     * @ignore\n     * @deprecated, use importLibrary() instead.\n     */\n    loadPromise() {\n        return new Promise((resolve, reject) => {\n            this.loadCallback((err) => {\n                if (!err) {\n                    resolve(window.google);\n                }\n                else {\n                    reject(err.error);\n                }\n            });\n        });\n    }\n    importLibrary(name) {\n        this.execute();\n        return google.maps.importLibrary(name);\n    }\n    /**\n     * Load the Google Maps JavaScript API script with a callback.\n     * @deprecated, use importLibrary() instead.\n     */\n    loadCallback(fn) {\n        this.callbacks.push(fn);\n        this.execute();\n    }\n    /**\n     * Set the script on document.\n     */\n    setScript() {\n        var _a, _b;\n        if (document.getElementById(this.id)) {\n            // TODO wrap onerror callback for cases where the script was loaded elsewhere\n            this.callback();\n            return;\n        }\n        const params = {\n            key: this.apiKey,\n            channel: this.channel,\n            client: this.client,\n            libraries: this.libraries.length && this.libraries,\n            v: this.version,\n            mapIds: this.mapIds,\n            language: this.language,\n            region: this.region,\n            authReferrerPolicy: this.authReferrerPolicy,\n        };\n        // keep the URL minimal:\n        Object.keys(params).forEach(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (key) => !params[key] && delete params[key]);\n        if (!((_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.maps) === null || _b === void 0 ? void 0 : _b.importLibrary)) {\n            // tweaked copy of https://developers.google.com/maps/documentation/javascript/load-maps-js-api#dynamic-library-import\n            // which also sets the base url, the id, and the nonce\n            /* eslint-disable */\n            ((g) => {\n                // @ts-ignore\n                let h, a, k, p = \"The Google Maps JavaScript API\", c = \"google\", l = \"importLibrary\", q = \"__ib__\", m = document, b = window;\n                // @ts-ignore\n                b = b[c] || (b[c] = {});\n                // @ts-ignore\n                const d = b.maps || (b.maps = {}), r = new Set(), e = new URLSearchParams(), u = () => \n                // @ts-ignore\n                h || (h = new Promise((f, n) => __awaiter(this, void 0, void 0, function* () {\n                    var _a;\n                    yield (a = m.createElement(\"script\"));\n                    a.id = this.id;\n                    e.set(\"libraries\", [...r] + \"\");\n                    // @ts-ignore\n                    for (k in g)\n                        e.set(k.replace(/[A-Z]/g, (t) => \"_\" + t[0].toLowerCase()), g[k]);\n                    e.set(\"callback\", c + \".maps.\" + q);\n                    a.src = this.url + `?` + e;\n                    d[q] = f;\n                    a.onerror = () => (h = n(Error(p + \" could not load.\")));\n                    // @ts-ignore\n                    a.nonce = this.nonce || ((_a = m.querySelector(\"script[nonce]\")) === null || _a === void 0 ? void 0 : _a.nonce) || \"\";\n                    m.head.append(a);\n                })));\n                // @ts-ignore\n                d[l] ? console.warn(p + \" only loads once. Ignoring:\", g) : (d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)));\n            })(params);\n            /* eslint-enable */\n        }\n        // While most libraries populate the global namespace when loaded via bootstrap params,\n        // this is not the case for \"marker\" when used with the inline bootstrap loader\n        // (and maybe others in the future). So ensure there is an importLibrary for each:\n        const libraryPromises = this.libraries.map((library) => this.importLibrary(library));\n        // ensure at least one library, to kick off loading...\n        if (!libraryPromises.length) {\n            libraryPromises.push(this.importLibrary(\"core\"));\n        }\n        Promise.all(libraryPromises).then(() => this.callback(), (error) => {\n            const event = new ErrorEvent(\"error\", { error }); // for backwards compat\n            this.loadErrorCallback(event);\n        });\n    }\n    /**\n     * Reset the loader state.\n     */\n    reset() {\n        this.deleteScript();\n        this.done = false;\n        this.loading = false;\n        this.errors = [];\n        this.onerrorEvent = null;\n    }\n    resetIfRetryingFailed() {\n        if (this.failed) {\n            this.reset();\n        }\n    }\n    loadErrorCallback(e) {\n        this.errors.push(e);\n        if (this.errors.length <= this.retries) {\n            const delay = this.errors.length * Math.pow(2, this.errors.length);\n            console.error(`Failed to load Google Maps script, retrying in ${delay} ms.`);\n            setTimeout(() => {\n                this.deleteScript();\n                this.setScript();\n            }, delay);\n        }\n        else {\n            this.onerrorEvent = e;\n            this.callback();\n        }\n    }\n    callback() {\n        this.done = true;\n        this.loading = false;\n        this.callbacks.forEach((cb) => {\n            cb(this.onerrorEvent);\n        });\n        this.callbacks = [];\n    }\n    execute() {\n        this.resetIfRetryingFailed();\n        if (this.done) {\n            this.callback();\n        }\n        else {\n            // short circuit and warn if google.maps is already loaded\n            if (window.google && window.google.maps && window.google.maps.version) {\n                console.warn(\"Google Maps already loaded outside @googlemaps/js-api-loader.\" +\n                    \"This may result in undesirable behavior as options and script parameters may not match.\");\n                this.callback();\n                return;\n            }\n            if (this.loading) ;\n            else {\n                this.loading = true;\n                this.setScript();\n            }\n        }\n    }\n}\n\nexport { DEFAULT_ID, Loader, LoaderStatus };\n//# sourceMappingURL=index.esm.js.map\n","// this function helps snowfall.js to determine whether it should run\n\nexport default function checkDataRange() {\n  const currentDate = new Date();\n  const currentMonth = currentDate.getMonth() + 1;\n  const currentDay = currentDate.getDate();\n\n  // Define the start and end dates for the condition\n  const startMonth = 12; // December\n  const startDay = 15;\n  const endMonth = 2; // February\n  const endDay = 15;\n\n  // Check if the current date is within the specified range\n  const isInDateRange =\n    (currentMonth === startMonth && currentDay >= startDay) ||\n    (currentMonth > startMonth && currentMonth < endMonth) ||\n    (currentMonth === endMonth && currentDay <= endDay);\n\n  if (isInDateRange) {\n    return true;\n  } else {\n    return false;\n  }\n}\n","/* \n### Reference documentation \nhttps://developers.google.com/maps/documentation/javascript/load-maps-js-api \n\n### API KEY\nNote that the public API key is not loaded dynamically. It is added to during the build process with a Gulp task. This code will run in a browser environment without .env file. During development or for maintenance tasks, add the key manually. When done set the string to the value as is.\n\nSimilar thing for the mapId. In development use DEMO-MAP-ID. The gulp task will replace it with the correct one.\n*/\n\nimport { Loader } from \"@googlemaps/js-api-loader\";\n\nexport default function initMap() {\n  const maps_API_KEY = \"GOOGLE_MAPS_API\";\n  const mapElement = document.getElementById(\"map\");\n  if (mapElement) {\n    const mapOptions = {\n      center: { lat: 50.948139, lng: 5.11457 },\n      zoom: 10,\n      mapId: \"DEMO_MAP_ID\",\n    };\n\n    const loader = new Loader({\n      apiKey: maps_API_KEY,\n      version: \"weekly\",\n      libraries: [\"marker\"],\n    });\n\n    let map;\n\n    loader\n      .load()\n      .then(async () => {\n        const { Map, InfoWindow } = await google.maps.importLibrary(\"maps\");\n        const { AdvancedMarkerElement } = await google.maps.importLibrary(\n          \"marker\"\n        );\n        map = new Map(mapElement, mapOptions);\n\n        const infoWindow = new InfoWindow();\n        function buildMarkerIcon() {\n          const markerIcon = document.createElement(\"img\");\n          markerIcon.src = \"/images/favicon.ico\";\n          return markerIcon;\n        }\n\n        for (const place of places) {\n          const AdvancedMarkerElement =\n            new google.maps.marker.AdvancedMarkerElement({\n              map,\n              content: buildMarkerIcon(),\n              position: place.position,\n              title: place.title,\n            });\n\n          AdvancedMarkerElement.addListener(\"click\", ({ domEvent, latLng }) => {\n            const { target } = domEvent;\n\n            infoWindow.close();\n            infoWindow.setContent(AdvancedMarkerElement.title);\n            infoWindow.open(AdvancedMarkerElement.map, AdvancedMarkerElement);\n          });\n        }\n      })\n      .catch((e) => console.error(\"Error when loading Google Maps\", e));\n  }\n}\n\nconst places = [\n  {\n    title: \"Golf, Lummen\",\n    position: { lat: 50.993705, lng: 5.226711 },\n  },\n  {\n    title: \"'t Vloot, Linkhout\",\n    position: { lat: 50.963271, lng: 5.146496 },\n  },\n  {\n    title: \"Café De Markt, Halen\",\n    position: { lat: 50.948305, lng: 5.113703 },\n  },\n  {\n    title: \"Vandepoel Drinkcenter, Halen\",\n    position: { lat: 50.948095, lng: 5.108037 },\n  },\n  {\n    title: \"Thomas Drink, Zoutleeuw\",\n    position: { lat: 50.830499, lng: 5.113714 },\n  },\n  {\n    title: \"Sportcafé De Koekoek, Halen\",\n    position: { lat: 50.946865, lng: 5.11589 },\n  },\n  {\n    title: \"Buurthuis-De Toekomst, Zellik\",\n    position: { lat: 50.953, lng: 5.084273 },\n  },\n  {\n    title: \"Brasserie 3punt, Halen\",\n    position: { lat: 50.94941, lng: 5.114359 },\n  },\n  {\n    title: \"Den AperO, Diest\",\n    position: { lat: 50.984152, lng: 5.05078 },\n  },\n  {\n    title: \"De Rotemse Molen, Halen\",\n    position: { lat: 50.928832, lng: 5.092178 },\n  },\n  {\n    title: \"Huis van Hem, Halen\",\n    position: { lat: 50.940806, lng: 5.105423 },\n  },\n  {\n    title: \"Immigrand, Diest\",\n    position: { lat: 50.979488, lng: 5.054977 },\n  },\n  {\n    title: \"Proxy Delhaize, Halen\",\n    position: { lat: 50.949516, lng: 5.114395 },\n  },\n  {\n    title: \"Spar, Halen\",\n    position: { lat: 50.948102, lng: 5.108236 },\n  },\n  {\n    title: \"Drankenhandel Claes, Lummen\",\n    position: { lat: 50.988164, lng: 5.195896 },\n  },\n  {\n    title: \"Café Groenhof, Schaffen\",\n    position: { lat: 50.990513, lng: 5.081114 },\n  },\n  {\n    title: \"De Sigaret, Diest\",\n    position: { lat: 50.983599, lng: 5.054736 },\n  },\n  {\n    title: \"De Groene Munt, Diest\",\n    position: { lat: 50.984894, lng: 5.053982 },\n  },\n  {\n    title: \"Place Douze, Halen\",\n    position: { lat: 50.947809, lng: 5.114072 },\n  },\n  {\n    title: \"Museum de Reinvoart, Halen\",\n    position: { lat: 50.932681, lng: 5.063551 },\n  },\n  {\n    title: \"Stamineeke, Webbekom\",\n    position: { lat: 50.972876, lng: 5.071093 },\n  },\n  {\n    title: \"Brasserie Huys Frederic, Herk-de-Stad\",\n    position: { lat: 50.95721, lng: 5.176336 },\n  },\n  {\n    title: \"Omnidrinks Bungeneers, Nieuwerkerken\",\n    position: { lat: 50.889616, lng: 5.191029 },\n  },\n  {\n    title: \"Mucca Rosa, Herk-de-Stad\",\n    position: { lat: 50.948292, lng: 5.123005 },\n  },\n  {\n    title: \"Traiteur Nico, Halen\",\n    position: { lat: 50.947701, lng: 5.1094 },\n  },\n  {\n    title: \"Lavendelhoeve, Stokrooi\",\n    position: { lat: 50.9635, lng: 5.277173 },\n  },\n  {\n    title: \"Schmedz, Diest\",\n    position: { lat: 50.984274, lng: 5.050664 },\n  },\n  {\n    title: \"t Puur Genot, Diest\",\n    position: { lat: 50.984668, lng: 5.049057 },\n  },\n  {\n    title: \"Oud Diest, Diest\",\n    position: { lat: 50.984176, lng: 5.050766 },\n  },\n  {\n    title: \"Herberg De Pastorie, Zelem\",\n    position: { lat: 50.97845, lng: 5.099864 },\n  },\n  {\n    title: \"Drankenhandel KEFO-JANNES, Diest\",\n    position: { lat: 50.980845, lng: 5.060089 },\n  },\n  {\n    title: \"De XIIe Oogst, Halen\",\n    position: { lat: 50.94836, lng: 5.115024 },\n  },\n];\n","import checkDataRange from \"../../../helpers/checkDateRange.js\";\n/*!\n * This animation should run between 15 decemeber and 15 february. Condition\n * checked by helper function.\n *\n * Snowfall.js - A JavaScript library for creating and animating snowflakes on a web page\n * https://github.com/Andrey-1988-dev/snowfall.js\n *\n * Author: Andrey Yurkevich (https://github.com/Andrey-1988-dev)\n * Contact: yurkevich.a.n.1988@gmail.com\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n * Version: 1.1.0\n * Date: 2021-11-27T00:00Z\n */\n\n(\"use strict\");\n\n// Class for creating snowflakes\nclass Snowflake {\n  // Constructor takes x and y coordinates, radius, speed and color of the snowflake\n  constructor(canvas, h, s, c, t) {\n    // Generate a random x coordinate within the canvas width\n    this.x = Math.random() * canvas.width; // x coordinate\n    // Generate a random y coordinate within the canvas height\n    this.y = Math.random() * canvas.height; // y coordinate\n    this.h = h; // font size\n    this.s = s; // speed\n    this.c = c; // color\n    this.t = t; // text\n  }\n\n  // Function to calculate the new position of the snowflake relative to the edge of the canvas\n  calculateNewPosition = (oldPosition, oldCanvasSize, newCanvasSize) => {\n    // Calculate the old position of the snowflake from the edge in percentage\n    let percentage = oldPosition / (oldCanvasSize / 100);\n    // Calculate the new position of the snowflake from the edge in pixels\n    // Return the new position\n    return (newCanvasSize / 100) * percentage;\n  };\n\n  updateAfterCanvasResize = (\n    oldCanvasWidth,\n    oldCanvasHeight,\n    newCanvasWidth,\n    newCanvasHeight\n  ) => {\n    if (oldCanvasWidth !== newCanvasWidth) {\n      // Call the function to calculate the new position of the snowflake from the left edge\n      this.x = this.calculateNewPosition(\n        this.x,\n        oldCanvasWidth,\n        newCanvasWidth\n      );\n    }\n    if (oldCanvasHeight !== newCanvasHeight) {\n      // Call the function to calculate the new position of the snowflake from the top edge\n      this.y = this.calculateNewPosition(\n        this.y,\n        oldCanvasHeight,\n        newCanvasHeight\n      );\n    }\n  };\n\n  // Method to draw the snowflake on the canvas\n  draw = (ctx) => {\n    // Check if the snowflake is within the visible area\n    if (\n      this.x + this.h >= window.scrollX &&\n      this.x - this.h <= window.scrollX + window.innerWidth &&\n      this.y + this.h >= window.scrollY &&\n      this.y - this.h <= window.scrollY + window.innerHeight\n    ) {\n      ctx.font = this.h + \"px Arial, sans-serif\"; // set the font and text size\n      ctx.fillText(this.t, this.x, this.y); // draw the text with the snowflake symbol\n      ctx.fillStyle = this.c; // set the color\n    }\n  };\n\n  // Method to update the position of the snowflake\n  update = (canvas) => {\n    this.y += this.s; // increase the y coordinate by the speed\n    // if the snowflake goes beyond the bottom edge of the canvas, move it to the top\n    if (this.s > 0) {\n      if (this.y > canvas.height) {\n        this.y = -this.h;\n        this.x = Math.random() * canvas.width;\n      }\n    } else {\n      if (this.y < 0) {\n        this.y = canvas.height + this.h;\n        this.x = Math.random() * canvas.width;\n      }\n    }\n  };\n}\n\nclass Snowfall {\n  requestAnimationFrame;\n\n  // Constructor takes parameters for creating snowflakes\n  constructor(options = {}) {\n    let {\n      count = 100,\n      minRadius = 10,\n      maxRadius = 30,\n      minSpeed = 3,\n      maxSpeed = 10,\n      text = \"❄\",\n      color = \"#99ccff\",\n      zIndex = \"1000\",\n    } = options;\n\n    count = Number(count);\n    minRadius = Number(minRadius);\n    if (minRadius <= 0) {\n      minRadius = 10;\n    }\n    maxRadius = Number(maxRadius);\n    if (maxRadius <= 0) {\n      maxRadius = 30;\n    }\n    minSpeed = Number(minSpeed);\n    maxSpeed = Number(maxSpeed);\n\n    const snowfieldCanvas = document.createElement(\"canvas\");\n    snowfieldCanvas.id = \"snowfall\";\n    snowfieldCanvas.style.zIndex = zIndex;\n    snowfieldCanvas.style.position = \"absolute\";\n    snowfieldCanvas.style.top = \"0\";\n    snowfieldCanvas.style.left = \"0\";\n    snowfieldCanvas.style.pointerEvents = \"none\";\n\n    document.body.append(snowfieldCanvas);\n\n    // Get the canvas element by id\n    this.canvas = snowfieldCanvas;\n    // Get the drawing context on the canvas\n    this.ctx = this.canvas.getContext(\"2d\");\n    // Set the width and height of the canvas equal to the width and height of the browser window\n    this.resizeCanvas();\n    // Add an event handler to resize the canvas when the window size changes\n    window.addEventListener(\"resize\", () => {\n      // Use requestAnimationFrame to optimize the resizing\n      requestAnimationFrame(this.resizeCanvas.bind(this));\n    });\n\n    // Create an array to store the snowflakes\n    this.snowflakes = [];\n    // Set the number of snowflakes\n    this.count = count;\n    // Set the minimum and maximum radius of the snowflakes\n    this.minRadius = minRadius;\n    this.maxRadius = maxRadius;\n    // Set the speed of the snowflakes\n    this.minSpeed = minSpeed;\n    this.maxSpeed = maxSpeed;\n    // Set the color of the snowflakes\n    this.color = color;\n    // Set the text\n    this.text = text;\n    // Call the function to create the snowflakes\n    this.createSnowflakes();\n    // Call the function to animate the snowflakes\n    this.animateSnowflakes();\n  }\n\n  // Function to resize the canvas\n  resizeCanvas = () => {\n    let oldCanvasWidth, oldCanvasHeight;\n    if (this.snowflakes) {\n      oldCanvasWidth = this.canvas.width;\n      oldCanvasHeight = this.canvas.height;\n    }\n    this.canvas.style.display = \"none\";\n\n    // Set the width and height of the canvas equal to the width and height of the browser window\n    if (window.devicePixelRatio > 1) {\n      let scrollWidth = document.documentElement.scrollWidth;\n      let scrollHeight = document.documentElement.scrollHeight;\n      this.canvas.width = scrollWidth * window.devicePixelRatio;\n      this.canvas.height = scrollHeight * window.devicePixelRatio;\n      this.canvas.style.width = scrollWidth + \"px\";\n      this.canvas.style.height = scrollHeight + \"px\";\n      this.ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    } else {\n      this.canvas.width = document.documentElement.scrollWidth;\n      this.canvas.height = document.documentElement.scrollHeight;\n    }\n    this.canvas.style.display = \"\";\n    if (this.snowflakes) {\n      let newCanvasWidth = this.canvas.width;\n      let newCanvasHeight = this.canvas.height;\n      // Loop through the array of snowflakes\n      for (let snowflake of this.snowflakes) {\n        // Update the position of the snowflake after resizing the canvas\n        snowflake.updateAfterCanvasResize(\n          oldCanvasWidth,\n          oldCanvasHeight,\n          newCanvasWidth,\n          newCanvasHeight\n        );\n      }\n    }\n  };\n\n  // Function to create snowflakes and add them to the array\n  createSnowflakes = () => {\n    // Loop through the number of snowflakes\n    for (let i = 0; i < this.count; i++) {\n      // Generate a random radius within the minimum and maximum radius\n      let r =\n        this.minRadius + Math.random() * (this.maxRadius - this.minRadius);\n      // Generate the speed based on the size of the snowflake\n      let rp;\n      if (this.minRadius !== this.maxRadius) {\n        rp = (r - this.minRadius) / ((this.maxRadius - this.minRadius) / 100);\n      } else {\n        rp = 100;\n      }\n      let s = this.minSpeed + ((this.maxSpeed - this.minSpeed) / 100) * rp;\n      // Create a new snowflake object with the given parameters\n      let snowflake = new Snowflake(this.canvas, r, s, this.color, this.text);\n      // Add the snowflake to the array\n      this.snowflakes.push(snowflake);\n    }\n  };\n\n  // Function to animate the snowflakes\n  animateSnowflakes = () => {\n    // Clear the canvas\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Loop through the array of snowflakes\n    for (let snowflake of this.snowflakes) {\n      // Draw the snowflake on the canvas\n      snowflake.draw(this.ctx);\n      // Update the position of the snowflake\n      snowflake.update(this.canvas);\n    }\n    // Request a new animation frame\n    this.requestAnimationFrame = requestAnimationFrame(this.animateSnowflakes);\n  };\n\n  // Method to destroy the snowfall and remove the canvas element\n  destroy = () => {\n    cancelAnimationFrame(this.requestAnimationFrame);\n    document.getElementById(\"snowfall\").remove();\n    for (let name in this) {\n      delete this[name];\n    }\n    // Empty the array of snowflakes\n    this.snowflakes = [];\n    // Remove the event listener for resize\n    window.removeEventListener(\"resize\", this.resizeCanvas);\n  };\n}\n\nexport default function runSnowfall() {\n  const shouldRun = checkDataRange();\n  if (shouldRun) {\n    const snowfall = new Snowfall({\n      // number of snowflakes\n      count: 100,\n      // min/max size\n      minRadius: 10,\n      maxRadius: 30,\n      // min/max speed\n      minSpeed: 1,\n      maxSpeed: 3,\n      // custom symbol or text for snowflakes\n      text: \"\\u2744\",\n      // color of snowflakes\n      color: \"#ffffff\",\n      // z-index for the canvas\n      zIndex: \"1000\",\n    });\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import initMap from \"./maps.js\";\nimport runSnowfall from \"./snowfall.js\";\n\ninitMap();\nrunSnowfall();\n"],"names":[],"sourceRoot":""}